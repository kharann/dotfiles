"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const affReader_1 = require("./affReader");
const fileReader_1 = require("./fileReader");
const operators_1 = require("rxjs/operators");
const monitor = require("./monitor");
class HunspellReader {
    constructor(src) {
        this.src = src;
        this.aff = src.aff;
    }
    /**
     * @internal
     */
    readDicWords() {
        return this.src.dic.pipe(operators_1.skip(1), // The first entry is the count of entries.
        operators_1.map(line => {
            const [word, rules] = line.split('/', 2);
            return { word, rules };
        }));
    }
    readWordsRx() {
        const r = this.src.dic.pipe(operators_1.tap(() => monitor.incCounter('cntIn')), operators_1.flatMap(dicWord => this.aff.applyRulesToDicEntry(dicWord)), operators_1.tap(() => monitor.incCounter('cntOut')));
        return r;
    }
    /**
     * Reads all the word combinations out of a hunspell dictionary.
     */
    readWords() {
        return this.readWordsRx()
            .pipe(operators_1.map(affWord => affWord.word));
    }
    /**
     * Reads the words in the dictionary without applying the transformation rules.
     */
    readRootWords() {
        return this.readDicWords()
            .pipe(operators_1.map(w => w.word));
    }
    /**
     * @internal
     */
    static readDicEntries(aff, dicFile) {
        return fileReader_1.lineReader(dicFile, aff.affInfo.SET);
    }
    static createFromFiles(affFile, dicFile) {
        return affReader_1.parseAffFileToAff(affFile)
            .then(aff => {
            return new HunspellSrcInfoWithGetDic(aff, () => HunspellReader.readDicEntries(aff, dicFile));
        })
            .then(src => new HunspellReader(src));
    }
}
exports.HunspellReader = HunspellReader;
class HunspellSrcInfoWithGetDic {
    constructor(aff, getDic) {
        this.aff = aff;
        this.getDic = getDic;
    }
    get dic() {
        return this.getDic();
    }
}
exports.HunspellSrcInfoWithGetDic = HunspellSrcInfoWithGetDic;
//# sourceMappingURL=HunspellReader.js.map