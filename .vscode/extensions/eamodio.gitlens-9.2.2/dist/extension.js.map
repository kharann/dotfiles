{"version":3,"sources":["file:///webpack/bootstrap","file:///external \"vscode\"","file:///external \"path\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\parse\\index.js","file:///external \"fs\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\safer-buffer\\safer.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_days\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\compare_asc\\index.js","file:///external \"buffer\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\locale\\en\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_days\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_months\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\lib\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\vsls\\vscode.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_date\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_days_in_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\compare_desc\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_months\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_week\\index.js","file:///external \"stream\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\index.js","file:///external \"crypto\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_iso_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_quarters\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\add_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_iso_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_months\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_days\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_iso_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\distance_in_words\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_day_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_valid\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_leap_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_iso_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_hour\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_hour\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_minute\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_minute\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_second\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_second\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_month\\index.js","file:///external \"child_process\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\are_ranges_overlapping\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\closest_index_to\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\closest_to\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_iso_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_quarters\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_calendar_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_iso_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_quarters\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\difference_in_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\locale\\en\\build_distance_in_words_locale\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\locale\\en\\build_format_locale\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\locale\\_lib\\build_formatting_tokens_reg_exp\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\distance_in_words_strict\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\distance_in_words_to_now\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\each_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_hour\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_minute\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_second\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_today\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_tomorrow\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\end_of_yesterday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\format\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_date\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_days_in_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_iso_weeks_in_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_overlapping_days_in_ranges\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_time\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\get_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_after\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_before\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_equal\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_first_day_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_friday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_future\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_last_day_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_monday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_past\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_same_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_saturday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_sunday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_hour\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_minute\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_second\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_this_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_thursday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_today\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_tomorrow\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_tuesday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_wednesday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_weekend\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_within_range\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\is_yesterday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_iso_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\last_day_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\max\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\min\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_date\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_day_of_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_iso_day\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_iso_week\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_quarter\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\set_year\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_month\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_today\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_tomorrow\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\start_of_yesterday\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_days\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_hours\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_milliseconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_minutes\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_months\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_quarters\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_seconds\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_weeks\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\date-fns\\sub_years\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\lib\\bom-handling.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\index.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\internal.js","file:///external \"string_decoder\"","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\utf16.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\utf7.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\sbcs-codec.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\sbcs-data.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\sbcs-data-generated.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\dbcs-codec.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\encodings\\dbcs-data.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\lib\\streams.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\iconv-lite\\lib\\extend-node.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\tslib\\tslib.es6.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\comparers.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\ui\\config.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\constants.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\object.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\array.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\date.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\isObject.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_freeGlobal.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_root.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\now.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_Symbol.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_getRawTag.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_objectToString.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\_baseGetTag.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\isObjectLike.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\isSymbol.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\toNumber.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\debounce.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\toFinite.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\toInteger.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\before.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\node_modules\\lodash-es\\once.js","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\function.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\decorators\\gate.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\string.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\decorators\\log.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\iterable.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\version.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\system\\searchTree.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\logger.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\annotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\messages.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\trackedDocument.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\documentTracker.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\gitDocumentTracker.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\shell.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\locator.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\formatters\\formatter.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\formatters\\commitFormatter.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\gitUri.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\file.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\formatters\\statusFormatter.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\commit.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\blameCommit.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\status.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\branch.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\diffParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\diff.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\logCommit.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\remote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\provider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\azure-devops.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\bitbucket.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\bitbucket-server.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\custom.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\github.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\gitlab.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\remotes\\factory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\repository.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\stashCommit.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\models\\tag.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\blameParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\branchParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\logParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\remoteParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\stashParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\statusParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\tagParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\parsers\\treeParser.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\git.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\vsls\\protocol.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\vsls\\host.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\vsls\\guest.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\vsls\\vsls.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\gitService.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\ui\\shared\\colors.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\annotations.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\blameAnnotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\gutterBlameAnnotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\heatmapBlameAnnotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\recentChangesAnnotationProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\fileAnnotationController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\annotations\\lineAnnotationController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\codelens\\codeLensProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\codelens\\codeLensController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\git\\fsProvider.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\hovers\\lineHoverController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\keyboard.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\statusbar\\statusBarController.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\lineTracker.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\trackers\\gitLineTracker.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\viewNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\commitFileNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\folderNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\commitNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\common.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\helpers.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\branchTrackingStatusNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\branchNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\branchOrTagFolderNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\branchesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\fileHistoryNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\commonQuickPicks.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\branchesAndTagsQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\remotesQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\branchHistoryQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\commitFileQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\commitQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\commitsQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\fileHistoryQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\repositoriesQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\repoStatusQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\stashListQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\fileHistoryTrackerNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\lineHistoryNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\lineHistoryTrackerNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\remoteNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\remotesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\viewBase.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\common.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\stashFileNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\stashNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\stashesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\statusFileNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\statusFilesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\tagNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\tagsNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\repositoryNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\repositoriesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\resultsCommitsNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\resultsFileNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\resultsFilesNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\compareResultsNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\comparePickerNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\compareNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\searchNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\nodes\\searchResultsCommitsNode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\compareView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\fileHistoryView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\lineHistoryView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\repositoriesView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\searchView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\views\\viewCommands.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\webviews\\webviewEditor.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\webviews\\settingsEditor.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\webviews\\welcomeEditor.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\container.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\configuration.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\annotations.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\closeUnchangedFiles.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\copyMessageToClipboard.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\copyRemoteFileUrlToClipboard.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\copyShaToClipboard.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffBranchWithBranch.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffDirectory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffLineWithPrevious.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffLineWithWorking.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWith.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithBranch.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithNext.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithPrevious.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithRevision.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\diffWithWorking.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\externalDiff.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openBranchesInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openBranchInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openChangedFiles.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openCommitInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openFileInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openFileRevision.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openRepoInRemote.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\openWorkingFile.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\repositories.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\resetSuppressedWarnings.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\searchCommits.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showLastQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickBranchHistory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickCommitDetails.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickCommitFileDetails.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickCurrentBranchHistory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickFileHistory.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickRepoStatus.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showQuickStashList.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\showView.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\stashApply.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\stashDelete.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\stashSave.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\supportGitLens.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\switchMode.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\quickpicks\\modesQuickPick.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\commands\\toggleCodeLens.ts","file:///C:\\Users\\Eric\\code\\vscode-gitlens\\src\\extension.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","isDate","MILLISECONDS_IN_HOUR","MILLISECONDS_IN_MINUTE","DEFAULT_ADDITIONAL_DIGITS","parseTokenDateTimeDelimeter","parseTokenPlainTime","parseTokenYY","parseTokensYYY","parseTokenYYYY","parseTokensYYYYY","parseTokenMM","parseTokenDDD","parseTokenMMDD","parseTokenWww","parseTokenWwwD","parseTokenHH","parseTokenHHMM","parseTokenHHMMSS","parseTokenTimezone","parseTokenTimezoneZ","parseTokenTimezoneHH","parseTokenTimezoneHHMM","dayOfISOYear","isoYear","week","day","date","Date","setUTCFullYear","diff","getUTCDay","setUTCDate","getUTCDate","argument","dirtyOptions","getTime","additionalDigits","Number","dateStrings","dateString","timeString","array","split","test","token","exec","time","replace","timezone","splitDateString","parseYearResult","parseTokenYYY","parseTokenYYYYY","yearString","year","parseInt","restDateString","slice","length","centuryString","parseYear","month","dayOfYear","dayOfWeek","parseDate","offset","timestamp","hours","minutes","parseFloat","seconds","parseTime","timezoneString","absoluteOffset","getTimezoneOffset","parse","startOfISOWeek","dirtyDate","getFullYear","fourthOfJanuaryOfNextYear","setFullYear","setHours","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfWeek","weekStartsOn","buffer","Buffer","safer","Safer","from","Uint8Array","encodingOrOffset","TypeError","alloc","size","fill","encoding","RangeError","buf","kStringMaxLength","process","binding","e","constants","MAX_LENGTH","kMaxLength","MAX_STRING_LENGTH","dirtyAmount","amount","setDate","getDate","getISOYear","fourthOfJanuary","dirtyDateLeft","dirtyDateRight","timeLeft","timeRight","buildDistanceInWordsLocale","buildFormatLocale","distanceInWords","format","getDay","startOfDay","MILLISECONDS_IN_DAY","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","Math","round","getDaysInMonth","desiredMonth","getMonth","dateWithDesiredMonth","daysInMonth","setMonth","min","dateLeft","dateRight","bomHandling","iconv","encodings","defaultCharUnicode","defaultCharSingleByte","encode","str","options","encoder","getEncoder","res","write","trail","end","concat","decode","skipDecodeWarning","console","error","decoder","getDecoder","encodingExists","enc","getCodec","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecOptions","codec","codecDef","encodingName","type","Error","toLowerCase","bomAware","addBOM","PrependBOM","stripBOM","StripBOM","nodeVer","versions","node","nodeVerArr","map","vscode","async","getApi","liveshareExtension","extensions","getExtension","extensionId","extensionApi","isActive","activate","getApiAsync","Role","Access","View","ViewItem","monthIndex","lastDayOfMonth","addDays","differenceInCalendarMonths","compareAsc","sign","difference","abs","differenceInMilliseconds","floor","ceil","startOfISOYear","MILLISECONDS_IN_WEEK","dateLeftStartOfWeek","dateRightStartOfWeek","addHours","addISOYears","addMilliseconds","addMinutes","addMonths","addQuarters","addSeconds","addWeeks","addYears","areRangesOverlapping","closestIndexTo","closestTo","compareDesc","differenceInCalendarDays","differenceInCalendarISOWeeks","differenceInCalendarISOYears","differenceInCalendarQuarters","differenceInCalendarWeeks","differenceInCalendarYears","differenceInDays","differenceInHours","differenceInISOYears","differenceInMinutes","differenceInMonths","differenceInQuarters","differenceInSeconds","differenceInWeeks","differenceInYears","distanceInWordsStrict","distanceInWordsToNow","eachDay","endOfDay","endOfHour","endOfISOWeek","endOfISOYear","endOfMinute","endOfMonth","endOfQuarter","endOfSecond","endOfToday","endOfTomorrow","endOfWeek","endOfYear","endOfYesterday","getDayOfYear","getDaysInYear","getHours","getISODay","getISOWeek","getISOWeeksInYear","getMilliseconds","getMinutes","getOverlappingDaysInRanges","getQuarter","getSeconds","getYear","isAfter","isBefore","isEqual","isFirstDayOfMonth","isFriday","isFuture","isLastDayOfMonth","isLeapYear","isMonday","isPast","isSameDay","isSameHour","isSameISOWeek","isSameISOYear","isSameMinute","isSameMonth","isSameQuarter","isSameSecond","isSameWeek","isSameYear","isSaturday","isSunday","isThisHour","isThisISOWeek","isThisISOYear","isThisMinute","isThisMonth","isThisQuarter","isThisSecond","isThisWeek","isThisYear","isThursday","isToday","isTomorrow","isTuesday","isValid","isWednesday","isWeekend","isWithinRange","isYesterday","lastDayOfISOWeek","lastDayOfISOYear","lastDayOfQuarter","lastDayOfWeek","lastDayOfYear","max","setDay","setDayOfYear","setISODay","setISOWeek","setISOYear","setMilliseconds","setMinutes","setQuarter","setSeconds","setYear","startOfHour","startOfMinute","startOfMonth","startOfQuarter","startOfSecond","startOfToday","startOfTomorrow","startOfYear","startOfYesterday","subDays","subHours","subISOYears","subMilliseconds","subMinutes","subMonths","subQuarters","subSeconds","subWeeks","subYears","dirtyISOYear","enLocale","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","dirtyDateToCompare","comparison","locale","localize","localizeOptions","addSuffix","Boolean","months","includeSeconds","monthsSinceStartOfYear","years","cleanDate","isNaN","toString","dateLeftStartOfHour","dateRightStartOfHour","dateLeftStartOfYear","dateRightStartOfYear","dateLeftStartOfMinute","dateRightStartOfMinute","dateLeftStartOfQuarter","dateRightStartOfQuarter","currentMonth","dateLeftStartOfSecond","dateRightStartOfSecond","dirtyMonth","dirtyInitialRangeStartDate","dirtyInitialRangeEndDate","dirtyComparedRangeStartDate","dirtyComparedRangeEndDate","initialStartTime","initialEndTime","comparedStartTime","comparedEndTime","dirtyDatesArray","Array","result","minDistance","timeToCompare","forEach","index","currentDate","distance","undefined","startOfISOWeekLeft","startOfISOWeekRight","startOfWeekLeft","startOfWeekRight","distanceInWordsLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","count","buildFormattingTokensRegExp","months3char","monthsFull","weekdays2char","weekdays3char","weekdaysFull","meridiemUppercase","meridiemLowercase","meridiemFull","formatters","MMM","MMMM","dd","ddd","dddd","A","a","aa","formatterToken","number","rem100","ordinal","formattingTokensRegExp","commonFormatterKeys","formatterKeys","push","formattingTokens","sort","reverse","RegExp","join","MINUTES_IN_YEAR","unit","mathPartial","partialMethod","String","now","dirtyStartDate","dirtyEndDate","dirtyStep","startDate","step","endTime","dates","M","MM","addLeadingZeros","Q","D","DD","DDD","DDDD","E","W","WW","YY","substr","YYYY","GG","GGGG","H","HH","h","hh","mm","ss","S","SS","SSS","Z","formatTimezone","ZZ","X","x","delimeter","absOffset","targetLength","output","dirtyFormatStr","formatStr","localeFormatters","formatter","input","match","Function","buildFormatFn","formatFn","thisYear","valueOf","differenceInMs","dateToCompare","dirtyLeftDate","dirtyRightDate","dateLeftStartOfDay","dateRightStartOfDay","tomorrow","startTime","yesterday","arguments","latestTimestamp","apply","earliestTimestamp","dirtyDayOfMonth","dayOfMonth","dirtyDay","currentDay","dirtyDayOfYear","dirtyHours","dirtyISOWeek","isoWeek","dirtyMilliseconds","milliseconds","dirtyMinutes","dirtyQuarter","dirtySeconds","dirtyYear","PrependBOMWrapper","this","StripBOMWrapper","pass","InternalCodec","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","utf8","cesu8","unicode11utf8","ucs2","utf16le","binary","base64","hex","_internal","InternalEncoder","InternalDecoder","StringDecoder","prevStr","acc","contBytes","accBytes","completeQuads","bufIdx","charCode","charCodeAt","curByte","fromCharCode","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","Utf16Codec","Utf16Encoder","Utf16Decoder","initialBytes","initialBytesLen","detectEncoding","defaultEncoding","asciiCharsLE","asciiCharsBE","_len","utf16be","tmp","buf2","j","utf16","Utf7Codec","utf7","unicode11utf7","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","chunk","base64Regex","base64Chars","plusChar","minusChar","andChar","Utf7IMAPCodec","Utf7IMAPEncoder","base64AccumIdx","Utf7IMAPDecoder","lastI","b64str","canBeDecoded","utf7imap","uChar","base64IMAPChars","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","SBCSEncoder","SBCSDecoder","_sbcs","newBuf","idx1","idx2","10029","maccenteuro","808","ibm808","cp808","mik","ascii8bit","usascii","ansix34","ansix341968","ansix341986","csascii","cp367","ibm367","isoir6","iso646us","iso646irv","us","latin1","latin2","latin3","latin4","latin5","latin6","latin7","latin8","latin9","latin10","csisolatin1","csisolatin2","csisolatin3","csisolatin4","csisolatincyrillic","csisolatinarabic","csisolatingreek","csisolatinhebrew","csisolatin5","csisolatin6","l1","l2","l3","l4","l5","l6","l7","l8","l9","l10","isoir14","isoir57","isoir100","isoir101","isoir109","isoir110","isoir144","isoir127","isoir126","isoir138","isoir148","isoir157","isoir166","isoir179","isoir199","isoir203","isoir226","cp819","ibm819","cyrillic","arabic","arabic8","ecma114","asmo708","greek","greek8","ecma118","elot928","hebrew","hebrew8","turkish","turkish8","thai","thai8","celtic","celtic8","isoceltic","tis6200","tis62025291","tis62025330","10000","10006","10007","10079","10081","cspc8codepage437","cspc775baltic","cspc850multilingual","cspcp852","cspc862latinhebrew","cpgr","msee","mscyrl","msansi","msgreek","msturk","mshebr","msarab","winbaltrim","cp20866","20866","ibm878","cskoi8r","cp21866","21866","ibm1168","strk10482002","tcvn5712","tcvn57121","gb198880","cn","csiso14jisc6220ro","jisc62201969ro","jp","cshproman8","r8","roman8","xroman8","ibm1051","mac","csmacintosh","437","737","775","850","852","855","856","857","858","860","861","862","863","864","865","866","869","874","922","1046","1124","1125","1129","1133","1161","1162","1163","1250","1251","1252","1253","1254","1255","1256","1257","1258","28591","28592","28593","28594","28595","28596","28597","28598","28599","28600","28601","28603","28604","28605","28606","windows874","win874","cp874","windows1250","win1250","cp1250","windows1251","win1251","cp1251","windows1252","win1252","cp1252","windows1253","win1253","cp1253","windows1254","win1254","cp1254","windows1255","win1255","cp1255","windows1256","win1256","cp1256","windows1257","win1257","cp1257","windows1258","win1258","cp1258","iso88591","cp28591","iso88592","cp28592","iso88593","cp28593","iso88594","cp28594","iso88595","cp28595","iso88596","cp28596","iso88597","cp28597","iso88598","cp28598","iso88599","cp28599","iso885910","cp28600","iso885911","cp28601","iso885913","cp28603","iso885914","cp28604","iso885915","cp28605","iso885916","cp28606","cp437","ibm437","csibm437","cp737","ibm737","csibm737","cp775","ibm775","csibm775","cp850","ibm850","csibm850","cp852","ibm852","csibm852","cp855","ibm855","csibm855","cp856","ibm856","csibm856","cp857","ibm857","csibm857","cp858","ibm858","csibm858","cp860","ibm860","csibm860","cp861","ibm861","csibm861","cp862","ibm862","csibm862","cp863","ibm863","csibm863","cp864","ibm864","csibm864","cp865","ibm865","csibm865","cp866","ibm866","csibm866","cp869","ibm869","csibm869","cp922","ibm922","csibm922","cp1046","ibm1046","csibm1046","cp1124","ibm1124","csibm1124","cp1125","ibm1125","csibm1125","cp1129","ibm1129","csibm1129","cp1133","ibm1133","csibm1133","cp1161","ibm1161","csibm1161","cp1162","ibm1162","csibm1162","cp1163","ibm1163","csibm1163","maccroatian","maccyrillic","macgreek","maciceland","macroman","macromania","macthai","macturkish","macukraine","koi8r","koi8u","koi8ru","koi8t","armscii8","rk1048","tcvn","georgianacademy","georgianps","pt154","viscii","iso646cn","iso646jp","hproman8","macintosh","ascii","tis620","_dbcs","DBCSCodec","UNASSIGNED","GB18030_CODE","NODE_START","UNASSIGNED_NODE","table","mappingTable","decodeTables","decodeTableSeq","_addDecodeChunk","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","val","to","_fillEncodeTable","encodeAdd","_setEncodeChar","defCharSB","gb18030","thirdByteNodeIdx","thirdByteNode","fourthByteNodeIdx","fourthByteNode","secondByteNodeIdx","secondByteNode","DBCSEncoder","leadSurrogate","seqObj","DBCSDecoder","nodeIdx","prevBuf","findIdx","mid","_getDecodeTrieNode","addr","bytes","curAddr","writeTable","k","part","code","codeTrail","len","seq","_getEncodeBucket","uCode","high","dbcsCode","bucket","low","_setEncodeSequence","oldVal","prefix","mbCode","nextChar","resCode","subtable","idx","uChars","gbChars","prevBufOffset","seqStart","curSeq","ptr","uCodeLead","ret","shiftjis","¥","‾","csshiftjis","mskanji","sjis","windows31j","ms31j","xsjis","windows932","ms932","932","cp932","eucjp","gb2312","gb231280","gb23121980","csgb2312","csiso58gb231280","euccn","windows936","ms936","936","cp936","gbk","xgbk","isoir58","€","chinese","windows949","ms949","949","cp949","cseuckr","csksc56011987","euckr","isoir149","korean","ksc56011987","ksc56011989","ksc5601","windows950","ms950","950","cp950","big5","big5hkscs","cnbig5","csbig5","xxbig5","Transform","IconvLiteEncoderStream","conv","decodeStrings","IconvLiteDecoderStream","encodeStream","decodeStream","supportsStreams","_collect","collect","constructor","_transform","done","_flush","cb","chunks","on","isBuffer","original","supportsNodeEncodingsExtension","extendNodeEncodings","nodeNativeEncodings","utf-8","ucs-2","utf-16le","isNativeEncoding","SlowBuffer","SlowBufferToString","start","SlowBufferWrite","string","isFinite","swap","remaining","copy","BufferIsEncoding","isEncoding","BufferByteLength","byteLength","BufferToString","BufferWrite","_offset","_length","_encoding","Readable","ReadableSetEncoding","setEncoding","_readableState","undoExtendNodeEncodings","__rest","indexOf","getOwnPropertySymbols","__decorate","decorators","target","desc","getOwnPropertyDescriptor","Reflect","decorate","Comparer","textDocumentComparer","TextDocumentComparer","[object Object]","lhs","rhs","textEditorComparer","TextEditorComparer","useId","usePosition","viewColumn","document","equals","id","uriComparer","UriComparer","scheme","fsPath","AnnotationsToggleMode","CodeLensCommand","CodeLensScopes","CustomRemoteType","DateStyle","FileAnnotationType","GravatarDefaultStyle","HighlightLocations","KeyMap","LogLevel","StatusBarCommand","ViewBranchesLayout","ViewFilesLayout","extensionOutputChannelName","extensionQualifiedId","extensionTerminalName","BuiltInCommands","CommandContext","DocumentSchemes","GlyphChars","GlobalState","setCommandContext","external_vscode_","executeCommand","SetContext","isActiveDocument","editor","activeTextEditor","isTextEditor","uri","Output","DebugConsole","ImageMimetypes",".png",".gif",".jpg",".jpeg",".jpe",".webp",".tif",".tiff",".bmp","WorkspaceState","Objects","array_Arrays","entries","flatten","stringify","flattened","_flatten","JSON","isArray","isEmpty","paths","path","results","child","values","Arrays","compactHierarchy","root","joinPath","isRoot","children","relativePath","countUniques","source","accessor","uniqueCounts","item","filterMap","predicateMapper","reduce","accumulator","current","mapped","filterMapAsync","groupBy","groupings","groupByMap","group","set","Map","groupByFilterMap","makeHierarchical","splitPath","compact","seed","descendants","hierarchy","folder","folderName","f","uniqueBy","predicate","uniqueValues","filter","date_patch","formatterOptions","date_Dates","Dates","newDate","MillisecondsPerMinute","MillisecondsPerHour","MillisecondsPerDay","dateDaysFromNow","toFormatter","fromNow","date_fns","lodash_es_isObject","_freeGlobal","global","freeSelf","self","lodash_es_root","lodash_es_now","_Symbol","objectProto","_getRawTag_hasOwnProperty","nativeObjectToString","symToStringTag","_getRawTag","isOwn","tag","unmasked","_objectToString_nativeObjectToString","_objectToString","nullTag","undefinedTag","_baseGetTag_symToStringTag","_baseGetTag","lodash_es_isObjectLike","symbolTag","lodash_es_isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","lodash_es_toNumber","isBinary","FUNC_ERROR_TEXT","nativeMax","nativeMin","lodash_es_debounce","func","wait","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","args","thisArg","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","cancel","clearTimeout","flush","INFINITY","MAX_INTEGER","lodash_es_toFinite","lodash_es_toInteger","remainder","before_FUNC_ERROR_TEXT","lodash_es_before","function_Functions","lodash_es_once","gate","descriptor","fn","gateKey","configurable","writable","promise","isPromise","then","Functions","cachedOnce","cached","Promise","resolve","cancellable","reject","onCancellationRequested","debounce","_a","assign","track","opts","pending","tracked","comma","empty","openBrace","openParen","closeParen","fnBodyRegex","fnBodyStripCommentsRegex","fnBodyStripParamDefaultValueRegex","ms","getParameters","fnBody","open","close","param","trim","once","propOf","propOfCore","interval","timer","disposable","dispose","clearInterval","setInterval","waitUntil","timeout","counter","string_Strings","Strings","getDurationMilliseconds","secs","nanosecs","hrtime","pathNormalizeRegex","pathStripTrailingSlashRegex","tokenRegex","tokenSanitizeRegex","padLeft","padTo","padding","width","getWidth","repeat","padRight","getTokensFromTemplate","template","tokens","truncateTo","option","suffix","collapseWhitespace","padDirection","interpolate","context","lines","substring","md5","external_crypto_","update","digest","normalizePath","fileName","stripTrailingSlash","normalized","addLeadingSlash","pad","before","after","padLeftOrTruncate","truncate","padOrTruncate","left","padRightOrTruncate","pluralize","zero","plural","illegalCharsForFSRegex","ellipsis","sanitizeForFileSystem","replacement","sha1","ansiRegex","containsNonAsciiRegex","emoji","joiners","graphemes","codePointAt","isFullwidthCodePoint","cp","log_correlationContext","correlationCounter","clearCorrelationContext","correlationId","delete","LogInstanceNameFn","log_debug","timed","log_log","debug","logFn","logger_Logger","log","parameters","MAX_SAFE_INTEGER","level","Debug","Verbose","condition","instanceName","toLoggableName","correlate","correlationContext","instance","setCorrelationContext","enter","loggableParams","singleLine","argFns","argFn","loggable","v","toLoggable","sanitize","logWithDebugParams","exit","logError","ex","timing","exitDetails","logResult","catch","Iterables","Versions","some","next","every","find","first","iterator","flatMap","mapper","has","isIterable","separator","last","skip","take","union","sources","StringIterator","_value","_pos","PathIterator","_from","_to","justSeps","ch","aPos","aLen","thisPos","cmp","TernarySearchTreeNode","right","searchTree_TernarySearchTree","segments","_iter","_root","element","iter","reset","segment","hasNext","oldElement","stack","dir","parent","pop","candidate","limit","_nodeIterator","data","_forEach","callback","_iterator","major","minor","patch","pre","compare","v1","v2","localeCompare","fromString","version","ver","ConsolePrefix","isDebuggingRegex","loggableFn","customLoggableFn","subscriptions","configuration","onDidChange","onConfigurationChanged","initializingChangeEvent","section","changed","Silent","createOutputChannel","contextOrMessage","params","isDebugging","message","shift","appendLine","toLoggableParams","warn","show","toISOString","getUTCMilliseconds","command","gitOutput","debugOnly","_isDebugging","env","VSCODE_DEBUGGING_EXTENSION","AnnotationStatus","annotationProvider_AnnotationProviderBase","trackedDocument","decoration","highlightDecoration","correlationKey","getCorrelationKey","onDidChangeTextEditorSelection","onTextEditorSelectionChanged","clear","textEditor","selection","selections","active","line","editorId","editorUri","status","setDecorations","additionalDecorations","_b","_c","changes","_resetDebounced","onReset","provideAnnotation","_disposed","Computing","decorations","ranges","Computed","shaOrLine","onProvideAnnotation","SuppressedMessages","messages_Messages","commit","showMessage","CommitHasNoPreviousCommitWarning","shortSha","author","formattedDate","CommitNotFoundWarning","title","showOutputChannel","FileNotUnderSourceControlWarning","GitDisabledWarning","GitVersionWarning","LineUncommittedWarning","NoRepositoryWarning","actions","ViewsHideSupportGitLens","suppressedMessage","SupportGitLensNotification","Open","Commands","ShowWelcomePage","suppressionKey","dontShowAgain","showInformationMessage","showWarningMessage","showErrorMessage","messages","Global","trackedDocument_TrackedDocument","_document","dirty","_eventDelegates","_onDidBlameStateChange","_forceDirtyStateChangeOnNextDocumentChange","_hasRemotes","_isDirtyIdle","_isTracked","_blameFailed","_repo","initialize","onDidBlameStateChange","event","_disposable","container_Container","git","_uri","gitUri_GitUri","fromUri","repo","getRepository","onRepositoryChanged","initializing","RepositoryChange","Repository","forceDirtyStateChangeOnNextDocumentChange","hasRemotes","isBlameable","isDirtyIdle","isRevision","sha","isTracked","lineCount","ActiveFileStatus","getStatus","reason","state","wasBlameable","forceBlameChange","getEditorIfActive","blameable","fire","documentTracker_DocumentTracker","_onDidChangeBlameState","_onDidChangeDirtyState","_onDidTriggerDirtyIdle","_documentMap","onDidChangeActiveTextEditor","onActiveTextEditorChanged","onDidChangeTextDocument","onTextDocumentChanged","onDidCloseTextDocument","onTextDocumentClosed","onDidSaveTextDocument","onTextDocumentSaved","onDidChangeBlameState","onDidChangeDirtyState","onDidTriggerDirtyIdle","_dirtyIdleTriggerDelay","_dirtyIdleTriggeredDebounced","_timer","doc","addCore","File","Vsls","isDirty","resetForceDirtyStateChangeOnNextDocumentChange","fireDocumentDirtyStateChanged","documentOrId","_add","_get","toKey","openTextDocument","documentUri","useVersionedPath","msg","includes","BinaryTextDocument","MissingRevisionTextDocument","ensureInitialized","setImmediate","_dirtyStateChangedDebounced","documentTracker_EmptyTextDocument","gitUri","eol","LF","isClosed","isUntitled","languageId","range","position","regex","GitDocumentState","cache","gitDocumentTracker_GitDocumentTracker","isWindows","platform","runDownPath","exe","external_path_","external_fs_","haystack","PATH","needle","RunError","exitCode","super","captureStackTrace","run","maxBuffer","stdin","stdinEncoding","proc","external_child_process_","err","stdout","stderr","lib","findSpecificGit","findExecutable","cmd","possibleExts","ext","possibleFullPath","SYSTEMROOT","execPath","raw","findSystemGitWin32","basePath","findGitPath","findGitDarwin","spaceReplacementRegex","formatter_Formatter","collapsableWhitespace","_item","_options","dateFormat","tokenOptions","dateFormatOrOptions","_formatter","emojiMap","emojiRegex","commitFormatter_CommitFormatter","_ago","_date","formatDate","_agoOrDate","dateStyle","config","defaultDateStyle","Absolute","ago","_padOrTruncate","agoOrDate","authorAgo","authorAgoOrDate","logCommit_GitLogCommit","GitCommitType","getFormattedDiffStatus","changesShort","isStagedUncommitted","isUncommitted","truncateMessageAtNewLine","Space","Ellipsis","fromTemplateCore","gitUri_empty","slash","commitOrRepoPath","GitLens","query","authority","fragment","repoPath","gitService_GitService","ref","ensureValidUNCPath","versionedPath","shortenSha","file","relativeTo","getDirectory","Dot","directory","useVslsScheme","vsls","isMaybeGuest","with","previous","previousUri","previousSha","fileOrName","resolveToUri","originalFileName","isTrackable","Git","getRepoPath","stagedUncommittedSha","fileNameOrUri","getFormattedPath","getRelativePath","normalizedFileName","normalizedRepoPath","startsWith","uriOrRef","fileNameOrFile","repoName","filePath","file_GitFile","GitFile","getFormattedDirectory","includeOriginal","ArrowLeft","statusIconsMap","!","?","C","R","T","U","B","getStatusIcon","statusOcticonsMap","getStatusOcticon","missing","statusTextMap","getStatusText","statusFormatter_StatusFileFormatter","working","statusFile","files","icon","workingTreeStatus","indexStatus","Pencil","SpaceThinnest","Check","SpaceThin","EnDash","gravatarCache","missingGravatarHash","CommitFormatting","commit_GitCommit","email","previousFileName","_fileName","_previousSha","isFile","_shortSha","git_Git","Blame","StashFile","isStash","Stash","_isStagedUncommitted","_isUncommitted","previousFileShortSha","previousFileSha","_resolvedPreviousFileSha","previousShortSha","workingUri","workingFileName","_dateFormatter","fallback","hash","gravatar","fromTemplate","resolveReference","fromCommit","change","blameCommit_GitBlameCommit","getChangedValue","status_GitStatus","branch","upstream","detached","branch_GitBranch","isDetached","formatDetached","_diff","added","deleted","getDiffStatus","expand","getUpstreamStatus","behind","ahead","ArrowDown","ArrowUp","status_GitStatusFile","staged","workTreeStatus","tracking","remote","_basename","getName","lastIndexOf","_name","getRemote","nameStatusDiffRegex","shortStatDiffRegex","unifiedDiffRegex","diffParser_GitDiffParser","currentStart","previousStart","diff_GitDiffChunk","currentLines","previousLines","removed","chunkLines","chunkLine","insertions","deletions","currentPosition","previousPosition","_chunk","_lines","parseChunk","committedDate","parentShas","isMerge","nextShortSha","nextSha","nextUri","nextFileName","GitRemoteType","RemoteResourceType","GitRemote","domain","provider","types","getNameFromRemoteResource","resource","Branch","Branches","Commit","Repo","Revision","provider_RemoteProvider","protocol","custom","baseUrl","url","clipboard","writeText","showGenericErrorMessage","openUrl","getUrlForBranch","getUrlForBranches","getUrlForCommit","getUrlForFile","getUrlForRepository","issueEnricherRegex","stripGitRegex","sshDomainRegex","sshPathRegex","azure_devops_AzureDevOpsRemote","bitbucket_issueEnricherRegex","prEnricherRegex","bitbucket_BitbucketRemote","formatName","bitbucket_server_issueEnricherRegex","bitbucket_server_prEnricherRegex","bitbucket_server_BitbucketServerRemote","project","custom_CustomRemote","urls","repository","getContext","branches","fileLine","fileRange","fileInCommit","fileInBranch","repoBase","github_issueEnricherRegex","issueEnricher3rdParyRegex","github_GitHubRemote","gitlab_issueEnricherRegex","gitlab_GitLabRemote","defaultProviders","factory_RemoteProviderFactory","providers","matcher","creator","cfg","rc","getCustomProvider","Bitbucket","BitbucketServer","Custom","GitHub","GitLab","RepositoryChangeEvent","solely","repository_Repository","onAnyRepositoryChanged","suspended","closed","_onDidChange","_onDidChangeFileSystem","_fireChangeDebounced","_fireFileSystemChangeDebounced","_fsWatchCounter","_pendingChanges","_closed","formattedName","normalizedPath","endsWith","_suspended","watcher","createFileSystemWatcher","onDidCreate","onDidDelete","onDidChangeFileSystem","stopWatchingFileSystem","_providers","loadProviders","_remotes","fireChange","Remotes","fireFileSystemChange","Stashes","_branch","Tags","Config","Closed","getWorkspaceFolder","progress","fetchCore","withProgress","location","Notification","fetch","getBranch","getBranches","getChangedFilesCount","stat","mtime","remotesCfg","getRemotesCore","getStashList","getStatusForRepo","getTags","remotes","getRemotes","pullCore","force","pushCore","fs","_fsWatcherDisposable","onFileSystemChanged","reasons","fireChangeCore","fireFileSystemChangeCore","uris","stashCommit_GitStashCommit","stashName","GitTag","annotation","blameParser_GitBlameParser","currentUser","authors","commits","lineParts","relativeFileName","entry","authorEmail","authorDate","authorTimeZone","summary","parseEntry","originalLine","b","branchWithTrackingRegex","branchWithTrackingStateRegex","branchParser_GitBranchParser","parseState","diffRegex","emptyEntry","logParser_GitLogParser","maxCount","recentCommit","truncationCount","parseFileName","matches","truncated","remoteRegex","urlRegex","remoteParser_GitRemoteParser","providerFactory","groups","parseGitUrl","uniqueness","stashParser_emptyEntry","stashParser_GitStashParser","fileNames","aheadStatusV1Regex","behindStatusV1Regex","statusParser_GitStatusParser","porcelainVersion","parseV1","parseV2","upstreamStatus","aheadStatus","behindStatus","rawStatus","file1","file2","parseStatusFile","tagWithRefRegex","tagWithAnnotationRegex","tagParser_GitTagParser","tags","treeRegex","GitTreeParser","trees","commitSha","rootSha","defaultBlameParams","defaultLogParams","defaultStashParams","GitErrors","badRevision","notAValidObjectName","GitWarnings","notARepository","outsideRepository","noPath","noCommits","notFound","foundButNotInRevision","headNotABranch","noUpstream","unknownRevision","mustRunInWorkTree","patchWithConflicts","noRemoteRepositorySpecified","remoteConnectionError","notAGitCommand","GitErrorHandling","pendingCommands","emptyArray","emptyObj","local","guest","cwd","configs","errors","errorHandling","runOpts","GCM_INTERACTIVE","GCM_PRESERVE_CREDS","LC_ALL","gitCommand","waiting","exception","splice","gitInfo","Ignore","Throw","defaultExceptionHandler","duration","logGitCommand","warning","gitPath","shaRegex","shaLikeRegex","stagedUncommittedRegex","uncommittedRegex","strings","stagedUncommitted","uncommitted","extract","gitMajor","gitMinor","allowConflicts","ignoreWhitespace","startLine","endLine","contents","all","deletedOrMissingSha","pattern","ref1","ref2","tool","renames","search","forkPoint","deleteAfter","pathspecs","GIT_OPTIONAL_LOCKS","uncommittedSha","RequestType","GitCommandRequestType","RepositoriesInFolderRequestType","WorkspaceFileExistsRequestType","defaultWhitelistFn","gitWhitelist","leadingSlashRegex","host_VslsHostService","_api","_service","_localToSharedPaths","_sharedToLocalPaths","onDidChangeIsServiceAvailable","onAvailabilityChanged","onDidChangeWorkspaceFolders","onWorkspaceFoldersChanged","onRequest","onGitCommandRequest","onRepositoriesInFolderRequest","onWorkspaceFileExistsRequest","api","service","shareService","ServiceId","unshareService","requestType","handler","cancellation","available","workspaceFolders","cc","getCorrelationContext","localPath","sharedPath","convertLocalUriToShared","localPaths","_localPathsRegex","sharedPaths","_sharedPathsRegex","request","isRootWorkspace","shared","localCwd","arg","convertSharedUriToLocal","folderUri","repositories","getRepositories","vslsUri","exists","fileExists","localUri","sharedUri","vslsUriRootRegex","guest_VslsGuestService","isServiceAvailable","getSharedService","Enabled","response","sendRequest","ensureCase","vslsUriPrefixRegex","vsls_VslsController","_host","_guest","Readonly","_waitForReady","_onReady","onDidChangeSession","onLiveShareSessionChanged","session","role","Host","liveshare","allowGuestAccess","share","Guest","connect","RepoSearchWarnings","doesNotExist","userConfigRegex","mappedAuthorRegex","GitRepoSearchBy","_onDidChangeRepositories","_branchesCache","_tagsCache","_tagsWithRefsCache","_trackedCache","_userMapCache","_repositoryTree","forPaths","onDidChangeWindowState","onWindowStateChanged","_repositoriesLoadingPromise","onDidChangeRepositories","UseCaching","advanced","caching","enabled","updateContext","fireRepositoriesChanged","focused","resume","suspend","getRepositoriesInFolder","repositorySearch","repos","findSuperstr","reposToDelete","depth","anyRepoChangedFn","rootPath","getRepoPathCore","excludes","getConfiguration","repoPaths","repositorySearchCore","rp","folders","promises","rej","isDirectory","repositoryTree","hasRepository","any","HasRemotes","isCloseAffordance","checkout","getOrderedRepositories","total","report","increment","isCancellationRequested","pull","fileExistsWithCase","repoPathLength","getLogForFile","findNextFileName","findNextFileNameCore","getRecentShaForFile","getLog","commitOrFileName","tracker","getOrAdd","getHighlanderRepoPath","highlander","cachedBlame","getBlameForFileCore","emptyPromise","blame","customArguments","getCurrentUser","errorMessage","setBlameFailure","getBlameForFileContentsCore","blame_contents","skipCache","getBlameForFile","blameLine","lineToBlame","getBlameForFileContents","getBlameForRangeSync","allLines","shas","Set","revparse_currentBranch","diff_shortstat","parseShortStat","config_get","user","config_getRegex","mappedAuthor","check_mailmap","cachedDiff","getDiffForFileCore","getEncoding","getDiffForFile","diff_nameStatus","parseNameStatus","show_status","getLogCommitForFile","log_recent","firstIfNotFound","isSha","maxListItems","searchBy","searchArgs","Author","ChangedLines","Changes","Files","Message","Sha","log_search","getLogForSearch","fileHistoryFollowsRenames","fromFile","cachedLog","getLogForFileCore","log_file","hasTrackingBranch","merge_base","includeAll","factory","filePathOrUri","skipCacheUpdate","isVslsScheme","findRepositoryForPath","parts","revparse_toplevel","getActiveRepoPath","getRepositoryTree","repoPathOrUri","findSubstr","vslsPath","stash_list","validateVersion","status_file","includeRefs","showref_tag","parseWithRef","ls_tree","toRevisionUri","schemeOruri","cacheKey","isTrackedCore","ls_files","getDiffTool","difftool_fileDiff","difftool_dirDiff","resolved","isShaLike","revparse","ensuredRef","cat_file_validate","cat_validate","add","stash_apply","stash_delete","stash_save","ensureGitVersion","u","stash_push","gitExtension","getAPI","setOrFindGitPath","getGitPath","getGitVersion","deletedOrMissing","throwIfLessThan","feature","gitVersion","0","1","2","cssColorRegex","toRgba","color","defaultHeatmapHotColor","defaultHeatmapColdColor","escapeMarkdownRegex","markdownHeaderReplacement","ZeroWidthSpace","computedHeatmapColor","annotations_Annotations","heatmap","getHeatmapColor","renderOptions","borderColor","baseColor","cold","colors","hot","age","computeAge","rgba","g","rgb","toFixed","hasRemote","annotationType","commandBar","MuchGreaterThan","diffWith_DiffWithCommand","getMarkdownCommandArgs","RecentChanges","SquareWithTopShadow","openFileRevision_OpenFileRevisionCommand","ArrowUpRight","openCommitInRemote_OpenCommitInRemoteCommand","MiddleEllipsis","showQuickCommitFileDetails_ShowQuickCommitFileDetailsCommand","showCommitDetailsCommand","avatar","getHoverCommandBar","showQuickCommitDetails_ShowQuickCommitDetailsCommand","enrichMessage","hovers","avatars","getGravatarUri","defaultGravatarsStyle","markdown","isTrusted","codeDiff","getCodeDiff","Dash","ArrowLeftRightLong","getDiffForLine","hoverMessage","getHoverDiffMessage","dateFormatOrFormatOptions","uncommittedColor","contentText","separateLines","borderStyle","borderWidth","spacing","backgroundColor","fontWeight","fontStyle","height","margin","textDecoration","applyHeatmap","scrollable","blameAnnotationProvider_BlameAnnotationProviderBase","_blame","getText","setForceDirtyStateChangeOnNextDocumentChange","_hoverProviderDisposable","commitLine","highlightDecorationRanges","validateRange","half","median","lookup","newest","oldest","ageThreshold","coldColor","hotColor","annotations","details","registerHoverProvider","provideHover","provideChangesHover","provideDetailsHover","getCommitForHover","logCommit","getHoverMessage","defaultDateFormat","hover","changesHover","over","character","getBlame","gutterBlameAnnotationProvider_GutterBlameAnnotationProvider","gravatarDefault","gutterRenderOptions","decorationsMap","avatarDecorationsMap","gutter","computedHeatmap","compacted","getComputedHeatmap","addOrUpdateGravatarDecoration","registerHoverProviders","avatarDecoration","createTextEditorDecorationType","gutterIconPath","gutterIconSize","heatmapBlameAnnotationProvider_HeatmapBlameAnnotationProvider","Heatmap","heatmapRenderOptions","recentChangesAnnotationProvider_RecentChangesAnnotationProvider","getRecentLogCommitForFile","AnnotationClearReason","Decorations","blameAnnotation","rangeBehavior","ClosedOpen","blameHighlight","heatmapAnnotation","heatmapHighlight","recentChangesAnnotation","recentChangesHighlight","fileAnnotationController_FileAnnotationController","_onDidToggleAnnotations","_annotationProviders","_keyboardScope","_annotationType","_toggleModes","onDidToggleAnnotations","clearAll","_annotationsDisposable","cfgHighlight","highlight","isWholeLine","overviewRulerLane","Right","locations","Line","overviewRulerColor","Overview","dark","Gutter","asAbsolutePath","light","recentChanges","toggleMode","_editor","isInWindowToggle","getProvider","detachKeyboardHook","attachKeyboardHook","BlameabilityChanged","is","clearCore","DocumentChanged","DocumentClosed","restore","fuzzyProvider","ColumnChanged","editors","getToggleMode","Window","User","Disposing","visibleTextEditors","currentProvider","computingAnnotations","showAnnotationsCore","reopen","keyboard","beginScope","escape","onDidPressKey","annotationsLabel","validate","onDidChangeTextEditorViewColumn","onTextEditorViewColumnChanged","onDidChangeVisibleTextEditors","onVisibleTextEditorsChanged","onBlameStateChanged","onDirtyStateChanged","annotationDecoration","lineAnnotationController_LineAnnotationController","_enabled","fileAnnotations","onFileAnnotationsToggled","onDidStartDebugSession","onDebugSessionStarted","clearAnnotations","_debugSessionEndDisposable","lineTracker","stop","currentLine","setLineTracker","refresh","onDidTerminateDebugSession","onDebugSessionEnded","includesAll","getState","isSubscribed","onDidChangeActiveLines","onActiveLinesChanged","codeLensProvider_GitRecentChangeCodeLens","symbol","blameRange","isFullRange","desiredCommand","codeLensProvider_GitAuthorsCodeLens","codeLensProvider_GitCodeLensProvider","_git","_tracker","_onDidChangeCodeLenses","onDidChangeCodeLenses","maxLines","sizeThresholdAfterEdit","languageScope","scopesByLanguage","ll","language","scopes","symbolScopes","lenses","symbols","Document","ExecuteDocumentSymbolProvider","documentRangeFn","dirtyCommand","getDirtyTitle","sym","provideCodeLens","blameForRangeFn","recentChange","fileSymbol","getFilename","getRangeFromSymbol","includeSingleLineSymbols","valid","symbolName","kind","Containers","Package","Class","Interface","Module","Namespace","Struct","isSingleLine","Constructor","Enum","Method","Property","Blocks","getValidateSymbolRange","lineAt","lineNumber","startChar","multiline","isDocumentSymbol","lens","resolveGitRecentChangeCodeLens","resolveGitAuthorsCodeLens","containerName","DiffWithPrevious","applyDiffWithPreviousCommand","ShowQuickCommitDetails","applyShowQuickCommitDetailsCommand","ShowQuickCommitFileDetails","applyShowQuickCommitFileDetailsCommand","ShowQuickCurrentBranchHistory","applyShowQuickCurrentBranchHistoryCommand","ShowQuickFileHistory","applyShowQuickFileHistoryCommand","ToggleFileBlame","applyToggleFileBlameCommand","toFileUri","codeLens","unsavedChanges","recentChangeAndAuthors","recentChangeOnly","authorsOnly","selector","codeLensController_GitCodeLensController","_canToggle","_providerDisposable","_provider","createProvider","CanToggleCodeLens","registerCodeLensProvider","onDirtyIdleTriggered","fromGitLensFSUri","fromRevisionUri","fsProvider_emptyArray","fsProvider_GitFileSystemProvider","_searchTreeMap","_onDidChangeFile","registerFileSystemProvider","isCaseSensitive","isReadonly","onDidChangeFile","NoPermissions","tree","getTree","FileNotFound","typeToFileType","getVersionedFileBuffer","ctime","treeItem","searchTree","Directory","getTreeFileForRevision","getTreeForRevision","createSearchTree","getOrCreateSearchTree","Unknown","lineHoverController_LineHoverController","unregister","register","debugging","lineState","getAnnotationType","wholeLine","lineAnnotations","keyNoopCommand","keys","mappings","keyboard_KeyboardScope","mapping","updateKeyCommandsContext","Key","keyboard_Keyboard","registerCommand","execute","begin","statusBarController_StatusBarController","clearBlame","_blameStatusBarItem","_modeStatusBarItem","statusBar","modes","statusBarItemName","alignment","Left","createStatusBarItem","SwitchMode","text","tooltip","reduceFlicker","updateBlame","hide","DiffLineWithPrevious","DiffWithWorking","DiffLineWithWorking","ToggleCodeLens","lineTracker_LineTracker","_onDidChangeActiveLines","_state","trigger","subscriber","subscription","_linesChangedDebounced","onLinesChanged","fireLinesChanged","lines1","lines2","GitLineState","gitLineTracker_GitLineTracker","_count","_subscriptions","updated","updateState","getBlameForLineContents","getBlameForLine","setState","ResourceType","unknownGitUri","viewNode_ViewNode","ViewNode","view","refreshNode","CommitFileNodeDisplayAs","ViewRefNode","supportsAutoRefresh","onDidChangeAutoRefresh","viewNode_SubscribeableViewNode","_canSubscribe","disposables","onDidChangeVisibility","onVisibilityChanged","onDidChangeNodeState","onNodeStateChanged","onAutoRefreshChanged","unsubscribe","canSubscribe","ensureSubscription","triggerChange","_subscription","subscriptionPromise","visible","onStateChanged","onParentStateChanged","autoRefresh","subscribe","commitFileNode_CommitFileNode","_displayAs","_selection","priority","toFileCommit","label","None","contextValue","resourceType","description","CommitIcon","iconPath","StatusIcon","Gravatar","getCommand","_label","_description","_tooltip","CommitLabel","getCommitDescriptionTemplate","getCommitFileDescriptionTemplate","_folderName","getCommitTemplate","getCommitFileTemplate","_relativePath","FileStaged","FileUnstaged","CommitFile","commitFormat","commitDescriptionFormat","commitFileFormat","commitFileDescriptionFormat","showOptions","preserveFocus","preview","folderNode_FolderNode","fromRepoPath","getFileNesting","List","numeric","sensitivity","Collapsed","Folder","nesting","layout","Auto","nestingThreshold","threshold","Tree","commitNode_CommitNode","getBranchAndTagTips","toGitUri","getChildren","branchAndTagTips","AngleBracketLeftHeavy","AngleBracketRightHeavy","ArrowHeadRight","CommitOnCurrentBranch","common_MessageNode","_message","_iconPath","common_CommandMessageNode","_command","getTreeItem","common_PagerNode","_args","Pager","common_ShowMoreNode","getBranchesAndTagTipsFn","currentName","branchesAndTagsBySha","bt","branchesAndTags","markers","insertDateMarkers","iterable","daysAgo","marker","setUTCHours","nextDate","branchTrackingStatusNode_BranchTrackingStatusNode","direction","supportsPaging","defaultItemLimit","previousLog","StatusAheadOfUpstream","StatusBehindUpstream","BranchStatusAheadOfUpstream","BranchStatusBehindUpstream","iconSuffix","branchNode_BranchNode","branchName","getBasename","_children","showTrackingBranch","getTrackingStatus","RemoteBranch","CurrentBranchWithTracking","CurrentBranch","BranchWithTracking","branchOrTagFolderNode_BranchOrTagFolderNode","_expanded","expanded","Expanded","branchesNode_BranchesNode","branchNodes","BranchesWithRemotes","fileHistoryNode_FileHistoryNode","displayAs","getStatusForFile","FileHistory","onRepoChanged","onRepoFileSystemChanged","startWatchingFileSystem","getQuickPickIgnoreFocusOut","showQuickPickProgress","scope","showQuickPick","_getInfiniteCancellablePromise","placeHolder","ignoreFocusOut","_showQuickPickProgress","commonQuickPicks_CommandQuickPickItem","commandOrArgs","commonQuickPicks_CommitQuickPickItem","getShortMessage","detail","commonQuickPicks_ChooseFromBranchesAndTagsQuickPickItem","_goBack","branchesAndTagsQuickPick_BranchesAndTagsQuickPick","allowCommitId","goBack","KeyCommandQuickPickItem","MessageQuickPickItem","commonQuickPicks_OpenFileCommandQuickPickItem","openEditor","commonQuickPicks_OpenFilesCommandQuickPickItem","commonQuickPicks_ShowCommitInViewQuickPickItem","searchView","commonQuickPicks_ShowCommitSearchResultsInViewQuickPickItem","resultsLabel","showSearchResults","commonQuickPicks_ShowFileHistoryInViewQuickPickItem","baseRef","fileHistoryView","showHistoryForUri","branchesAndTagsQuickPick_RefQuickPickItem","checked","branchesAndTagsQuickPick_BranchQuickPickItem","branchesAndTagsQuickPick_TagQuickPickItem","autoPick","pick","items","getItems","itms","quickpick","createQuickPick","busy","placeholder","onDidHide","onDidChangeValue","onDidAccept","selectedItems","validateReference","filters","include","remotesQuickPick_OpenRemoteCommandQuickPickItem","remotesQuickPick_OpenRemotesCommandQuickPickItem","goBackCommand","shortFileSha","OpenInRemote","branchHistoryQuickPick_BranchHistoryQuickPick",",",".","progressCancellation","nextPageCommand","currentCommand","ArrowBack","ShowQuickBranchHistory","previousPageCommand","npc","matchOnDescription","matchOnDetail","commitFileQuickPick_ApplyCommitFileChangesCommandQuickPickItem","applyChangesToWorkingFile","commitFileQuickPick_OpenCommitFileCommandQuickPickItem","commitFileQuickPick_OpenCommitFileRevisionCommandQuickPickItem","commitQuickPick_CommitWithFileStatusQuickPickItem","octicon","commitQuickPick_OpenCommitFilesCommandQuickPickItem","versioned","commitQuickPick_OpenCommitFileRevisionsCommandQuickPickItem","commitsQuickPick_CommitsQuickPick","showInViewCommand","showAllCommand","fileHistoryQuickPick_FileHistoryQuickPick","pickerOnly","findWorkingFileName","RepositoryQuickPickItem","repositoriesQuickPick_RepositoriesQuickPick","repoStatusQuickPick_OpenStatusFileCommandQuickPickItem","realIndexStatus","getOcticon","repoStatusQuickPick_OpenStatusFilesCommandQuickPickItem","OpenChangedFiles","stashListQuickPick_StashListQuickPick","stash","StashSave","fileHistoryTrackerNode_FileHistoryTrackerNode","resetChild","_child","_fileUri","fileUri","_baseRef","ActiveFileHistory","onActiveEditorChanged","lineHistoryNode_LineHistoryNode","LineHistory","lineHistoryTrackerNode_LineHistoryTrackerNode","_base","ActiveLineHistory","remoteNode_RemoteNode","rt","Fetch","Push","ArrowRight","Remote","remotesNode_RemotesNode","RefreshReason","viewBase_ViewBase","_onDidChangeTreeData","_onDidChangeVisibility","_onDidChangeNodeState","registerCommands","onDidChangeTreeData","container","_tree","createTreeView","treeDataProvider","onDidCollapseElement","onElementCollapsed","onDidExpandElement","onElementExpanded","getRoot","ensureRoot","getParent","triggerNodeChange","isPageable","reveal","stashFileNode_StashFileNode","stashFormat","stashDescriptionFormat","stashFileFormat","stashFileDescriptionFormat","stashNode_StashNode","stashesNode_StashesNode","statusFileNode_StatusFileNode","_hasStagedChanges","_hasUnstagedChanges","resourceUri","collapsibleState","FileStagedAndUnstaged","StatusFileCommits","getChangedIn","statusFileDescriptionFormat","statusFileFormat","changedIn","statusFilesNode_StatusFilesNode","includeWorkingTree","older","toStatusFile","aheadFiles","uniques","stats","StatusFiles","previousRef","tagNode_TagNode","Tag","tagsNode_TagsNode","tagNodes","repositoryNode_RepositoryNode","_lastFetched","_status","getLastFetched","lastFetchedTooltip","formatLastFetched","workingStatus","updateLastFetched","prevLastFetched","repositoriesNode_RepositoriesNode","Repositories","ConfigurationChanged","onRepositoriesChanged","autoReveal","containsUri","resultsCommitsNode_ResultsCommitsNode","_commitsQuery","ResultsCommits","getCommitsQueryResults","getRepositoryCount","_commitsQueryResults","resultsFileNode_ResultsFileNode","ResultsFile","statusIcon","DiffWith","resultsFilesNode_ResultsFilesNode","_ref1","_ref2","getFilesQueryResults","ResultsFiles","_filesQueryResults","getFilesQueryResultsCore","compareResultsNode_CompareResultsNode","getCommitsQuery","CompareResults","comparePickerNode_ComparePickerNode","selectedRef","ComparePicker","getQualifiedCommand","ComparePickerWithRef","compareNode_CompareNode","_selectedRef","_comparePickerNode","focus","select","Compare","ViewsCanCompare","selectForCompare","getRefName","getRepoPathOrPrompt","autoCompare","compareWithSelected","searchNode_SearchNode","Search","findIndex","registrableCommands","common_command","getCommandUri","getRepoPathOrActiveOrPrompt","getRepoPathOrActive","isCommandViewContextWithBranch","isCommandViewContextWithCommit","isCommandViewContextWithRemote","isCommandViewContextWithRepo","isScmResourceGroup","handle","resourceStates","isScmResourceState","common_Command","contextParsingOptions","_execute","encodeURIComponent","rest","parseContext","preExecute","firstArg","edit","common_isTextEditor","states","scmResourceStates","scmResourceGroups","common_ActiveEditorCommand","lastCommand","ActiveEditorCachedCommand","rethrow","showTextDocument","Active","searchResultsCommitsNode_SearchResultsCommitsNode","commitsQuery","SearchResults","prefillOnly","SearchCommitsInView","compareView_CompareView","ViewsCompareKeepResults","keepResults","viewCommands","setFilesLayout","setKeepResults","swapComparision","showCollapseAll","views","workspaceState","dismiss","addResults","addOrReplace","updateEffective","fileHistoryView_FileHistoryView","changeBase","setEditorFollowing","setRenameFollowing","ViewsFileHistoryEditorFollowing","fileHistory","lineHistoryView_LineHistoryView","ViewsLineHistoryEditorFollowing","lineHistory","repositoriesView_RepositoriesView","_onDidChangeAutoRefresh","setAutoRefresh","ViewsRepositoriesAutoRefresh","workspaceEnabled","searchView_SearchView","ViewsSearchKeepResults","searchQueryFn","getSearchQueryFn","getSearchLabel","resultsType","singular","viewCommands_ViewCommands","dismissNode","canDismissNode","closeRepository","exploreRepoRevision","openChanges","openChangesWithWorking","openFile","openFileRevision","openFileRevisionInRemote","openChangedFiles","openChangedFileChanges","openChangedFileChangesWithWorking","openChangedFileRevisions","applyChanges","stageFile","unstageFile","compareAncestryWithWorking","compareWithHead","compareWithRemote","compareFileWithSelected","selectFileForCompare","compareWithWorking","terminalCheckoutBranch","terminalCreateBranch","terminalDeleteBranch","terminalMergeBranch","terminalRebaseBranch","terminalRebaseBranchToRemote","terminalSquashBranchIntoCommit","terminalCheckoutCommit","terminalCherryPickCommit","terminalPushCommit","terminalRebaseCommit","terminalResetCommit","terminalRevertCommit","terminalRemoveRemote","terminalCreateTag","terminalDeleteTag","compareView","commonAncestor","getMergeBase","_selectedFile","selected","ViewsCanCompareFile","diffArgs","openInNewWindow","OpenFolder","updateWorkspaceFolders","openWorkspace","FocusFilesExplorer","openDiffWith","OpenFileInRemote","unStageFile","sendTerminalCommand","remoteBranch","showInputBox","prompt","_terminal","createTerminal","onDidCloseTerminal","_terminalCwd","sendText","terminal","ensureTerminal","webviewEditor_WebviewEditor","_disposablePanel","postUpdatedConfiguration","_panel","webviewPanel","Workspace","inspect","defaultValue","removes","html","getHtml","createWebviewPanel","retainContextWhenHidden","enableFindWidget","enableCommandUris","enableScripts","onDidDispose","onPanelDisposed","onDidChangeViewState","onViewStateChanged","webview","onDidReceiveMessage","onMessageReceived","content","filename","_html","getBootstrap","postMessage","settingsEditor_SettingsEditor","getAvailableScopes","ShowSettingsPage","welcomeEditor_WelcomeEditor","_context","_config","applyMode","_lineTracker","_vsls","_fileAnnotationController","_lineAnnotationController","_lineHoverController","_statusBarController","_codeLensController","_keyboard","_settingsEditor","_welcomeEditor","_compareView","_fileHistoryView","_lineHistoryView","_repositoriesView","_searchView","lineHistoryView","lineHovers","repositoriesView","settingsEditor","_viewCommands","welcomeEditor","emptyConfig","Proxy","propKey","receiver","configuration_Configuration","affectsConfiguration","_configAffectedByMode","onDidChangeConfiguration","resetConfig","inspection","migrated","globalValue","migrationFn","workspaceValue","workspaceFolderValue","WorkspaceFolder","fallbackValue","fromInspection","toInspection","annotations_ClearFileAnnotationsCommand","ClearFileAnnotationsCommand","common_EditorCommand","registerTextEditorCommand","executeCore","ClearFileAnnotations","ComputingFileAnnotations","annotations_ToggleFileBlameCommand","ToggleFileBlameCommand","toggle","annotations_ToggleFileHeatmapCommand","ToggleFileHeatmapCommand","ToggleFileHeatmap","annotations_ToggleFileRecentChangesCommand","ToggleFileRecentChangesCommand","ToggleFileRecentChanges","annotations_ToggleLineBlameCommand","ToggleLineBlameCommand","ToggleLineBlame","closeUnchangedFiles_CloseUnchangedFilesCommand","CloseUnchangedFilesCommand","CloseUnchangedFiles","CloseAllEditors","_onEditorChangedFn","loopCount","found","nextEditor","closeEditor","CloseActiveEditor","waitForEditorChange","NextEditor","copyMessageToClipboard_CopyMessageToClipboardCommand","CopyMessageToClipboardCommand","CopyMessageToClipboard","blameline","getLogCommit","copyRemoteFileUrlToClipboard_CopyRemoteFileUrlToClipboardCommand","CopyRemoteFileUrlToClipboardCommand","CopyRemoteFileUrlToClipboard","copyShaToClipboard_CopyShaToClipboardCommand","CopyShaToClipboardCommand","CopyShaToClipboard","diffBranchWithBranch_DiffBranchWithBranchCommand","DiffBranchWithBranchCommand","DiffHeadWithBranch","DiffWorkingWithBranch","diffDirectory_DiffDirectoryCommand","DiffDirectoryCommand","DiffDirectory","DiffDirectoryWithHead","ViewsOpenDirectoryDiff","ViewsOpenDirectoryDiffWithWorking","isCommandViewContextWithRef","openDirectoryDiff","diffLineWithPrevious_DiffLineWithPreviousCommand","DiffLineWithPreviousCommand","showFileNotUnderSourceControlWarningMessage","diffLineWithWorking_DiffLineWithWorkingCommand","DiffLineWithWorkingCommand","DiffWithCommand","argsOrCommit1","commit2","commit1","getMarkdownCommandArgsCore","lhsSha","rhsSha","getFileStatusForCommit","getVersionedUri","rhsSuffix","lhsSuffix","Diff","diffWithBranch_DiffWithBranchCommand","DiffWithBranchCommand","DiffWithBranch","showNoRepositoryWarningMessage","renamedUri","renamedTitle","rename","diffWithNext_DiffWithNextCommand","DiffWithNextCommand","DiffWithNext","diffWithPrevious_DiffWithPreviousCommand","DiffWithPreviousCommand","DiffWithPreviousInDiff","inDiffEditor","showCommitHasNoPreviousCommitWarningMessage","originalSha","diffWithRevision_DiffWithRevisionCommand","DiffWithRevisionCommand","DiffWithRevision","branchOrTag","showProgress","diffWithWorking_DiffWithWorkingCommand","DiffWithWorkingCommand","Status","ResourceGroupType","externalDiff_ExternalDiffCommand","ExternalDiffCommand","ExternalDiff","ExternalDiffAll","isCommandViewContextWithFileCommit","isCommandViewContextWithFileRefs","resourceGroupType","Index","isModified","BOTH_MODIFIED","INDEX_MODIFIED","MODIFIED","openDiffTool","openBranchesInRemote_OpenBranchesInRemoteCommand","OpenBranchesInRemoteCommand","OpenBranchesInRemote","openBranchInRemote_OpenBranchInRemoteCommand","OpenBranchInRemoteCommand","OpenBranchInRemote","openChangedFiles_OpenChangedFilesCommand","OpenChangedFilesCommand","OpenCommitInRemoteCommand","OpenCommitInRemote","argsOrSha","openFileInRemote_OpenFileInRemoteCommand","OpenFileInRemoteCommand","OpenFileRevisionCommand","OpenFileRevision","argsOrUri","openInRemote_OpenInRemoteCommand","OpenInRemoteCommand","ensureRemoteBranchName","verb","shaSuffix","remotesQuickPick_RemotesQuickPick","remoteName","openRepoInRemote_OpenRepoInRemoteCommand","OpenRepoInRemoteCommand","OpenRepoInRemote","openWorkingFile_OpenWorkingFileCommand","OpenWorkingFileCommand","OpenWorkingFile","repositories_FetchRepositoriesCommand","FetchRepositoriesCommand","FetchRepositories","fetchAll","repositories_PullRepositoriesCommand","PullRepositoriesCommand","PullRepositories","pullAll","repositories_PushRepositoriesCommand","PushRepositoriesCommand","PushRepositories","pushAll","resetSuppressedWarnings_ResetSuppressedWarningsCommand","ResetSuppressedWarningsCommand","ResetSuppressedWarnings","searchByRegex","symbolToSearchByMap","searchByToSymbolMap","searchCommits_SearchCommitsCommand","SearchCommitsCommand","SearchCommits","showInView","originalArgs","_lastSearch","valueSelection","searchLabel","showLastQuickPick_ShowLastQuickPickCommand","ShowLastQuickPickCommand","ShowLastQuickPick","showQuickBranchHistory_ShowQuickBranchHistoryCommand","ShowQuickBranchHistoryCommand","repoLog","ShowQuickCommitDetailsCommand","ShowCommitInView","showLineUncommittedWarningMessage","showCommitNotFoundWarningMessage","commitQuickPick_CommitQuickPick","resolvePreviousFileSha","StashApply","confirm","stashItem","StashDelete","previousCommand","nextCommand","nextLog","onDidSelectItem","setKeyCommand","onDidSelect","ShowQuickCommitFileDetailsCommand","ShowQuickRevisionDetails","fileLog","commitFileQuickPick_CommitFileQuickPick","workingName","findNextCommit","ArrowRightHollow","showQuickCurrentBranchHistory_ShowQuickCurrentBranchHistoryCommand","ShowQuickCurrentBranchHistoryCommand","showQuickFileHistory_ShowQuickFileHistoryCommand","ShowQuickFileHistoryCommand","ShowFileHistoryInView","showQuickRepoStatus_ShowQuickRepoStatusCommand","ShowQuickRepoStatusCommand","ShowQuickRepoStatus","repoStatusQuickPick_RepoStatusQuickPick","stagedAdds","unstagedAdds","stagedChanges","unstagedChanges","stagedDeletes","unstagedDeletes","stagedAddsAndChanges","unstagedAddsAndChanges","unstaged","stagedStatus","unstagedStatus","computed","computeStatus","unstagedIndex","ShowQuickStashList","showQuickStashList_ShowQuickStashListCommand","ShowQuickStashListCommand","showView_ShowViewCommand","ShowViewCommand","ShowCompareView","ShowFileHistoryView","ShowLineHistoryView","ShowRepositoriesView","ShowSearchView","stashApply_StashApplyCommand","StashApplyCommand","stashApply","stashDelete_StashDeleteCommand","StashDeleteCommand","stashDelete","stashSave_StashSaveCommand","StashSaveCommand","StashSaveFiles","isCommandViewContextWithFile","isCommandViewContextWithRepoPath","stashSave","supportGitLens_SupportGitLensCommand","SupportGitLensCommand","SupportGitLens","showSupportGitLensMessage","switchMode_SwitchModeCommand","SwitchModeCommand","modesQuickPick_ModesQuickPick","modeCfg","switchMode_ToggleReviewModeCommand","ToggleReviewModeCommand","ToggleReviewMode","switchMode_ToggleZenModeCommand","ToggleZenModeCommand","ToggleZenMode","toggleCodeLens_ToggleCodeLensCommand","ToggleCodeLensCommand","toggleCodeLens","configure","gitlensVersion","packageJSON","showGitDisabledErrorMessage","previousVersion","globalState","GitLensVersion","migrate","explorers","migrateSettings","compareGitVersion","showGitVersionUnsupportedErrorMessage","notifyOnUnsupportedGitVersion","showWhatsNewAfterUpgrades","prevMajor","prevMinor","showWhatsNewMessage","showWelcomePage","deactivate","__webpack_exports__"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 191);\n","module.exports = require(\"vscode\");","module.exports = require(\"path\");","var isDate = require('../is_date/index.js')\n\nvar MILLISECONDS_IN_HOUR = 3600000\nvar MILLISECONDS_IN_MINUTE = 60000\nvar DEFAULT_ADDITIONAL_DIGITS = 2\n\nvar parseTokenDateTimeDelimeter = /[T ]/\nvar parseTokenPlainTime = /:/\n\n// year tokens\nvar parseTokenYY = /^(\\d{2})$/\nvar parseTokensYYY = [\n  /^([+-]\\d{2})$/, // 0 additional digits\n  /^([+-]\\d{3})$/, // 1 additional digit\n  /^([+-]\\d{4})$/ // 2 additional digits\n]\n\nvar parseTokenYYYY = /^(\\d{4})/\nvar parseTokensYYYYY = [\n  /^([+-]\\d{4})/, // 0 additional digits\n  /^([+-]\\d{5})/, // 1 additional digit\n  /^([+-]\\d{6})/ // 2 additional digits\n]\n\n// date tokens\nvar parseTokenMM = /^-(\\d{2})$/\nvar parseTokenDDD = /^-?(\\d{3})$/\nvar parseTokenMMDD = /^-?(\\d{2})-?(\\d{2})$/\nvar parseTokenWww = /^-?W(\\d{2})$/\nvar parseTokenWwwD = /^-?W(\\d{2})-?(\\d{1})$/\n\n// time tokens\nvar parseTokenHH = /^(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMM = /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\nvar parseTokenHHMMSS = /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/\n\n// timezone tokens\nvar parseTokenTimezone = /([Z+-].*)$/\nvar parseTokenTimezoneZ = /^(Z)$/\nvar parseTokenTimezoneHH = /^([+-])(\\d{2})$/\nvar parseTokenTimezoneHHMM = /^([+-])(\\d{2}):?(\\d{2})$/\n\n/**\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If all above fails, the function passes the given argument to Date constructor.\n *\n * @param {Date|String|Number} argument - the value to convert\n * @param {Object} [options] - the object with options\n * @param {0 | 1 | 2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parse('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Parse string '+02014101',\n * // if the additional number of digits in the extended year format is 1:\n * var result = parse('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\nfunction parse (argument, dirtyOptions) {\n  if (isDate(argument)) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime())\n  } else if (typeof argument !== 'string') {\n    return new Date(argument)\n  }\n\n  var options = dirtyOptions || {}\n  var additionalDigits = options.additionalDigits\n  if (additionalDigits == null) {\n    additionalDigits = DEFAULT_ADDITIONAL_DIGITS\n  } else {\n    additionalDigits = Number(additionalDigits)\n  }\n\n  var dateStrings = splitDateString(argument)\n\n  var parseYearResult = parseYear(dateStrings.date, additionalDigits)\n  var year = parseYearResult.year\n  var restDateString = parseYearResult.restDateString\n\n  var date = parseDate(restDateString, year)\n\n  if (date) {\n    var timestamp = date.getTime()\n    var time = 0\n    var offset\n\n    if (dateStrings.time) {\n      time = parseTime(dateStrings.time)\n    }\n\n    if (dateStrings.timezone) {\n      offset = parseTimezone(dateStrings.timezone)\n    } else {\n      // get offset accurate to hour in timezones that change offset\n      offset = new Date(timestamp + time).getTimezoneOffset()\n      offset = new Date(timestamp + time + offset * MILLISECONDS_IN_MINUTE).getTimezoneOffset()\n    }\n\n    return new Date(timestamp + time + offset * MILLISECONDS_IN_MINUTE)\n  } else {\n    return new Date(argument)\n  }\n}\n\nfunction splitDateString (dateString) {\n  var dateStrings = {}\n  var array = dateString.split(parseTokenDateTimeDelimeter)\n  var timeString\n\n  if (parseTokenPlainTime.test(array[0])) {\n    dateStrings.date = null\n    timeString = array[0]\n  } else {\n    dateStrings.date = array[0]\n    timeString = array[1]\n  }\n\n  if (timeString) {\n    var token = parseTokenTimezone.exec(timeString)\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '')\n      dateStrings.timezone = token[1]\n    } else {\n      dateStrings.time = timeString\n    }\n  }\n\n  return dateStrings\n}\n\nfunction parseYear (dateString, additionalDigits) {\n  var parseTokenYYY = parseTokensYYY[additionalDigits]\n  var parseTokenYYYYY = parseTokensYYYYY[additionalDigits]\n\n  var token\n\n  // YYYY or ±YYYYY\n  token = parseTokenYYYY.exec(dateString) || parseTokenYYYYY.exec(dateString)\n  if (token) {\n    var yearString = token[1]\n    return {\n      year: parseInt(yearString, 10),\n      restDateString: dateString.slice(yearString.length)\n    }\n  }\n\n  // YY or ±YYY\n  token = parseTokenYY.exec(dateString) || parseTokenYYY.exec(dateString)\n  if (token) {\n    var centuryString = token[1]\n    return {\n      year: parseInt(centuryString, 10) * 100,\n      restDateString: dateString.slice(centuryString.length)\n    }\n  }\n\n  // Invalid ISO-formatted year\n  return {\n    year: null\n  }\n}\n\nfunction parseDate (dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) {\n    return null\n  }\n\n  var token\n  var date\n  var month\n  var week\n\n  // YYYY\n  if (dateString.length === 0) {\n    date = new Date(0)\n    date.setUTCFullYear(year)\n    return date\n  }\n\n  // YYYY-MM\n  token = parseTokenMM.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    date.setUTCFullYear(year, month)\n    return date\n  }\n\n  // YYYY-DDD or YYYYDDD\n  token = parseTokenDDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    var dayOfYear = parseInt(token[1], 10)\n    date.setUTCFullYear(year, 0, dayOfYear)\n    return date\n  }\n\n  // YYYY-MM-DD or YYYYMMDD\n  token = parseTokenMMDD.exec(dateString)\n  if (token) {\n    date = new Date(0)\n    month = parseInt(token[1], 10) - 1\n    var day = parseInt(token[2], 10)\n    date.setUTCFullYear(year, month, day)\n    return date\n  }\n\n  // YYYY-Www or YYYYWww\n  token = parseTokenWww.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    return dayOfISOYear(year, week)\n  }\n\n  // YYYY-Www-D or YYYYWwwD\n  token = parseTokenWwwD.exec(dateString)\n  if (token) {\n    week = parseInt(token[1], 10) - 1\n    var dayOfWeek = parseInt(token[2], 10) - 1\n    return dayOfISOYear(year, week, dayOfWeek)\n  }\n\n  // Invalid ISO-formatted date\n  return null\n}\n\nfunction parseTime (timeString) {\n  var token\n  var hours\n  var minutes\n\n  // hh\n  token = parseTokenHH.exec(timeString)\n  if (token) {\n    hours = parseFloat(token[1].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR\n  }\n\n  // hh:mm or hhmm\n  token = parseTokenHHMM.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseFloat(token[2].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE\n  }\n\n  // hh:mm:ss or hhmmss\n  token = parseTokenHHMMSS.exec(timeString)\n  if (token) {\n    hours = parseInt(token[1], 10)\n    minutes = parseInt(token[2], 10)\n    var seconds = parseFloat(token[3].replace(',', '.'))\n    return (hours % 24) * MILLISECONDS_IN_HOUR +\n      minutes * MILLISECONDS_IN_MINUTE +\n      seconds * 1000\n  }\n\n  // Invalid ISO-formatted time\n  return null\n}\n\nfunction parseTimezone (timezoneString) {\n  var token\n  var absoluteOffset\n\n  // Z\n  token = parseTokenTimezoneZ.exec(timezoneString)\n  if (token) {\n    return 0\n  }\n\n  // ±hh\n  token = parseTokenTimezoneHH.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  // ±hh:mm or ±hhmm\n  token = parseTokenTimezoneHHMM.exec(timezoneString)\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60 + parseInt(token[3], 10)\n    return (token[1] === '+') ? -absoluteOffset : absoluteOffset\n  }\n\n  return 0\n}\n\nfunction dayOfISOYear (isoYear, week, day) {\n  week = week || 0\n  day = day || 0\n  var date = new Date(0)\n  date.setUTCFullYear(isoYear, 0, 4)\n  var fourthOfJanuaryDay = date.getUTCDay() || 7\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay\n  date.setUTCDate(date.getUTCDate() + diff)\n  return date\n}\n\nmodule.exports = parse\n","module.exports = require(\"fs\");","var parse = require('../parse/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * var result = getISOYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nfunction getISOYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n\n  var fourthOfJanuaryOfNextYear = new Date(0)\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4)\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0)\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear)\n\n  var fourthOfJanuaryOfThisYear = new Date(0)\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4)\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0)\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear)\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year\n  } else {\n    return year - 1\n  }\n}\n\nmodule.exports = getISOYear\n","var startOfWeek = require('../start_of_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfISOWeek (dirtyDate) {\n  return startOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = startOfISOWeek\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nfunction startOfDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfDay\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added\n * @returns {Date} the new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nfunction addDays (dirtyDate, dirtyAmount) {\n  var date = parse(dirtyDate)\n  var amount = Number(dirtyAmount)\n  date.setDate(date.getDate() + amount)\n  return date\n}\n\nmodule.exports = addDays\n","var parse = require('../parse/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @returns {Date} the new date with the milliseconds added\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nfunction addMilliseconds (dirtyDate, dirtyAmount) {\n  var timestamp = parse(dirtyDate).getTime()\n  var amount = Number(dirtyAmount)\n  return new Date(timestamp + amount)\n}\n\nmodule.exports = addMilliseconds\n","var getISOYear = require('../get_iso_year/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * var result = startOfISOYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nfunction startOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(year, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuary)\n  return date\n}\n\nmodule.exports = startOfISOYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * )\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nfunction compareAsc (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var timeLeft = dateLeft.getTime()\n  var dateRight = parse(dirtyDateRight)\n  var timeRight = dateRight.getTime()\n\n  if (timeLeft < timeRight) {\n    return -1\n  } else if (timeLeft > timeRight) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nmodule.exports = compareAsc\n","module.exports = require(\"buffer\");","var buildDistanceInWordsLocale = require('./build_distance_in_words_locale/index.js')\nvar buildFormatLocale = require('./build_format_locale/index.js')\n\n/**\n * @category Locales\n * @summary English locale.\n */\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n}\n","var parse = require('../parse/index.js')\n\n/**\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn\n\n  date.setDate(date.getDate() - diff)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfWeek\n","var startOfDay = require('../start_of_day/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_DAY = 86400000\n\n/**\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n */\nfunction differenceInCalendarDays (dirtyDateLeft, dirtyDateRight) {\n  var startOfDayLeft = startOfDay(dirtyDateLeft)\n  var startOfDayRight = startOfDay(dirtyDateRight)\n\n  var timestampLeft = startOfDayLeft.getTime() -\n    startOfDayLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfDayRight.getTime() -\n    startOfDayRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY)\n}\n\nmodule.exports = differenceInCalendarDays\n","var parse = require('../parse/index.js')\nvar getDaysInMonth = require('../get_days_in_month/index.js')\n\n/**\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added\n * @returns {Date} the new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nfunction addMonths (dirtyDate, dirtyAmount) {\n  var date = parse(dirtyDate)\n  var amount = Number(dirtyAmount)\n  var desiredMonth = date.getMonth() + amount\n  var dateWithDesiredMonth = new Date(0)\n  dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1)\n  dateWithDesiredMonth.setHours(0, 0, 0, 0)\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth)\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()))\n  return date\n}\n\nmodule.exports = addMonths\n","var parse = require('../parse/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nfunction differenceInMilliseconds (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n  return dateLeft.getTime() - dateRight.getTime()\n}\n\nmodule.exports = differenceInMilliseconds\n","\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","//\n//  Copyright (c) Microsoft Corporation. All rights reserved.\n//\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\n/**\n * Entrypoint and type definitions for Live Share for VS Code extension API\n */\nconst path = require('path');\nconst vscode = require('vscode');\n/**\n * Extension ID of the Live Share extension for VS Code.\n */\nexports.extensionId = 'ms-vsliveshare.vsliveshare';\n/**\n * Entrypoint for access to the Live Share API.\n *\n * @returns an instance of the Live Share API, or `null` if the Live Share extension\n * is not installed or failed to activate.\n *\n * @example To access the Live Share API from another extension:\n *\n *     import * as vsls from 'vsls/vscode';\n *     const liveshare = await vsls.getApi();\n */\nasync function getApi() {\n    const liveshareExtension = vscode.extensions.getExtension(exports.extensionId);\n    if (!liveshareExtension) {\n        // The extension is not installed.\n        return null;\n    }\n    const extensionApi = liveshareExtension.isActive ? liveshareExtension.exports : await liveshareExtension.activate();\n    if (!extensionApi) {\n        // The extensibility API is not enabled.\n        return null;\n    }\n    const liveShareApiVersion = '0.3.967'; //require(path.join(__dirname, 'package.json')).version;\n    // Support deprecated function name to preserve compatibility with older versions of VSLS.\n    if (!extensionApi.getApi) return extensionApi.getApiAsync(liveShareApiVersion);\n    return extensionApi.getApi(liveShareApiVersion);\n}\nexports.getApi = getApi;\n/** @deprecated */\nfunction getApiAsync() {\n    return getApi();\n}\nexports.getApiAsync = getApiAsync;\nvar Role;\n(function(Role) {\n    Role[(Role['None'] = 0)] = 'None';\n    Role[(Role['Host'] = 1)] = 'Host';\n    Role[(Role['Guest'] = 2)] = 'Guest';\n})((Role = exports.Role || (exports.Role = {})));\n/** This is just a placeholder for a richer access control model to be added later. */\nvar Access;\n(function(Access) {\n    Access[(Access['None'] = 0)] = 'None';\n    Access[(Access['ReadOnly'] = 1)] = 'ReadOnly';\n    Access[(Access['ReadWrite'] = 3)] = 'ReadWrite';\n    Access[(Access['Owner'] = 255)] = 'Owner';\n})((Access = exports.Access || (exports.Access = {})));\n/**\n * Identifiers for Live Share tree views. These identifiers may be used by other extensions\n * to extend Live Share tree views with additional nodes via the `registerTreeDataProvider()`\n * API.\n */\nvar View;\n(function(View) {\n    View['Session'] = 'liveshare.session';\n    View['ExplorerSession'] = 'liveshare.session.explorer';\n    View['Contacts'] = 'liveshare.contacts';\n    View['Feedback'] = 'liveshare.feedback';\n})((View = exports.View || (exports.View = {})));\n/**\n * Identifiers for Live Share tree view items. These identifiers may be used by other\n * extensions to extend Live Share tree items with additional commands using conditional\n * expressions in the `view/item/context` section of their own package.json.\n */\nvar ViewItem;\n(function(ViewItem) {\n    // session item groups\n    ViewItem['Participants'] = 'participants';\n    ViewItem['Servers'] = 'servers';\n    ViewItem['Terminals'] = 'terminals';\n    // participants\n    ViewItem['CurrentUser'] = 'participants.currentuser';\n    ViewItem['Guest'] = 'participants.guest';\n    ViewItem['FollowedGuest'] = 'participants.guest.followed';\n    ViewItem['Participant'] = 'participants.participant';\n    ViewItem['FollowedParticipant'] = 'participants.participant.followed';\n    // servers\n    ViewItem['LocalServer'] = 'servers.local';\n    ViewItem['RemoteServer'] = 'servers.remote';\n    // terminals\n    ViewItem['LocalTerminalReadOnly'] = 'terminals.local.readonly';\n    ViewItem['LocalTerminalReadWrite'] = 'terminals.local.readwrite';\n    ViewItem['RemoteTerminal'] = 'terminals.remote';\n    // contacts\n    ViewItem['SuggestedContacts'] = 'contacts.suggested';\n    ViewItem['AvailableContacts'] = 'contacts.available';\n    ViewItem['ContactsProvider'] = 'contacts.provider';\n    ViewItem['ContactsStatus'] = 'contacts.status';\n    ViewItem['Contact'] = 'contacts.contact';\n    // feedback\n    ViewItem['SessionFeedbackQuestion'] = 'feedback.sessionFeedback';\n    ViewItem['ReportAProblem'] = 'feedback.reportAProblem';\n    ViewItem['TweetUsYourFeedback'] = 'feedback.tweetUsYourFeedback';\n    ViewItem['Survey'] = 'feedback.survey';\n    ViewItem['GoodFeedback'] = 'feedback.goodFeedback';\n    ViewItem['BadFeedback'] = 'feedback.badFeedback';\n    ViewItem['DontAskAgain'] = 'feedback.dontAskAgain';\n    ViewItem['Thankyou'] = 'feedback.thankyou';\n    // Shown while session sharing / joining is in progress\n    ViewItem['Loading'] = 'loading';\n    // Other / unspecified item type\n    ViewItem['Other'] = 'other';\n})((ViewItem = exports.ViewItem || (exports.ViewItem = {})));\n\n//# sourceMappingURL=liveShare.js.map\n","/**\n * @category Common Helpers\n * @summary Is the given argument an instance of Date?\n *\n * @description\n * Is the given argument an instance of Date?\n *\n * @param {*} argument - the argument to check\n * @returns {Boolean} the given argument is an instance of Date\n *\n * @example\n * // Is 'mayonnaise' a Date?\n * var result = isDate('mayonnaise')\n * //=> false\n */\nfunction isDate (argument) {\n  return argument instanceof Date\n}\n\nmodule.exports = isDate\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of days in a month\n *\n * @example\n * // How many days are in February 2000?\n * var result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\nfunction getDaysInMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  var monthIndex = date.getMonth()\n  var lastDayOfMonth = new Date(0)\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0)\n  lastDayOfMonth.setHours(0, 0, 0, 0)\n  return lastDayOfMonth.getDate()\n}\n\nmodule.exports = getDaysInMonth\n","var addDays = require('../add_days/index.js')\n\n/**\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added\n * @returns {Date} the new date with the weeks added\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * var result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nfunction addWeeks (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  var days = amount * 7\n  return addDays(dirtyDate, days)\n}\n\nmodule.exports = addWeeks\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return -1 if the first date is after the second,\n * 1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:\n * var result = compareDesc(\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * )\n * //=> 1\n *\n * @example\n * // Sort the array of dates in reverse chronological order:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareDesc)\n * //=> [\n * //   Sun Jul 02 1995 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Wed Feb 11 1987 00:00:00\n * // ]\n */\nfunction compareDesc (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var timeLeft = dateLeft.getTime()\n  var dateRight = parse(dirtyDateRight)\n  var timeRight = dateRight.getTime()\n\n  if (timeLeft > timeRight) {\n    return -1\n  } else if (timeLeft < timeRight) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nmodule.exports = compareDesc\n","var parse = require('../parse/index.js')\nvar differenceInCalendarMonths = require('../difference_in_calendar_months/index.js')\nvar compareAsc = require('../compare_asc/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 7\n */\nfunction differenceInMonths (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight))\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference)\n\n  // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastMonthNotFull)\n}\n\nmodule.exports = differenceInMonths\n","var differenceInMilliseconds = require('../difference_in_milliseconds/index.js')\n\n/**\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nfunction differenceInSeconds (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInSeconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nfunction endOfDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfDay\n","var parse = require('../parse/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\nvar startOfISOYear = require('../start_of_iso_year/index.js')\n\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nfunction getISOWeek (dirtyDate) {\n  var date = parse(dirtyDate)\n  var diff = startOfISOWeek(date).getTime() - startOfISOYear(date).getTime()\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1\n}\n\nmodule.exports = getISOWeek\n","var startOfWeek = require('../start_of_week/index.js')\n\n/**\n * @category Week Helpers\n * @summary Are the given dates in the same week?\n *\n * @description\n * Are the given dates in the same week?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(\n *   new Date(2014, 7, 31),\n *   new Date(2014, 8, 4)\n * )\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(\n *   new Date(2014, 7, 31),\n *   new Date(2014, 8, 4),\n *   {weekStartsOn: 1}\n * )\n * //=> false\n */\nfunction isSameWeek (dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, dirtyOptions)\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, dirtyOptions)\n\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime()\n}\n\nmodule.exports = isSameWeek\n","module.exports = require(\"stream\");","module.exports = {\n  addDays: require('./add_days/index.js'),\n  addHours: require('./add_hours/index.js'),\n  addISOYears: require('./add_iso_years/index.js'),\n  addMilliseconds: require('./add_milliseconds/index.js'),\n  addMinutes: require('./add_minutes/index.js'),\n  addMonths: require('./add_months/index.js'),\n  addQuarters: require('./add_quarters/index.js'),\n  addSeconds: require('./add_seconds/index.js'),\n  addWeeks: require('./add_weeks/index.js'),\n  addYears: require('./add_years/index.js'),\n  areRangesOverlapping: require('./are_ranges_overlapping/index.js'),\n  closestIndexTo: require('./closest_index_to/index.js'),\n  closestTo: require('./closest_to/index.js'),\n  compareAsc: require('./compare_asc/index.js'),\n  compareDesc: require('./compare_desc/index.js'),\n  differenceInCalendarDays: require('./difference_in_calendar_days/index.js'),\n  differenceInCalendarISOWeeks: require('./difference_in_calendar_iso_weeks/index.js'),\n  differenceInCalendarISOYears: require('./difference_in_calendar_iso_years/index.js'),\n  differenceInCalendarMonths: require('./difference_in_calendar_months/index.js'),\n  differenceInCalendarQuarters: require('./difference_in_calendar_quarters/index.js'),\n  differenceInCalendarWeeks: require('./difference_in_calendar_weeks/index.js'),\n  differenceInCalendarYears: require('./difference_in_calendar_years/index.js'),\n  differenceInDays: require('./difference_in_days/index.js'),\n  differenceInHours: require('./difference_in_hours/index.js'),\n  differenceInISOYears: require('./difference_in_iso_years/index.js'),\n  differenceInMilliseconds: require('./difference_in_milliseconds/index.js'),\n  differenceInMinutes: require('./difference_in_minutes/index.js'),\n  differenceInMonths: require('./difference_in_months/index.js'),\n  differenceInQuarters: require('./difference_in_quarters/index.js'),\n  differenceInSeconds: require('./difference_in_seconds/index.js'),\n  differenceInWeeks: require('./difference_in_weeks/index.js'),\n  differenceInYears: require('./difference_in_years/index.js'),\n  distanceInWords: require('./distance_in_words/index.js'),\n  distanceInWordsStrict: require('./distance_in_words_strict/index.js'),\n  distanceInWordsToNow: require('./distance_in_words_to_now/index.js'),\n  eachDay: require('./each_day/index.js'),\n  endOfDay: require('./end_of_day/index.js'),\n  endOfHour: require('./end_of_hour/index.js'),\n  endOfISOWeek: require('./end_of_iso_week/index.js'),\n  endOfISOYear: require('./end_of_iso_year/index.js'),\n  endOfMinute: require('./end_of_minute/index.js'),\n  endOfMonth: require('./end_of_month/index.js'),\n  endOfQuarter: require('./end_of_quarter/index.js'),\n  endOfSecond: require('./end_of_second/index.js'),\n  endOfToday: require('./end_of_today/index.js'),\n  endOfTomorrow: require('./end_of_tomorrow/index.js'),\n  endOfWeek: require('./end_of_week/index.js'),\n  endOfYear: require('./end_of_year/index.js'),\n  endOfYesterday: require('./end_of_yesterday/index.js'),\n  format: require('./format/index.js'),\n  getDate: require('./get_date/index.js'),\n  getDay: require('./get_day/index.js'),\n  getDayOfYear: require('./get_day_of_year/index.js'),\n  getDaysInMonth: require('./get_days_in_month/index.js'),\n  getDaysInYear: require('./get_days_in_year/index.js'),\n  getHours: require('./get_hours/index.js'),\n  getISODay: require('./get_iso_day/index.js'),\n  getISOWeek: require('./get_iso_week/index.js'),\n  getISOWeeksInYear: require('./get_iso_weeks_in_year/index.js'),\n  getISOYear: require('./get_iso_year/index.js'),\n  getMilliseconds: require('./get_milliseconds/index.js'),\n  getMinutes: require('./get_minutes/index.js'),\n  getMonth: require('./get_month/index.js'),\n  getOverlappingDaysInRanges: require('./get_overlapping_days_in_ranges/index.js'),\n  getQuarter: require('./get_quarter/index.js'),\n  getSeconds: require('./get_seconds/index.js'),\n  getTime: require('./get_time/index.js'),\n  getYear: require('./get_year/index.js'),\n  isAfter: require('./is_after/index.js'),\n  isBefore: require('./is_before/index.js'),\n  isDate: require('./is_date/index.js'),\n  isEqual: require('./is_equal/index.js'),\n  isFirstDayOfMonth: require('./is_first_day_of_month/index.js'),\n  isFriday: require('./is_friday/index.js'),\n  isFuture: require('./is_future/index.js'),\n  isLastDayOfMonth: require('./is_last_day_of_month/index.js'),\n  isLeapYear: require('./is_leap_year/index.js'),\n  isMonday: require('./is_monday/index.js'),\n  isPast: require('./is_past/index.js'),\n  isSameDay: require('./is_same_day/index.js'),\n  isSameHour: require('./is_same_hour/index.js'),\n  isSameISOWeek: require('./is_same_iso_week/index.js'),\n  isSameISOYear: require('./is_same_iso_year/index.js'),\n  isSameMinute: require('./is_same_minute/index.js'),\n  isSameMonth: require('./is_same_month/index.js'),\n  isSameQuarter: require('./is_same_quarter/index.js'),\n  isSameSecond: require('./is_same_second/index.js'),\n  isSameWeek: require('./is_same_week/index.js'),\n  isSameYear: require('./is_same_year/index.js'),\n  isSaturday: require('./is_saturday/index.js'),\n  isSunday: require('./is_sunday/index.js'),\n  isThisHour: require('./is_this_hour/index.js'),\n  isThisISOWeek: require('./is_this_iso_week/index.js'),\n  isThisISOYear: require('./is_this_iso_year/index.js'),\n  isThisMinute: require('./is_this_minute/index.js'),\n  isThisMonth: require('./is_this_month/index.js'),\n  isThisQuarter: require('./is_this_quarter/index.js'),\n  isThisSecond: require('./is_this_second/index.js'),\n  isThisWeek: require('./is_this_week/index.js'),\n  isThisYear: require('./is_this_year/index.js'),\n  isThursday: require('./is_thursday/index.js'),\n  isToday: require('./is_today/index.js'),\n  isTomorrow: require('./is_tomorrow/index.js'),\n  isTuesday: require('./is_tuesday/index.js'),\n  isValid: require('./is_valid/index.js'),\n  isWednesday: require('./is_wednesday/index.js'),\n  isWeekend: require('./is_weekend/index.js'),\n  isWithinRange: require('./is_within_range/index.js'),\n  isYesterday: require('./is_yesterday/index.js'),\n  lastDayOfISOWeek: require('./last_day_of_iso_week/index.js'),\n  lastDayOfISOYear: require('./last_day_of_iso_year/index.js'),\n  lastDayOfMonth: require('./last_day_of_month/index.js'),\n  lastDayOfQuarter: require('./last_day_of_quarter/index.js'),\n  lastDayOfWeek: require('./last_day_of_week/index.js'),\n  lastDayOfYear: require('./last_day_of_year/index.js'),\n  max: require('./max/index.js'),\n  min: require('./min/index.js'),\n  parse: require('./parse/index.js'),\n  setDate: require('./set_date/index.js'),\n  setDay: require('./set_day/index.js'),\n  setDayOfYear: require('./set_day_of_year/index.js'),\n  setHours: require('./set_hours/index.js'),\n  setISODay: require('./set_iso_day/index.js'),\n  setISOWeek: require('./set_iso_week/index.js'),\n  setISOYear: require('./set_iso_year/index.js'),\n  setMilliseconds: require('./set_milliseconds/index.js'),\n  setMinutes: require('./set_minutes/index.js'),\n  setMonth: require('./set_month/index.js'),\n  setQuarter: require('./set_quarter/index.js'),\n  setSeconds: require('./set_seconds/index.js'),\n  setYear: require('./set_year/index.js'),\n  startOfDay: require('./start_of_day/index.js'),\n  startOfHour: require('./start_of_hour/index.js'),\n  startOfISOWeek: require('./start_of_iso_week/index.js'),\n  startOfISOYear: require('./start_of_iso_year/index.js'),\n  startOfMinute: require('./start_of_minute/index.js'),\n  startOfMonth: require('./start_of_month/index.js'),\n  startOfQuarter: require('./start_of_quarter/index.js'),\n  startOfSecond: require('./start_of_second/index.js'),\n  startOfToday: require('./start_of_today/index.js'),\n  startOfTomorrow: require('./start_of_tomorrow/index.js'),\n  startOfWeek: require('./start_of_week/index.js'),\n  startOfYear: require('./start_of_year/index.js'),\n  startOfYesterday: require('./start_of_yesterday/index.js'),\n  subDays: require('./sub_days/index.js'),\n  subHours: require('./sub_hours/index.js'),\n  subISOYears: require('./sub_iso_years/index.js'),\n  subMilliseconds: require('./sub_milliseconds/index.js'),\n  subMinutes: require('./sub_minutes/index.js'),\n  subMonths: require('./sub_months/index.js'),\n  subQuarters: require('./sub_quarters/index.js'),\n  subSeconds: require('./sub_seconds/index.js'),\n  subWeeks: require('./sub_weeks/index.js'),\n  subYears: require('./sub_years/index.js')\n}\n","module.exports = require(\"crypto\");","var addMilliseconds = require('../add_milliseconds/index.js')\n\nvar MILLISECONDS_IN_HOUR = 3600000\n\n/**\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added\n * @returns {Date} the new date with the hours added\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * var result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\nfunction addHours (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR)\n}\n\nmodule.exports = addHours\n","var getISOYear = require('../get_iso_year/index.js')\nvar setISOYear = require('../set_iso_year/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Add the specified number of ISO week-numbering years to the given date.\n *\n * @description\n * Add the specified number of ISO week-numbering years to the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be added\n * @returns {Date} the new date with the ISO week-numbering years added\n *\n * @example\n * // Add 5 ISO week-numbering years to 2 July 2010:\n * var result = addISOYears(new Date(2010, 6, 2), 5)\n * //=> Fri Jun 26 2015 00:00:00\n */\nfunction addISOYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return setISOYear(dirtyDate, getISOYear(dirtyDate) + amount)\n}\n\nmodule.exports = addISOYears\n","var parse = require('../parse/index.js')\nvar startOfISOYear = require('../start_of_iso_year/index.js')\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Set the ISO week-numbering year to the given date.\n *\n * @description\n * Set the ISO week-numbering year to the given date,\n * saving the week number and the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} isoYear - the ISO week-numbering year of the new date\n * @returns {Date} the new date with the ISO week-numbering year setted\n *\n * @example\n * // Set ISO week-numbering year 2007 to 29 December 2008:\n * var result = setISOYear(new Date(2008, 11, 29), 2007)\n * //=> Mon Jan 01 2007 00:00:00\n */\nfunction setISOYear (dirtyDate, dirtyISOYear) {\n  var date = parse(dirtyDate)\n  var isoYear = Number(dirtyISOYear)\n  var diff = differenceInCalendarDays(date, startOfISOYear(date))\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(isoYear, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  date = startOfISOYear(fourthOfJanuary)\n  date.setDate(date.getDate() + diff)\n  return date\n}\n\nmodule.exports = setISOYear\n","var addMilliseconds = require('../add_milliseconds/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\n\n/**\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added\n * @returns {Date} the new date with the minutes added\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * var result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\nfunction addMinutes (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE)\n}\n\nmodule.exports = addMinutes\n","var addMonths = require('../add_months/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be added\n * @returns {Date} the new date with the quarters added\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * var result = addQuarters(new Date(2014, 8, 1), 1)\n * //=> Mon Dec 01 2014 00:00:00\n */\nfunction addQuarters (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  var months = amount * 3\n  return addMonths(dirtyDate, months)\n}\n\nmodule.exports = addQuarters\n","var addMilliseconds = require('../add_milliseconds/index.js')\n\n/**\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be added\n * @returns {Date} the new date with the seconds added\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * var result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\nfunction addSeconds (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, amount * 1000)\n}\n\nmodule.exports = addSeconds\n","var addMonths = require('../add_months/index.js')\n\n/**\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added\n * @returns {Date} the new date with the years added\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * var result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\nfunction addYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMonths(dirtyDate, amount * 12)\n}\n\nmodule.exports = addYears\n","var getISOYear = require('../get_iso_year/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of calendar ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of calendar ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO week-numbering years\n *\n * @example\n * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?\n * var result = differenceInCalendarISOYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 2\n */\nfunction differenceInCalendarISOYears (dirtyDateLeft, dirtyDateRight) {\n  return getISOYear(dirtyDateLeft) - getISOYear(dirtyDateRight)\n}\n\nmodule.exports = differenceInCalendarISOYears\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nfunction differenceInCalendarMonths (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear()\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth()\n\n  return yearDiff * 12 + monthDiff\n}\n\nmodule.exports = differenceInCalendarMonths\n","var parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Get the year quarter of the given date.\n *\n * @description\n * Get the year quarter of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the quarter\n *\n * @example\n * // Which quarter is 2 July 2014?\n * var result = getQuarter(new Date(2014, 6, 2))\n * //=> 3\n */\nfunction getQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var quarter = Math.floor(date.getMonth() / 3) + 1\n  return quarter\n}\n\nmodule.exports = getQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar years\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\nfunction differenceInCalendarYears (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  return dateLeft.getFullYear() - dateRight.getFullYear()\n}\n\nmodule.exports = differenceInCalendarYears\n","var parse = require('../parse/index.js')\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js')\nvar compareAsc = require('../compare_asc/index.js')\n\n/**\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full days\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n */\nfunction differenceInDays (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight))\n  dateLeft.setDate(dateLeft.getDate() - sign * difference)\n\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastDayNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastDayNotFull)\n}\n\nmodule.exports = differenceInDays\n","var addISOYears = require('../add_iso_years/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Subtract the specified number of ISO week-numbering years from the given date.\n *\n * @description\n * Subtract the specified number of ISO week-numbering years from the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of ISO week-numbering years to be subtracted\n * @returns {Date} the new date with the ISO week-numbering years subtracted\n *\n * @example\n * // Subtract 5 ISO week-numbering years from 1 September 2014:\n * var result = subISOYears(new Date(2014, 8, 1), 5)\n * //=> Mon Aug 31 2009 00:00:00\n */\nfunction subISOYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addISOYears(dirtyDate, -amount)\n}\n\nmodule.exports = subISOYears\n","var compareDesc = require('../compare_desc/index.js')\nvar parse = require('../parse/index.js')\nvar differenceInSeconds = require('../difference_in_seconds/index.js')\nvar differenceInMonths = require('../difference_in_months/index.js')\nvar enLocale = require('../locale/en/index.js')\n\nvar MINUTES_IN_DAY = 1440\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520\nvar MINUTES_IN_MONTH = 43200\nvar MINUTES_IN_TWO_MONTHS = 86400\n\n/**\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date|String|Number} date - the other date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the distance in words\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = distanceInWords(\n *   new Date(2014, 6, 2),\n *   new Date(2015, 0, 1)\n * )\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * var result = distanceInWords(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = distanceInWords(\n *   new Date(2016, 0, 1),\n *   new Date(2015, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = distanceInWords(\n *   new Date(2016, 7, 1),\n *   new Date(2015, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nfunction distanceInWords (dirtyDateToCompare, dirtyDate, dirtyOptions) {\n  var options = dirtyOptions || {}\n\n  var comparison = compareDesc(dirtyDateToCompare, dirtyDate)\n\n  var locale = options.locale\n  var localize = enLocale.distanceInWords.localize\n  if (locale && locale.distanceInWords && locale.distanceInWords.localize) {\n    localize = locale.distanceInWords.localize\n  }\n\n  var localizeOptions = {\n    addSuffix: Boolean(options.addSuffix),\n    comparison: comparison\n  }\n\n  var dateLeft, dateRight\n  if (comparison > 0) {\n    dateLeft = parse(dirtyDateToCompare)\n    dateRight = parse(dirtyDate)\n  } else {\n    dateLeft = parse(dirtyDate)\n    dateRight = parse(dirtyDateToCompare)\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft)\n  var offset = dateRight.getTimezoneOffset() - dateLeft.getTimezoneOffset()\n  var minutes = Math.round(seconds / 60) - offset\n  var months\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return localize('lessThanXSeconds', 5, localizeOptions)\n      } else if (seconds < 10) {\n        return localize('lessThanXSeconds', 10, localizeOptions)\n      } else if (seconds < 20) {\n        return localize('lessThanXSeconds', 20, localizeOptions)\n      } else if (seconds < 40) {\n        return localize('halfAMinute', null, localizeOptions)\n      } else if (seconds < 60) {\n        return localize('lessThanXMinutes', 1, localizeOptions)\n      } else {\n        return localize('xMinutes', 1, localizeOptions)\n      }\n    } else {\n      if (minutes === 0) {\n        return localize('lessThanXMinutes', 1, localizeOptions)\n      } else {\n        return localize('xMinutes', minutes, localizeOptions)\n      }\n    }\n\n  // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return localize('xMinutes', minutes, localizeOptions)\n\n  // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return localize('aboutXHours', 1, localizeOptions)\n\n  // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60)\n    return localize('aboutXHours', hours, localizeOptions)\n\n  // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return localize('xDays', 1, localizeOptions)\n\n  // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY)\n    return localize('xDays', days, localizeOptions)\n\n  // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH)\n    return localize('aboutXMonths', months, localizeOptions)\n  }\n\n  months = differenceInMonths(dateRight, dateLeft)\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH)\n    return localize('xMonths', nearestMonth, localizeOptions)\n\n  // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12\n    var years = Math.floor(months / 12)\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return localize('aboutXYears', years, localizeOptions)\n\n    // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return localize('overXYears', years, localizeOptions)\n\n    // N years 9 months up to N year 12 months\n    } else {\n      return localize('almostXYears', years + 1, localizeOptions)\n    }\n  }\n}\n\nmodule.exports = distanceInWords\n","var parse = require('../parse/index.js')\n\n/**\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nfunction endOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn)\n\n  date.setDate(date.getDate() + diff)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfWeek\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nfunction endOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  date.setFullYear(date.getFullYear(), month + 1, 0)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfMonth\n","var parse = require('../parse/index.js')\nvar startOfYear = require('../start_of_year/index.js')\nvar differenceInCalendarDays = require('../difference_in_calendar_days/index.js')\n\n/**\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nfunction getDayOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var diff = differenceInCalendarDays(date, startOfYear(date))\n  var dayOfYear = diff + 1\n  return dayOfYear\n}\n\nmodule.exports = getDayOfYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nfunction startOfYear (dirtyDate) {\n  var cleanDate = parse(dirtyDate)\n  var date = new Date(0)\n  date.setFullYear(cleanDate.getFullYear(), 0, 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfYear\n","var isDate = require('../is_date/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {Date} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} argument must be an instance of Date\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\nfunction isValid (dirtyDate) {\n  if (isDate(dirtyDate)) {\n    return !isNaN(dirtyDate)\n  } else {\n    throw new TypeError(toString.call(dirtyDate) + ' is not an instance of Date')\n  }\n}\n\nmodule.exports = isValid\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Is the given date in the leap year?\n *\n * @description\n * Is the given date in the leap year?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in the leap year\n *\n * @example\n * // Is 1 September 2012 in the leap year?\n * var result = isLeapYear(new Date(2012, 8, 1))\n * //=> true\n */\nfunction isLeapYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0\n}\n\nmodule.exports = isLeapYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * var result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nfunction getISODay (dirtyDate) {\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n\n  if (day === 0) {\n    day = 7\n  }\n\n  return day\n}\n\nmodule.exports = getISODay\n","var startOfHour = require('../start_of_hour/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Are the given dates in the same hour?\n *\n * @description\n * Are the given dates in the same hour?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same hour\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n * var result = isSameHour(\n *   new Date(2014, 8, 4, 6, 0),\n *   new Date(2014, 8, 4, 6, 30)\n * )\n * //=> true\n */\nfunction isSameHour (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft)\n  var dateRightStartOfHour = startOfHour(dirtyDateRight)\n\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime()\n}\n\nmodule.exports = isSameHour\n","var parse = require('../parse/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an hour\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * var result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\nfunction startOfHour (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMinutes(0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfHour\n","var isSameWeek = require('../is_same_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Are the given dates in the same ISO week?\n *\n * @description\n * Are the given dates in the same ISO week?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week\n *\n * @example\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\n * var result = isSameISOWeek(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 8, 7)\n * )\n * //=> true\n */\nfunction isSameISOWeek (dirtyDateLeft, dirtyDateRight) {\n  return isSameWeek(dirtyDateLeft, dirtyDateRight, {weekStartsOn: 1})\n}\n\nmodule.exports = isSameISOWeek\n","var startOfISOYear = require('../start_of_iso_year/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Are the given dates in the same ISO week-numbering year?\n *\n * @description\n * Are the given dates in the same ISO week-numbering year?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same ISO week-numbering year\n *\n * @example\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\n * var result = isSameISOYear(\n *   new Date(2003, 11, 29),\n *   new Date(2005, 0, 2)\n * )\n * //=> true\n */\nfunction isSameISOYear (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfYear = startOfISOYear(dirtyDateLeft)\n  var dateRightStartOfYear = startOfISOYear(dirtyDateRight)\n\n  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime()\n}\n\nmodule.exports = isSameISOYear\n","var startOfMinute = require('../start_of_minute/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Are the given dates in the same minute?\n *\n * @description\n * Are the given dates in the same minute?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same minute\n *\n * @example\n * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15\n * // in the same minute?\n * var result = isSameMinute(\n *   new Date(2014, 8, 4, 6, 30),\n *   new Date(2014, 8, 4, 6, 30, 15)\n * )\n * //=> true\n */\nfunction isSameMinute (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfMinute = startOfMinute(dirtyDateLeft)\n  var dateRightStartOfMinute = startOfMinute(dirtyDateRight)\n\n  return dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime()\n}\n\nmodule.exports = isSameMinute\n","var parse = require('../parse/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a minute\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * var result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\nfunction startOfMinute (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setSeconds(0, 0)\n  return date\n}\n\nmodule.exports = startOfMinute\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Are the given dates in the same month?\n *\n * @description\n * Are the given dates in the same month?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(\n *   new Date(2014, 8, 2),\n *   new Date(2014, 8, 25)\n * )\n * //=> true\n */\nfunction isSameMonth (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n  return dateLeft.getFullYear() === dateRight.getFullYear() &&\n    dateLeft.getMonth() === dateRight.getMonth()\n}\n\nmodule.exports = isSameMonth\n","var startOfQuarter = require('../start_of_quarter/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Are the given dates in the same year quarter?\n *\n * @description\n * Are the given dates in the same year quarter?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same quarter\n *\n * @example\n * // Are 1 January 2014 and 8 March 2014 in the same quarter?\n * var result = isSameQuarter(\n *   new Date(2014, 0, 1),\n *   new Date(2014, 2, 8)\n * )\n * //=> true\n */\nfunction isSameQuarter (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfQuarter = startOfQuarter(dirtyDateLeft)\n  var dateRightStartOfQuarter = startOfQuarter(dirtyDateRight)\n\n  return dateLeftStartOfQuarter.getTime() === dateRightStartOfQuarter.getTime()\n}\n\nmodule.exports = isSameQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Return the start of a year quarter for the given date.\n *\n * @description\n * Return the start of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a quarter\n *\n * @example\n * // The start of a quarter for 2 September 2014 11:55:00:\n * var result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Jul 01 2014 00:00:00\n */\nfunction startOfQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var currentMonth = date.getMonth()\n  var month = currentMonth - currentMonth % 3\n  date.setMonth(month, 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfQuarter\n","var startOfSecond = require('../start_of_second/index.js')\n\n/**\n * @category Second Helpers\n * @summary Are the given dates in the same second?\n *\n * @description\n * Are the given dates in the same second?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same second\n *\n * @example\n * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500\n * // in the same second?\n * var result = isSameSecond(\n *   new Date(2014, 8, 4, 6, 30, 15),\n *   new Date(2014, 8, 4, 6, 30, 15, 500)\n * )\n * //=> true\n */\nfunction isSameSecond (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfSecond = startOfSecond(dirtyDateLeft)\n  var dateRightStartOfSecond = startOfSecond(dirtyDateRight)\n\n  return dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime()\n}\n\nmodule.exports = isSameSecond\n","var parse = require('../parse/index.js')\n\n/**\n * @category Second Helpers\n * @summary Return the start of a second for the given date.\n *\n * @description\n * Return the start of a second for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a second\n *\n * @example\n * // The start of a second for 1 December 2014 22:15:45.400:\n * var result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.000\n */\nfunction startOfSecond (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMilliseconds(0)\n  return date\n}\n\nmodule.exports = startOfSecond\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * var result = isSameYear(\n *   new Date(2014, 8, 2),\n *   new Date(2014, 8, 25)\n * )\n * //=> true\n */\nfunction isSameYear (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n  return dateLeft.getFullYear() === dateRight.getFullYear()\n}\n\nmodule.exports = isSameYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Week Helpers\n * @summary Return the last day of a week for the given date.\n *\n * @description\n * Return the last day of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the last day of a week\n *\n * @example\n * // The last day of a week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:\n * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction lastDayOfWeek (dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn)\n\n  date.setHours(0, 0, 0, 0)\n  date.setDate(date.getDate() + diff)\n  return date\n}\n\nmodule.exports = lastDayOfWeek\n","var parse = require('../parse/index.js')\nvar getDaysInMonth = require('../get_days_in_month/index.js')\n\n/**\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month setted\n *\n * @example\n * // Set February to 1 September 2014:\n * var result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\nfunction setMonth (dirtyDate, dirtyMonth) {\n  var date = parse(dirtyDate)\n  var month = Number(dirtyMonth)\n  var year = date.getFullYear()\n  var day = date.getDate()\n\n  var dateWithDesiredMonth = new Date(0)\n  dateWithDesiredMonth.setFullYear(year, month, 15)\n  dateWithDesiredMonth.setHours(0, 0, 0, 0)\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth)\n  // Set the last day of the new month\n  // if the original date was the last day of the longer month\n  date.setMonth(month, Math.min(day, daysInMonth))\n  return date\n}\n\nmodule.exports = setMonth\n","module.exports = require(\"child_process\");","var parse = require('../parse/index.js')\n\n/**\n * @category Range Helpers\n * @summary Is the given date range overlapping with another date range?\n *\n * @description\n * Is the given date range overlapping with another date range?\n *\n * @param {Date|String|Number} initialRangeStartDate - the start of the initial range\n * @param {Date|String|Number} initialRangeEndDate - the end of the initial range\n * @param {Date|String|Number} comparedRangeStartDate - the start of the range to compare it with\n * @param {Date|String|Number} comparedRangeEndDate - the end of the range to compare it with\n * @returns {Boolean} whether the date ranges are overlapping\n * @throws {Error} startDate of a date range cannot be after its endDate\n *\n * @example\n * // For overlapping date ranges:\n * areRangesOverlapping(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 17), new Date(2014, 0, 21)\n * )\n * //=> true\n *\n * @example\n * // For non-overlapping date ranges:\n * areRangesOverlapping(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 21), new Date(2014, 0, 22)\n * )\n * //=> false\n */\nfunction areRangesOverlapping (dirtyInitialRangeStartDate, dirtyInitialRangeEndDate, dirtyComparedRangeStartDate, dirtyComparedRangeEndDate) {\n  var initialStartTime = parse(dirtyInitialRangeStartDate).getTime()\n  var initialEndTime = parse(dirtyInitialRangeEndDate).getTime()\n  var comparedStartTime = parse(dirtyComparedRangeStartDate).getTime()\n  var comparedEndTime = parse(dirtyComparedRangeEndDate).getTime()\n\n  if (initialStartTime > initialEndTime || comparedStartTime > comparedEndTime) {\n    throw new Error('The start of the range cannot be after the end of the range')\n  }\n\n  return initialStartTime < comparedEndTime && comparedStartTime < initialEndTime\n}\n\nmodule.exports = areRangesOverlapping\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return an index of the closest date from the array comparing to the given date.\n *\n * @description\n * Return an index of the closest date from the array comparing to the given date.\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date[]|String[]|Number[]} datesArray - the array to search\n * @returns {Number} an index of the date closest to the given date\n * @throws {TypeError} the second argument must be an instance of Array\n *\n * @example\n * // Which date is closer to 6 September 2015?\n * var dateToCompare = new Date(2015, 8, 6)\n * var datesArray = [\n *   new Date(2015, 0, 1),\n *   new Date(2016, 0, 1),\n *   new Date(2017, 0, 1)\n * ]\n * var result = closestIndexTo(dateToCompare, datesArray)\n * //=> 1\n */\nfunction closestIndexTo (dirtyDateToCompare, dirtyDatesArray) {\n  if (!(dirtyDatesArray instanceof Array)) {\n    throw new TypeError(toString.call(dirtyDatesArray) + ' is not an instance of Array')\n  }\n\n  var dateToCompare = parse(dirtyDateToCompare)\n  var timeToCompare = dateToCompare.getTime()\n\n  var result\n  var minDistance\n\n  dirtyDatesArray.forEach(function (dirtyDate, index) {\n    var currentDate = parse(dirtyDate)\n    var distance = Math.abs(timeToCompare - currentDate.getTime())\n    if (result === undefined || distance < minDistance) {\n      result = index\n      minDistance = distance\n    }\n  })\n\n  return result\n}\n\nmodule.exports = closestIndexTo\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return a date from the array closest to the given date.\n *\n * @description\n * Return a date from the array closest to the given date.\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date[]|String[]|Number[]} datesArray - the array to search\n * @returns {Date} the date from the array closest to the given date\n * @throws {TypeError} the second argument must be an instance of Array\n *\n * @example\n * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?\n * var dateToCompare = new Date(2015, 8, 6)\n * var result = closestTo(dateToCompare, [\n *   new Date(2000, 0, 1),\n *   new Date(2030, 0, 1)\n * ])\n * //=> Tue Jan 01 2030 00:00:00\n */\nfunction closestTo (dirtyDateToCompare, dirtyDatesArray) {\n  if (!(dirtyDatesArray instanceof Array)) {\n    throw new TypeError(toString.call(dirtyDatesArray) + ' is not an instance of Array')\n  }\n\n  var dateToCompare = parse(dirtyDateToCompare)\n  var timeToCompare = dateToCompare.getTime()\n\n  var result\n  var minDistance\n\n  dirtyDatesArray.forEach(function (dirtyDate) {\n    var currentDate = parse(dirtyDate)\n    var distance = Math.abs(timeToCompare - currentDate.getTime())\n    if (result === undefined || distance < minDistance) {\n      result = currentDate\n      minDistance = distance\n    }\n  })\n\n  return result\n}\n\nmodule.exports = closestTo\n","var startOfISOWeek = require('../start_of_iso_week/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week Helpers\n * @summary Get the number of calendar ISO weeks between the given dates.\n *\n * @description\n * Get the number of calendar ISO weeks between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar ISO weeks\n *\n * @example\n * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?\n * var result = differenceInCalendarISOWeeks(\n *   new Date(2014, 6, 21),\n *   new Date(2014, 6, 6)\n * )\n * //=> 3\n */\nfunction differenceInCalendarISOWeeks (dirtyDateLeft, dirtyDateRight) {\n  var startOfISOWeekLeft = startOfISOWeek(dirtyDateLeft)\n  var startOfISOWeekRight = startOfISOWeek(dirtyDateRight)\n\n  var timestampLeft = startOfISOWeekLeft.getTime() -\n    startOfISOWeekLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfISOWeekRight.getTime() -\n    startOfISOWeekRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK)\n}\n\nmodule.exports = differenceInCalendarISOWeeks\n","var getQuarter = require('../get_quarter/index.js')\nvar parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Get the number of calendar quarters between the given dates.\n *\n * @description\n * Get the number of calendar quarters between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar quarters\n *\n * @example\n * // How many calendar quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInCalendarQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 3\n */\nfunction differenceInCalendarQuarters (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear()\n  var quarterDiff = getQuarter(dateLeft) - getQuarter(dateRight)\n\n  return yearDiff * 4 + quarterDiff\n}\n\nmodule.exports = differenceInCalendarQuarters\n","var startOfWeek = require('../start_of_week/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category Week Helpers\n * @summary Get the number of calendar weeks between the given dates.\n *\n * @description\n * Get the number of calendar weeks between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the number of calendar weeks\n *\n * @example\n * // How many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 3\n *\n * @example\n * // If the week starts on Monday,\n * // how many calendar weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInCalendarWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5),\n *   {weekStartsOn: 1}\n * )\n * //=> 2\n */\nfunction differenceInCalendarWeeks (dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  var startOfWeekLeft = startOfWeek(dirtyDateLeft, dirtyOptions)\n  var startOfWeekRight = startOfWeek(dirtyDateRight, dirtyOptions)\n\n  var timestampLeft = startOfWeekLeft.getTime() -\n    startOfWeekLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n  var timestampRight = startOfWeekRight.getTime() -\n    startOfWeekRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE\n\n  // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK)\n}\n\nmodule.exports = differenceInCalendarWeeks\n","var differenceInMilliseconds = require('../difference_in_milliseconds/index.js')\n\nvar MILLISECONDS_IN_HOUR = 3600000\n\n/**\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of hours\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * var result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\nfunction differenceInHours (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInHours\n","var parse = require('../parse/index.js')\nvar differenceInCalendarISOYears = require('../difference_in_calendar_iso_years/index.js')\nvar compareAsc = require('../compare_asc/index.js')\nvar subISOYears = require('../sub_iso_years/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of full ISO week-numbering years between the given dates.\n *\n * @description\n * Get the number of full ISO week-numbering years between the given dates.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full ISO week-numbering years\n *\n * @example\n * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?\n * var result = differenceInISOYears(\n *   new Date(2012, 0, 1),\n *   new Date(2010, 0, 1)\n * )\n * //=> 1\n */\nfunction differenceInISOYears (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarISOYears(dateLeft, dateRight))\n  dateLeft = subISOYears(dateLeft, sign * difference)\n\n  // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1\n  // if last calendar ISO year is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastISOYearNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastISOYearNotFull)\n}\n\nmodule.exports = differenceInISOYears\n","var differenceInMilliseconds = require('../difference_in_milliseconds/index.js')\n\nvar MILLISECONDS_IN_MINUTE = 60000\n\n/**\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the number of minutes between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n */\nfunction differenceInMinutes (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInMinutes\n","var differenceInMonths = require('../difference_in_months/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Get the number of full quarters between the given dates.\n *\n * @description\n * Get the number of full quarters between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full quarters\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInQuarters(\n *   new Date(2014, 6, 2),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\nfunction differenceInQuarters (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInMonths(dirtyDateLeft, dirtyDateRight) / 3\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInQuarters\n","var differenceInDays = require('../difference_in_days/index.js')\n\n/**\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full weeks\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInWeeks(\n *   new Date(2014, 6, 20),\n *   new Date(2014, 6, 5)\n * )\n * //=> 2\n */\nfunction differenceInWeeks (dirtyDateLeft, dirtyDateRight) {\n  var diff = differenceInDays(dirtyDateLeft, dirtyDateRight) / 7\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff)\n}\n\nmodule.exports = differenceInWeeks\n","var parse = require('../parse/index.js')\nvar differenceInCalendarYears = require('../difference_in_calendar_years/index.js')\nvar compareAsc = require('../compare_asc/index.js')\n\n/**\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 1\n */\nfunction differenceInYears (dirtyDateLeft, dirtyDateRight) {\n  var dateLeft = parse(dirtyDateLeft)\n  var dateRight = parse(dirtyDateRight)\n\n  var sign = compareAsc(dateLeft, dateRight)\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight))\n  dateLeft.setFullYear(dateLeft.getFullYear() - sign * difference)\n\n  // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign\n  return sign * (difference - isLastYearNotFull)\n}\n\nmodule.exports = differenceInYears\n","function buildDistanceInWordsLocale () {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'less than a second',\n      other: 'less than {{count}} seconds'\n    },\n\n    xSeconds: {\n      one: '1 second',\n      other: '{{count}} seconds'\n    },\n\n    halfAMinute: 'half a minute',\n\n    lessThanXMinutes: {\n      one: 'less than a minute',\n      other: 'less than {{count}} minutes'\n    },\n\n    xMinutes: {\n      one: '1 minute',\n      other: '{{count}} minutes'\n    },\n\n    aboutXHours: {\n      one: 'about 1 hour',\n      other: 'about {{count}} hours'\n    },\n\n    xHours: {\n      one: '1 hour',\n      other: '{{count}} hours'\n    },\n\n    xDays: {\n      one: '1 day',\n      other: '{{count}} days'\n    },\n\n    aboutXMonths: {\n      one: 'about 1 month',\n      other: 'about {{count}} months'\n    },\n\n    xMonths: {\n      one: '1 month',\n      other: '{{count}} months'\n    },\n\n    aboutXYears: {\n      one: 'about 1 year',\n      other: 'about {{count}} years'\n    },\n\n    xYears: {\n      one: '1 year',\n      other: '{{count}} years'\n    },\n\n    overXYears: {\n      one: 'over 1 year',\n      other: 'over {{count}} years'\n    },\n\n    almostXYears: {\n      one: 'almost 1 year',\n      other: 'almost {{count}} years'\n    }\n  }\n\n  function localize (token, count, options) {\n    options = options || {}\n\n    var result\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token]\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count)\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'in ' + result\n      } else {\n        return result + ' ago'\n      }\n    }\n\n    return result\n  }\n\n  return {\n    localize: localize\n  }\n}\n\nmodule.exports = buildDistanceInWordsLocale\n","var buildFormattingTokensRegExp = require('../../_lib/build_formatting_tokens_reg_exp/index.js')\n\nfunction buildFormatLocale () {\n  // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n  var meridiemUppercase = ['AM', 'PM']\n  var meridiemLowercase = ['am', 'pm']\n  var meridiemFull = ['a.m.', 'p.m.']\n\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()]\n    },\n\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()]\n    },\n\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()]\n    },\n\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()]\n    },\n\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()]\n    },\n\n    // AM, PM\n    'A': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemUppercase[1] : meridiemUppercase[0]\n    },\n\n    // am, pm\n    'a': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemLowercase[1] : meridiemLowercase[0]\n    },\n\n    // a.m., p.m.\n    'aa': function (date) {\n      return (date.getHours() / 12) >= 1 ? meridiemFull[1] : meridiemFull[0]\n    }\n  }\n\n  // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W']\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date))\n    }\n  })\n\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  }\n}\n\nfunction ordinal (number) {\n  var rem100 = number % 100\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st'\n      case 2:\n        return number + 'nd'\n      case 3:\n        return number + 'rd'\n    }\n  }\n  return number + 'th'\n}\n\nmodule.exports = buildFormatLocale\n","var commonFormatterKeys = [\n  'M', 'MM', 'Q', 'D', 'DD', 'DDD', 'DDDD', 'd',\n  'E', 'W', 'WW', 'YY', 'YYYY', 'GG', 'GGGG',\n  'H', 'HH', 'h', 'hh', 'm', 'mm',\n  's', 'ss', 'S', 'SS', 'SSS',\n  'Z', 'ZZ', 'X', 'x'\n]\n\nfunction buildFormattingTokensRegExp (formatters) {\n  var formatterKeys = []\n  for (var key in formatters) {\n    if (formatters.hasOwnProperty(key)) {\n      formatterKeys.push(key)\n    }\n  }\n\n  var formattingTokens = commonFormatterKeys\n    .concat(formatterKeys)\n    .sort()\n    .reverse()\n  var formattingTokensRegExp = new RegExp(\n    '(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?' + '(' + formattingTokens.join('|') + '|.)', 'g'\n  )\n\n  return formattingTokensRegExp\n}\n\nmodule.exports = buildFormattingTokensRegExp\n","var compareDesc = require('../compare_desc/index.js')\nvar parse = require('../parse/index.js')\nvar differenceInSeconds = require('../difference_in_seconds/index.js')\nvar enLocale = require('../locale/en/index.js')\n\nvar MINUTES_IN_DAY = 1440\nvar MINUTES_IN_MONTH = 43200\nvar MINUTES_IN_YEAR = 525600\n\n/**\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words, using strict units.\n * This is like `distanceInWords`, but does not use helpers like 'almost', 'over',\n * 'less than' and the like.\n *\n * | Distance between dates | Result              |\n * |------------------------|---------------------|\n * | 0 ... 59 secs          | [0..59] seconds     |\n * | 1 ... 59 mins          | [1..59] minutes     |\n * | 1 ... 23 hrs           | [1..23] hours       |\n * | 1 ... 29 days          | [1..29] days        |\n * | 1 ... 11 months        | [1..11] months      |\n * | 1 ... N years          | [1..N]  years       |\n *\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @param {Date|String|Number} date - the other date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {'s'|'m'|'h'|'d'|'M'|'Y'} [options.unit] - if specified, will force a unit\n * @param {'floor'|'ceil'|'round'} [options.partialMethod='floor'] - which way to round partial units\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the distance in words\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * var result = distanceInWordsStrict(\n *   new Date(2014, 6, 2),\n *   new Date(2015, 0, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00?\n * var result = distanceInWordsStrict(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n * )\n * //=> '15 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * var result = distanceInWordsStrict(\n *   new Date(2016, 0, 1),\n *   new Date(2015, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> '1 year ago'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, in minutes?\n * var result = distanceInWordsStrict(\n *   new Date(2016, 0, 1),\n *   new Date(2015, 0, 1),\n *   {unit: 'm'}\n * )\n * //=> '525600 minutes'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 28 January 2015, in months, rounded up?\n * var result = distanceInWordsStrict(\n *   new Date(2015, 0, 28),\n *   new Date(2015, 0, 1),\n *   {unit: 'M', partialMethod: 'ceil'}\n * )\n * //=> '1 month'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = distanceInWordsStrict(\n *   new Date(2016, 7, 1),\n *   new Date(2015, 0, 1),\n *   {locale: eoLocale}\n * )\n * //=> '1 jaro'\n */\nfunction distanceInWordsStrict (dirtyDateToCompare, dirtyDate, dirtyOptions) {\n  var options = dirtyOptions || {}\n\n  var comparison = compareDesc(dirtyDateToCompare, dirtyDate)\n\n  var locale = options.locale\n  var localize = enLocale.distanceInWords.localize\n  if (locale && locale.distanceInWords && locale.distanceInWords.localize) {\n    localize = locale.distanceInWords.localize\n  }\n\n  var localizeOptions = {\n    addSuffix: Boolean(options.addSuffix),\n    comparison: comparison\n  }\n\n  var dateLeft, dateRight\n  if (comparison > 0) {\n    dateLeft = parse(dirtyDateToCompare)\n    dateRight = parse(dirtyDate)\n  } else {\n    dateLeft = parse(dirtyDate)\n    dateRight = parse(dirtyDateToCompare)\n  }\n\n  var unit\n  var mathPartial = Math[options.partialMethod ? String(options.partialMethod) : 'floor']\n  var seconds = differenceInSeconds(dateRight, dateLeft)\n  var offset = dateRight.getTimezoneOffset() - dateLeft.getTimezoneOffset()\n  var minutes = mathPartial(seconds / 60) - offset\n  var hours, days, months, years\n\n  if (options.unit) {\n    unit = String(options.unit)\n  } else {\n    if (minutes < 1) {\n      unit = 's'\n    } else if (minutes < 60) {\n      unit = 'm'\n    } else if (minutes < MINUTES_IN_DAY) {\n      unit = 'h'\n    } else if (minutes < MINUTES_IN_MONTH) {\n      unit = 'd'\n    } else if (minutes < MINUTES_IN_YEAR) {\n      unit = 'M'\n    } else {\n      unit = 'Y'\n    }\n  }\n\n  // 0 up to 60 seconds\n  if (unit === 's') {\n    return localize('xSeconds', seconds, localizeOptions)\n\n  // 1 up to 60 mins\n  } else if (unit === 'm') {\n    return localize('xMinutes', minutes, localizeOptions)\n\n  // 1 up to 24 hours\n  } else if (unit === 'h') {\n    hours = mathPartial(minutes / 60)\n    return localize('xHours', hours, localizeOptions)\n\n  // 1 up to 30 days\n  } else if (unit === 'd') {\n    days = mathPartial(minutes / MINUTES_IN_DAY)\n    return localize('xDays', days, localizeOptions)\n\n  // 1 up to 12 months\n  } else if (unit === 'M') {\n    months = mathPartial(minutes / MINUTES_IN_MONTH)\n    return localize('xMonths', months, localizeOptions)\n\n  // 1 year up to max Date\n  } else if (unit === 'Y') {\n    years = mathPartial(minutes / MINUTES_IN_YEAR)\n    return localize('xYears', years, localizeOptions)\n  }\n\n  throw new Error('Unknown unit: ' + unit)\n}\n\nmodule.exports = distanceInWordsStrict\n","var distanceInWords = require('../distance_in_words/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return the distance between the given date and now in words.\n *\n * @description\n * Return the distance between the given date and now in words.\n *\n * | Distance to now                                                   | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance to now     | Result               |\n * |---------------------|----------------------|\n * | 0 secs ... 5 secs   | less than 5 seconds  |\n * | 5 secs ... 10 secs  | less than 10 seconds |\n * | 10 secs ... 20 secs | less than 20 seconds |\n * | 20 secs ... 40 secs | half a minute        |\n * | 40 secs ... 60 secs | less than a minute   |\n * | 60 secs ... 90 secs | 1 minute             |\n *\n * @param {Date|String|Number} date - the given date\n * @param {Object} [options] - the object with options\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result specifies if the second date is earlier or later than the first\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the distance in words\n *\n * @example\n * // If today is 1 January 2015, what is the distance to 2 July 2014?\n * var result = distanceInWordsToNow(\n *   new Date(2014, 6, 2)\n * )\n * //=> '6 months'\n *\n * @example\n * // If now is 1 January 2015 00:00:00,\n * // what is the distance to 1 January 2015 00:00:15, including seconds?\n * var result = distanceInWordsToNow(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   {includeSeconds: true}\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 January 2016, with a suffix?\n * var result = distanceInWordsToNow(\n *   new Date(2016, 0, 1),\n *   {addSuffix: true}\n * )\n * //=> 'in about 1 year'\n *\n * @example\n * // If today is 1 January 2015,\n * // what is the distance to 1 August 2016 in Esperanto?\n * var eoLocale = require('date-fns/locale/eo')\n * var result = distanceInWordsToNow(\n *   new Date(2016, 7, 1),\n *   {locale: eoLocale}\n * )\n * //=> 'pli ol 1 jaro'\n */\nfunction distanceInWordsToNow (dirtyDate, dirtyOptions) {\n  return distanceInWords(Date.now(), dirtyDate, dirtyOptions)\n}\n\nmodule.exports = distanceInWordsToNow\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the array of dates within the specified range.\n *\n * @description\n * Return the array of dates within the specified range.\n *\n * @param {Date|String|Number} startDate - the first date\n * @param {Date|String|Number} endDate - the last date\n * @param {Number} [step=1] - the step between each day\n * @returns {Date[]} the array with starts of days from the day of startDate to the day of endDate\n * @throws {Error} startDate cannot be after endDate\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * var result = eachDay(\n *   new Date(2014, 9, 6),\n *   new Date(2014, 9, 10)\n * )\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nfunction eachDay (dirtyStartDate, dirtyEndDate, dirtyStep) {\n  var startDate = parse(dirtyStartDate)\n  var endDate = parse(dirtyEndDate)\n  var step = dirtyStep !== undefined ? dirtyStep : 1\n\n  var endTime = endDate.getTime()\n\n  if (startDate.getTime() > endTime) {\n    throw new Error('The first date cannot be after the second date')\n  }\n\n  var dates = []\n\n  var currentDate = startDate\n  currentDate.setHours(0, 0, 0, 0)\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(parse(currentDate))\n    currentDate.setDate(currentDate.getDate() + step)\n  }\n\n  return dates\n}\n\nmodule.exports = eachDay\n","var parse = require('../parse/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Return the end of an hour for the given date.\n *\n * @description\n * Return the end of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an hour\n *\n * @example\n * // The end of an hour for 2 September 2014 11:55:00:\n * var result = endOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:59:59.999\n */\nfunction endOfHour (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMinutes(59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfHour\n","var endOfWeek = require('../end_of_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an ISO week\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * var result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nfunction endOfISOWeek (dirtyDate) {\n  return endOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = endOfISOWeek\n","var getISOYear = require('../get_iso_year/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the end of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the end of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n *\n * @example\n * // The end of an ISO week-numbering year for 2 July 2005:\n * var result = endOfISOYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 23:59:59.999\n */\nfunction endOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuaryOfNextYear = new Date(0)\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4)\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuaryOfNextYear)\n  date.setMilliseconds(date.getMilliseconds() - 1)\n  return date\n}\n\nmodule.exports = endOfISOYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Return the end of a minute for the given date.\n *\n * @description\n * Return the end of a minute for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a minute\n *\n * @example\n * // The end of a minute for 1 December 2014 22:15:45.400:\n * var result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:59.999\n */\nfunction endOfMinute (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setSeconds(59, 999)\n  return date\n}\n\nmodule.exports = endOfMinute\n","var parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Return the end of a year quarter for the given date.\n *\n * @description\n * Return the end of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a quarter\n *\n * @example\n * // The end of a quarter for 2 September 2014 11:55:00:\n * var result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nfunction endOfQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var currentMonth = date.getMonth()\n  var month = currentMonth - currentMonth % 3 + 3\n  date.setMonth(month, 0)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Second Helpers\n * @summary Return the end of a second for the given date.\n *\n * @description\n * Return the end of a second for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a second\n *\n * @example\n * // The end of a second for 1 December 2014 22:15:45.400:\n * var result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.999\n */\nfunction endOfSecond (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setMilliseconds(999)\n  return date\n}\n\nmodule.exports = endOfSecond\n","var endOfDay = require('../end_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the end of today.\n *\n * @description\n * Return the end of today.\n *\n * @returns {Date} the end of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfToday()\n * //=> Mon Oct 6 2014 23:59:59.999\n */\nfunction endOfToday () {\n  return endOfDay(new Date())\n}\n\nmodule.exports = endOfToday\n","/**\n * @category Day Helpers\n * @summary Return the end of tomorrow.\n *\n * @description\n * Return the end of tomorrow.\n *\n * @returns {Date} the end of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfTomorrow()\n * //=> Tue Oct 7 2014 23:59:59.999\n */\nfunction endOfTomorrow () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day + 1)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfTomorrow\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of a year\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\nfunction endOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  date.setFullYear(year + 1, 0, 0)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfYear\n","/**\n * @category Day Helpers\n * @summary Return the end of yesterday.\n *\n * @description\n * Return the end of yesterday.\n *\n * @returns {Date} the end of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = endOfYesterday()\n * //=> Sun Oct 5 2014 23:59:59.999\n */\nfunction endOfYesterday () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day - 1)\n  date.setHours(23, 59, 59, 999)\n  return date\n}\n\nmodule.exports = endOfYesterday\n","var getDayOfYear = require('../get_day_of_year/index.js')\nvar getISOWeek = require('../get_iso_week/index.js')\nvar getISOYear = require('../get_iso_year/index.js')\nvar parse = require('../parse/index.js')\nvar isValid = require('../is_valid/index.js')\nvar enLocale = require('../locale/en/index.js')\n\n/**\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format.\n *\n * Accepted tokens:\n * | Unit                    | Token | Result examples                  |\n * |-------------------------|-------|----------------------------------|\n * | Month                   | M     | 1, 2, ..., 12                    |\n * |                         | Mo    | 1st, 2nd, ..., 12th              |\n * |                         | MM    | 01, 02, ..., 12                  |\n * |                         | MMM   | Jan, Feb, ..., Dec               |\n * |                         | MMMM  | January, February, ..., December |\n * | Quarter                 | Q     | 1, 2, 3, 4                       |\n * |                         | Qo    | 1st, 2nd, 3rd, 4th               |\n * | Day of month            | D     | 1, 2, ..., 31                    |\n * |                         | Do    | 1st, 2nd, ..., 31st              |\n * |                         | DD    | 01, 02, ..., 31                  |\n * | Day of year             | DDD   | 1, 2, ..., 366                   |\n * |                         | DDDo  | 1st, 2nd, ..., 366th             |\n * |                         | DDDD  | 001, 002, ..., 366               |\n * | Day of week             | d     | 0, 1, ..., 6                     |\n * |                         | do    | 0th, 1st, ..., 6th               |\n * |                         | dd    | Su, Mo, ..., Sa                  |\n * |                         | ddd   | Sun, Mon, ..., Sat               |\n * |                         | dddd  | Sunday, Monday, ..., Saturday    |\n * | Day of ISO week         | E     | 1, 2, ..., 7                     |\n * | ISO week                | W     | 1, 2, ..., 53                    |\n * |                         | Wo    | 1st, 2nd, ..., 53rd              |\n * |                         | WW    | 01, 02, ..., 53                  |\n * | Year                    | YY    | 00, 01, ..., 99                  |\n * |                         | YYYY  | 1900, 1901, ..., 2099            |\n * | ISO week-numbering year | GG    | 00, 01, ..., 99                  |\n * |                         | GGGG  | 1900, 1901, ..., 2099            |\n * | AM/PM                   | A     | AM, PM                           |\n * |                         | a     | am, pm                           |\n * |                         | aa    | a.m., p.m.                       |\n * | Hour                    | H     | 0, 1, ... 23                     |\n * |                         | HH    | 00, 01, ... 23                   |\n * |                         | h     | 1, 2, ..., 12                    |\n * |                         | hh    | 01, 02, ..., 12                  |\n * | Minute                  | m     | 0, 1, ..., 59                    |\n * |                         | mm    | 00, 01, ..., 59                  |\n * | Second                  | s     | 0, 1, ..., 59                    |\n * |                         | ss    | 00, 01, ..., 59                  |\n * | 1/10 of second          | S     | 0, 1, ..., 9                     |\n * | 1/100 of second         | SS    | 00, 01, ..., 99                  |\n * | Millisecond             | SSS   | 000, 001, ..., 999               |\n * | Timezone                | Z     | -01:00, +00:00, ... +12:00       |\n * |                         | ZZ    | -0100, +0000, ..., +1200         |\n * | Seconds timestamp       | X     | 512969520                        |\n * | Milliseconds timestamp  | x     | 512969520900                     |\n *\n * The characters wrapped in square brackets are escaped.\n *\n * The result may vary by locale.\n *\n * @param {Date|String|Number} date - the original date\n * @param {String} [format='YYYY-MM-DDTHH:mm:ss.SSSZ'] - the string of tokens\n * @param {Object} [options] - the object with options\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the formatted date string\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(\n *   new Date(2014, 1, 11),\n *   'MM/DD/YYYY'\n * )\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * var eoLocale = require('date-fns/locale/eo')\n * var result = format(\n *   new Date(2014, 6, 2),\n *   'Do [de] MMMM YYYY',\n *   {locale: eoLocale}\n * )\n * //=> '2-a de julio 2014'\n */\nfunction format (dirtyDate, dirtyFormatStr, dirtyOptions) {\n  var formatStr = dirtyFormatStr ? String(dirtyFormatStr) : 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n  var options = dirtyOptions || {}\n\n  var locale = options.locale\n  var localeFormatters = enLocale.format.formatters\n  var formattingTokensRegExp = enLocale.format.formattingTokensRegExp\n  if (locale && locale.format && locale.format.formatters) {\n    localeFormatters = locale.format.formatters\n\n    if (locale.format.formattingTokensRegExp) {\n      formattingTokensRegExp = locale.format.formattingTokensRegExp\n    }\n  }\n\n  var date = parse(dirtyDate)\n\n  if (!isValid(date)) {\n    return 'Invalid Date'\n  }\n\n  var formatFn = buildFormatFn(formatStr, localeFormatters, formattingTokensRegExp)\n\n  return formatFn(date)\n}\n\nvar formatters = {\n  // Month: 1, 2, ..., 12\n  'M': function (date) {\n    return date.getMonth() + 1\n  },\n\n  // Month: 01, 02, ..., 12\n  'MM': function (date) {\n    return addLeadingZeros(date.getMonth() + 1, 2)\n  },\n\n  // Quarter: 1, 2, 3, 4\n  'Q': function (date) {\n    return Math.ceil((date.getMonth() + 1) / 3)\n  },\n\n  // Day of month: 1, 2, ..., 31\n  'D': function (date) {\n    return date.getDate()\n  },\n\n  // Day of month: 01, 02, ..., 31\n  'DD': function (date) {\n    return addLeadingZeros(date.getDate(), 2)\n  },\n\n  // Day of year: 1, 2, ..., 366\n  'DDD': function (date) {\n    return getDayOfYear(date)\n  },\n\n  // Day of year: 001, 002, ..., 366\n  'DDDD': function (date) {\n    return addLeadingZeros(getDayOfYear(date), 3)\n  },\n\n  // Day of week: 0, 1, ..., 6\n  'd': function (date) {\n    return date.getDay()\n  },\n\n  // Day of ISO week: 1, 2, ..., 7\n  'E': function (date) {\n    return date.getDay() || 7\n  },\n\n  // ISO week: 1, 2, ..., 53\n  'W': function (date) {\n    return getISOWeek(date)\n  },\n\n  // ISO week: 01, 02, ..., 53\n  'WW': function (date) {\n    return addLeadingZeros(getISOWeek(date), 2)\n  },\n\n  // Year: 00, 01, ..., 99\n  'YY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4).substr(2)\n  },\n\n  // Year: 1900, 1901, ..., 2099\n  'YYYY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4)\n  },\n\n  // ISO week-numbering year: 00, 01, ..., 99\n  'GG': function (date) {\n    return String(getISOYear(date)).substr(2)\n  },\n\n  // ISO week-numbering year: 1900, 1901, ..., 2099\n  'GGGG': function (date) {\n    return getISOYear(date)\n  },\n\n  // Hour: 0, 1, ... 23\n  'H': function (date) {\n    return date.getHours()\n  },\n\n  // Hour: 00, 01, ..., 23\n  'HH': function (date) {\n    return addLeadingZeros(date.getHours(), 2)\n  },\n\n  // Hour: 1, 2, ..., 12\n  'h': function (date) {\n    var hours = date.getHours()\n    if (hours === 0) {\n      return 12\n    } else if (hours > 12) {\n      return hours % 12\n    } else {\n      return hours\n    }\n  },\n\n  // Hour: 01, 02, ..., 12\n  'hh': function (date) {\n    return addLeadingZeros(formatters['h'](date), 2)\n  },\n\n  // Minute: 0, 1, ..., 59\n  'm': function (date) {\n    return date.getMinutes()\n  },\n\n  // Minute: 00, 01, ..., 59\n  'mm': function (date) {\n    return addLeadingZeros(date.getMinutes(), 2)\n  },\n\n  // Second: 0, 1, ..., 59\n  's': function (date) {\n    return date.getSeconds()\n  },\n\n  // Second: 00, 01, ..., 59\n  'ss': function (date) {\n    return addLeadingZeros(date.getSeconds(), 2)\n  },\n\n  // 1/10 of second: 0, 1, ..., 9\n  'S': function (date) {\n    return Math.floor(date.getMilliseconds() / 100)\n  },\n\n  // 1/100 of second: 00, 01, ..., 99\n  'SS': function (date) {\n    return addLeadingZeros(Math.floor(date.getMilliseconds() / 10), 2)\n  },\n\n  // Millisecond: 000, 001, ..., 999\n  'SSS': function (date) {\n    return addLeadingZeros(date.getMilliseconds(), 3)\n  },\n\n  // Timezone: -01:00, +00:00, ... +12:00\n  'Z': function (date) {\n    return formatTimezone(date.getTimezoneOffset(), ':')\n  },\n\n  // Timezone: -0100, +0000, ... +1200\n  'ZZ': function (date) {\n    return formatTimezone(date.getTimezoneOffset())\n  },\n\n  // Seconds timestamp: 512969520\n  'X': function (date) {\n    return Math.floor(date.getTime() / 1000)\n  },\n\n  // Milliseconds timestamp: 512969520900\n  'x': function (date) {\n    return date.getTime()\n  }\n}\n\nfunction buildFormatFn (formatStr, localeFormatters, formattingTokensRegExp) {\n  var array = formatStr.match(formattingTokensRegExp)\n  var length = array.length\n\n  var i\n  var formatter\n  for (i = 0; i < length; i++) {\n    formatter = localeFormatters[array[i]] || formatters[array[i]]\n    if (formatter) {\n      array[i] = formatter\n    } else {\n      array[i] = removeFormattingTokens(array[i])\n    }\n  }\n\n  return function (date) {\n    var output = ''\n    for (var i = 0; i < length; i++) {\n      if (array[i] instanceof Function) {\n        output += array[i](date, formatters)\n      } else {\n        output += array[i]\n      }\n    }\n    return output\n  }\n}\n\nfunction removeFormattingTokens (input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|]$/g, '')\n  }\n  return input.replace(/\\\\/g, '')\n}\n\nfunction formatTimezone (offset, delimeter) {\n  delimeter = delimeter || ''\n  var sign = offset > 0 ? '-' : '+'\n  var absOffset = Math.abs(offset)\n  var hours = Math.floor(absOffset / 60)\n  var minutes = absOffset % 60\n  return sign + addLeadingZeros(hours, 2) + delimeter + addLeadingZeros(minutes, 2)\n}\n\nfunction addLeadingZeros (number, targetLength) {\n  var output = Math.abs(number).toString()\n  while (output.length < targetLength) {\n    output = '0' + output\n  }\n  return output\n}\n\nmodule.exports = format\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Get the day of the month of the given date.\n *\n * @description\n * Get the day of the month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of month\n *\n * @example\n * // Which day of the month is 29 February 2012?\n * var result = getDate(new Date(2012, 1, 29))\n * //=> 29\n */\nfunction getDate (dirtyDate) {\n  var date = parse(dirtyDate)\n  var dayOfMonth = date.getDate()\n  return dayOfMonth\n}\n\nmodule.exports = getDate\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of week\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * var result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\nfunction getDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  return day\n}\n\nmodule.exports = getDay\n","var isLeapYear = require('../is_leap_year/index.js')\n\n/**\n * @category Year Helpers\n * @summary Get the number of days in a year of the given date.\n *\n * @description\n * Get the number of days in a year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of days in a year\n *\n * @example\n * // How many days are in 2012?\n * var result = getDaysInYear(new Date(2012, 0, 1))\n * //=> 366\n */\nfunction getDaysInYear (dirtyDate) {\n  return isLeapYear(dirtyDate) ? 366 : 365\n}\n\nmodule.exports = getDaysInYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the hours\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * var result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\nfunction getHours (dirtyDate) {\n  var date = parse(dirtyDate)\n  var hours = date.getHours()\n  return hours\n}\n\nmodule.exports = getHours\n","var startOfISOYear = require('../start_of_iso_year/index.js')\nvar addWeeks = require('../add_weeks/index.js')\n\nvar MILLISECONDS_IN_WEEK = 604800000\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * @description\n * Get the number of weeks in an ISO week-numbering year of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the number of ISO weeks in a year\n *\n * @example\n * // How many weeks are in ISO week-numbering year 2015?\n * var result = getISOWeeksInYear(new Date(2015, 1, 11))\n * //=> 53\n */\nfunction getISOWeeksInYear (dirtyDate) {\n  var thisYear = startOfISOYear(dirtyDate)\n  var nextYear = startOfISOYear(addWeeks(thisYear, 60))\n  var diff = nextYear.valueOf() - thisYear.valueOf()\n  // Round the number of weeks to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n  return Math.round(diff / MILLISECONDS_IN_WEEK)\n}\n\nmodule.exports = getISOWeeksInYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Get the milliseconds of the given date.\n *\n * @description\n * Get the milliseconds of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the milliseconds\n *\n * @example\n * // Get the milliseconds of 29 February 2012 11:45:05.123:\n * var result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 123\n */\nfunction getMilliseconds (dirtyDate) {\n  var date = parse(dirtyDate)\n  var milliseconds = date.getMilliseconds()\n  return milliseconds\n}\n\nmodule.exports = getMilliseconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Get the minutes of the given date.\n *\n * @description\n * Get the minutes of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the minutes\n *\n * @example\n * // Get the minutes of 29 February 2012 11:45:05:\n * var result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))\n * //=> 45\n */\nfunction getMinutes (dirtyDate) {\n  var date = parse(dirtyDate)\n  var minutes = date.getMinutes()\n  return minutes\n}\n\nmodule.exports = getMinutes\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the month\n *\n * @example\n * // Which month is 29 February 2012?\n * var result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\nfunction getMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  return month\n}\n\nmodule.exports = getMonth\n","var parse = require('../parse/index.js')\n\nvar MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000\n\n/**\n * @category Range Helpers\n * @summary Get the number of days that overlap in two date ranges\n *\n * @description\n * Get the number of days that overlap in two date ranges\n *\n * @param {Date|String|Number} initialRangeStartDate - the start of the initial range\n * @param {Date|String|Number} initialRangeEndDate - the end of the initial range\n * @param {Date|String|Number} comparedRangeStartDate - the start of the range to compare it with\n * @param {Date|String|Number} comparedRangeEndDate - the end of the range to compare it with\n * @returns {Number} the number of days that overlap in two date ranges\n * @throws {Error} startDate of a date range cannot be after its endDate\n *\n * @example\n * // For overlapping date ranges adds 1 for each started overlapping day:\n * getOverlappingDaysInRanges(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 17), new Date(2014, 0, 21)\n * )\n * //=> 3\n *\n * @example\n * // For non-overlapping date ranges returns 0:\n * getOverlappingDaysInRanges(\n *   new Date(2014, 0, 10), new Date(2014, 0, 20), new Date(2014, 0, 21), new Date(2014, 0, 22)\n * )\n * //=> 0\n */\nfunction getOverlappingDaysInRanges (dirtyInitialRangeStartDate, dirtyInitialRangeEndDate, dirtyComparedRangeStartDate, dirtyComparedRangeEndDate) {\n  var initialStartTime = parse(dirtyInitialRangeStartDate).getTime()\n  var initialEndTime = parse(dirtyInitialRangeEndDate).getTime()\n  var comparedStartTime = parse(dirtyComparedRangeStartDate).getTime()\n  var comparedEndTime = parse(dirtyComparedRangeEndDate).getTime()\n\n  if (initialStartTime > initialEndTime || comparedStartTime > comparedEndTime) {\n    throw new Error('The start of the range cannot be after the end of the range')\n  }\n\n  var isOverlapping = initialStartTime < comparedEndTime && comparedStartTime < initialEndTime\n\n  if (!isOverlapping) {\n    return 0\n  }\n\n  var overlapStartDate = comparedStartTime < initialStartTime\n    ? initialStartTime\n    : comparedStartTime\n\n  var overlapEndDate = comparedEndTime > initialEndTime\n    ? initialEndTime\n    : comparedEndTime\n\n  var differenceInMs = overlapEndDate - overlapStartDate\n\n  return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY)\n}\n\nmodule.exports = getOverlappingDaysInRanges\n","var parse = require('../parse/index.js')\n\n/**\n * @category Second Helpers\n * @summary Get the seconds of the given date.\n *\n * @description\n * Get the seconds of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the seconds\n *\n * @example\n * // Get the seconds of 29 February 2012 11:45:05.123:\n * var result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 5\n */\nfunction getSeconds (dirtyDate) {\n  var date = parse(dirtyDate)\n  var seconds = date.getSeconds()\n  return seconds\n}\n\nmodule.exports = getSeconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Timestamp Helpers\n * @summary Get the milliseconds timestamp of the given date.\n *\n * @description\n * Get the milliseconds timestamp of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the timestamp\n *\n * @example\n * // Get the timestamp of 29 February 2012 11:45:05.123:\n * var result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 1330515905123\n */\nfunction getTime (dirtyDate) {\n  var date = parse(dirtyDate)\n  var timestamp = date.getTime()\n  return timestamp\n}\n\nmodule.exports = getTime\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the year\n *\n * @example\n * // Which year is 2 July 2014?\n * var result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\nfunction getYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  return year\n}\n\nmodule.exports = getYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @param {Date|String|Number} date - the date that should be after the other one to return true\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nfunction isAfter (dirtyDate, dirtyDateToCompare) {\n  var date = parse(dirtyDate)\n  var dateToCompare = parse(dirtyDateToCompare)\n  return date.getTime() > dateToCompare.getTime()\n}\n\nmodule.exports = isAfter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * @param {Date|String|Number} date - the date that should be before the other one to return true\n * @param {Date|String|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\nfunction isBefore (dirtyDate, dirtyDateToCompare) {\n  var date = parse(dirtyDate)\n  var dateToCompare = parse(dirtyDateToCompare)\n  return date.getTime() < dateToCompare.getTime()\n}\n\nmodule.exports = isBefore\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * @param {Date|String|Number} dateLeft - the first date to compare\n * @param {Date|String|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0)\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\nfunction isEqual (dirtyLeftDate, dirtyRightDate) {\n  var dateLeft = parse(dirtyLeftDate)\n  var dateRight = parse(dirtyRightDate)\n  return dateLeft.getTime() === dateRight.getTime()\n}\n\nmodule.exports = isEqual\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Is the given date the first day of a month?\n *\n * @description\n * Is the given date the first day of a month?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is the first day of a month\n *\n * @example\n * // Is 1 September 2014 the first day of a month?\n * var result = isFirstDayOfMonth(new Date(2014, 8, 1))\n * //=> true\n */\nfunction isFirstDayOfMonth (dirtyDate) {\n  return parse(dirtyDate).getDate() === 1\n}\n\nmodule.exports = isFirstDayOfMonth\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Friday?\n *\n * @description\n * Is the given date Friday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Friday\n *\n * @example\n * // Is 26 September 2014 Friday?\n * var result = isFriday(new Date(2014, 8, 26))\n * //=> true\n */\nfunction isFriday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 5\n}\n\nmodule.exports = isFriday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the given date in the future?\n *\n * @description\n * Is the given date in the future?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in the future\n *\n * @example\n * // If today is 6 October 2014, is 31 December 2014 in the future?\n * var result = isFuture(new Date(2014, 11, 31))\n * //=> true\n */\nfunction isFuture (dirtyDate) {\n  return parse(dirtyDate).getTime() > new Date().getTime()\n}\n\nmodule.exports = isFuture\n","var parse = require('../parse/index.js')\nvar endOfDay = require('../end_of_day/index.js')\nvar endOfMonth = require('../end_of_month/index.js')\n\n/**\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nfunction isLastDayOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  return endOfDay(date).getTime() === endOfMonth(date).getTime()\n}\n\nmodule.exports = isLastDayOfMonth\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Monday?\n *\n * @description\n * Is the given date Monday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Monday\n *\n * @example\n * // Is 22 September 2014 Monday?\n * var result = isMonday(new Date(2014, 8, 22))\n * //=> true\n */\nfunction isMonday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 1\n}\n\nmodule.exports = isMonday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Is the given date in the past?\n *\n * @description\n * Is the given date in the past?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in the past\n *\n * @example\n * // If today is 6 October 2014, is 2 July 2014 in the past?\n * var result = isPast(new Date(2014, 6, 2))\n * //=> true\n */\nfunction isPast (dirtyDate) {\n  return parse(dirtyDate).getTime() < new Date().getTime()\n}\n\nmodule.exports = isPast\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * @param {Date|String|Number} dateLeft - the first date to check\n * @param {Date|String|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(\n *   new Date(2014, 8, 4, 6, 0),\n *   new Date(2014, 8, 4, 18, 0)\n * )\n * //=> true\n */\nfunction isSameDay (dirtyDateLeft, dirtyDateRight) {\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft)\n  var dateRightStartOfDay = startOfDay(dirtyDateRight)\n\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime()\n}\n\nmodule.exports = isSameDay\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Saturday?\n *\n * @description\n * Is the given date Saturday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Saturday\n *\n * @example\n * // Is 27 September 2014 Saturday?\n * var result = isSaturday(new Date(2014, 8, 27))\n * //=> true\n */\nfunction isSaturday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 6\n}\n\nmodule.exports = isSaturday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Sunday?\n *\n * @description\n * Is the given date Sunday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Sunday\n *\n * @example\n * // Is 21 September 2014 Sunday?\n * var result = isSunday(new Date(2014, 8, 21))\n * //=> true\n */\nfunction isSunday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 0\n}\n\nmodule.exports = isSunday\n","var isSameHour = require('../is_same_hour/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Is the given date in the same hour as the current date?\n *\n * @description\n * Is the given date in the same hour as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this hour\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:00:00 in this hour?\n * var result = isThisHour(new Date(2014, 8, 25, 18))\n * //=> true\n */\nfunction isThisHour (dirtyDate) {\n  return isSameHour(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisHour\n","var isSameISOWeek = require('../is_same_iso_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Is the given date in the same ISO week as the current date?\n *\n * @description\n * Is the given date in the same ISO week as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week\n *\n * @example\n * // If today is 25 September 2014, is 22 September 2014 in this ISO week?\n * var result = isThisISOWeek(new Date(2014, 8, 22))\n * //=> true\n */\nfunction isThisISOWeek (dirtyDate) {\n  return isSameISOWeek(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisISOWeek\n","var isSameISOYear = require('../is_same_iso_year/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Is the given date in the same ISO week-numbering year as the current date?\n *\n * @description\n * Is the given date in the same ISO week-numbering year as the current date?\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this ISO week-numbering year\n *\n * @example\n * // If today is 25 September 2014,\n * // is 30 December 2013 in this ISO week-numbering year?\n * var result = isThisISOYear(new Date(2013, 11, 30))\n * //=> true\n */\nfunction isThisISOYear (dirtyDate) {\n  return isSameISOYear(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisISOYear\n","var isSameMinute = require('../is_same_minute/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Is the given date in the same minute as the current date?\n *\n * @description\n * Is the given date in the same minute as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this minute\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:00 in this minute?\n * var result = isThisMinute(new Date(2014, 8, 25, 18, 30))\n * //=> true\n */\nfunction isThisMinute (dirtyDate) {\n  return isSameMinute(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisMinute\n","var isSameMonth = require('../is_same_month/index.js')\n\n/**\n * @category Month Helpers\n * @summary Is the given date in the same month as the current date?\n *\n * @description\n * Is the given date in the same month as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this month\n *\n * @example\n * // If today is 25 September 2014, is 15 September 2014 in this month?\n * var result = isThisMonth(new Date(2014, 8, 15))\n * //=> true\n */\nfunction isThisMonth (dirtyDate) {\n  return isSameMonth(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisMonth\n","var isSameQuarter = require('../is_same_quarter/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Is the given date in the same quarter as the current date?\n *\n * @description\n * Is the given date in the same quarter as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this quarter\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this quarter?\n * var result = isThisQuarter(new Date(2014, 6, 2))\n * //=> true\n */\nfunction isThisQuarter (dirtyDate) {\n  return isSameQuarter(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisQuarter\n","var isSameSecond = require('../is_same_second/index.js')\n\n/**\n * @category Second Helpers\n * @summary Is the given date in the same second as the current date?\n *\n * @description\n * Is the given date in the same second as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this second\n *\n * @example\n * // If now is 25 September 2014 18:30:15.500,\n * // is 25 September 2014 18:30:15.000 in this second?\n * var result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))\n * //=> true\n */\nfunction isThisSecond (dirtyDate) {\n  return isSameSecond(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisSecond\n","var isSameWeek = require('../is_same_week/index.js')\n\n/**\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the date is in this week\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21), {weekStartsOn: 1})\n * //=> false\n */\nfunction isThisWeek (dirtyDate, dirtyOptions) {\n  return isSameWeek(new Date(), dirtyDate, dirtyOptions)\n}\n\nmodule.exports = isThisWeek\n","var isSameYear = require('../is_same_year/index.js')\n\n/**\n * @category Year Helpers\n * @summary Is the given date in the same year as the current date?\n *\n * @description\n * Is the given date in the same year as the current date?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is in this year\n *\n * @example\n * // If today is 25 September 2014, is 2 July 2014 in this year?\n * var result = isThisYear(new Date(2014, 6, 2))\n * //=> true\n */\nfunction isThisYear (dirtyDate) {\n  return isSameYear(new Date(), dirtyDate)\n}\n\nmodule.exports = isThisYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Thursday?\n *\n * @description\n * Is the given date Thursday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Thursday\n *\n * @example\n * // Is 25 September 2014 Thursday?\n * var result = isThursday(new Date(2014, 8, 25))\n * //=> true\n */\nfunction isThursday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 4\n}\n\nmodule.exports = isThursday\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Is the given date today?\n *\n * @description\n * Is the given date today?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is today\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nfunction isToday (dirtyDate) {\n  return startOfDay(dirtyDate).getTime() === startOfDay(new Date()).getTime()\n}\n\nmodule.exports = isToday\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Is the given date tomorrow?\n *\n * @description\n * Is the given date tomorrow?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is tomorrow\n *\n * @example\n * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?\n * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))\n * //=> true\n */\nfunction isTomorrow (dirtyDate) {\n  var tomorrow = new Date()\n  tomorrow.setDate(tomorrow.getDate() + 1)\n  return startOfDay(dirtyDate).getTime() === startOfDay(tomorrow).getTime()\n}\n\nmodule.exports = isTomorrow\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Tuesday?\n *\n * @description\n * Is the given date Tuesday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Tuesday\n *\n * @example\n * // Is 23 September 2014 Tuesday?\n * var result = isTuesday(new Date(2014, 8, 23))\n * //=> true\n */\nfunction isTuesday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 2\n}\n\nmodule.exports = isTuesday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Is the given date Wednesday?\n *\n * @description\n * Is the given date Wednesday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is Wednesday\n *\n * @example\n * // Is 24 September 2014 Wednesday?\n * var result = isWednesday(new Date(2014, 8, 24))\n * //=> true\n */\nfunction isWednesday (dirtyDate) {\n  return parse(dirtyDate).getDay() === 3\n}\n\nmodule.exports = isWednesday\n","var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Does the given date fall on a weekend?\n *\n * @description\n * Does the given date fall on a weekend?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date falls on a weekend\n *\n * @example\n * // Does 5 October 2014 fall on a weekend?\n * var result = isWeekend(new Date(2014, 9, 5))\n * //=> true\n */\nfunction isWeekend (dirtyDate) {\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  return day === 0 || day === 6\n}\n\nmodule.exports = isWeekend\n","var parse = require('../parse/index.js')\n\n/**\n * @category Range Helpers\n * @summary Is the given date within the range?\n *\n * @description\n * Is the given date within the range?\n *\n * @param {Date|String|Number} date - the date to check\n * @param {Date|String|Number} startDate - the start of range\n * @param {Date|String|Number} endDate - the end of range\n * @returns {Boolean} the date is within the range\n * @throws {Error} startDate cannot be after endDate\n *\n * @example\n * // For the date within the range:\n * isWithinRange(\n *   new Date(2014, 0, 3), new Date(2014, 0, 1), new Date(2014, 0, 7)\n * )\n * //=> true\n *\n * @example\n * // For the date outside of the range:\n * isWithinRange(\n *   new Date(2014, 0, 10), new Date(2014, 0, 1), new Date(2014, 0, 7)\n * )\n * //=> false\n */\nfunction isWithinRange (dirtyDate, dirtyStartDate, dirtyEndDate) {\n  var time = parse(dirtyDate).getTime()\n  var startTime = parse(dirtyStartDate).getTime()\n  var endTime = parse(dirtyEndDate).getTime()\n\n  if (startTime > endTime) {\n    throw new Error('The start of the range cannot be after the end of the range')\n  }\n\n  return time >= startTime && time <= endTime\n}\n\nmodule.exports = isWithinRange\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Is the given date yesterday?\n *\n * @description\n * Is the given date yesterday?\n *\n * @param {Date|String|Number} date - the date to check\n * @returns {Boolean} the date is yesterday\n *\n * @example\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\n * var result = isYesterday(new Date(2014, 9, 5, 14, 0))\n * //=> true\n */\nfunction isYesterday (dirtyDate) {\n  var yesterday = new Date()\n  yesterday.setDate(yesterday.getDate() - 1)\n  return startOfDay(dirtyDate).getTime() === startOfDay(yesterday).getTime()\n}\n\nmodule.exports = isYesterday\n","var lastDayOfWeek = require('../last_day_of_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Return the last day of an ISO week for the given date.\n *\n * @description\n * Return the last day of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of an ISO week\n *\n * @example\n * // The last day of an ISO week for 2 September 2014 11:55:00:\n * var result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction lastDayOfISOWeek (dirtyDate) {\n  return lastDayOfWeek(dirtyDate, {weekStartsOn: 1})\n}\n\nmodule.exports = lastDayOfISOWeek\n","var getISOYear = require('../get_iso_year/index.js')\nvar startOfISOWeek = require('../start_of_iso_week/index.js')\n\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the last day of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the last day of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the end of an ISO week-numbering year\n *\n * @example\n * // The last day of an ISO week-numbering year for 2 July 2005:\n * var result = lastDayOfISOYear(new Date(2005, 6, 2))\n * //=> Sun Jan 01 2006 00:00:00\n */\nfunction lastDayOfISOYear (dirtyDate) {\n  var year = getISOYear(dirtyDate)\n  var fourthOfJanuary = new Date(0)\n  fourthOfJanuary.setFullYear(year + 1, 0, 4)\n  fourthOfJanuary.setHours(0, 0, 0, 0)\n  var date = startOfISOWeek(fourthOfJanuary)\n  date.setDate(date.getDate() - 1)\n  return date\n}\n\nmodule.exports = lastDayOfISOYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of a month\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\nfunction lastDayOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  date.setFullYear(date.getFullYear(), month + 1, 0)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = lastDayOfMonth\n","var parse = require('../parse/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Return the last day of a year quarter for the given date.\n *\n * @description\n * Return the last day of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of a quarter\n *\n * @example\n * // The last day of a quarter for 2 September 2014 11:55:00:\n * var result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\nfunction lastDayOfQuarter (dirtyDate) {\n  var date = parse(dirtyDate)\n  var currentMonth = date.getMonth()\n  var month = currentMonth - currentMonth % 3 + 3\n  date.setMonth(month, 0)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = lastDayOfQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Return the last day of a year for the given date.\n *\n * @description\n * Return the last day of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the last day of a year\n *\n * @example\n * // The last day of a year for 2 September 2014 11:55:00:\n * var result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 00:00:00\n */\nfunction lastDayOfYear (dirtyDate) {\n  var date = parse(dirtyDate)\n  var year = date.getFullYear()\n  date.setFullYear(year + 1, 0, 0)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = lastDayOfYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * @param {...(Date|String|Number)} dates - the dates to compare\n * @returns {Date} the latest of the dates\n *\n * @example\n * // Which of these dates is the latest?\n * var result = max(\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * )\n * //=> Sun Jul 02 1995 00:00:00\n */\nfunction max () {\n  var dirtyDates = Array.prototype.slice.call(arguments)\n  var dates = dirtyDates.map(function (dirtyDate) {\n    return parse(dirtyDate)\n  })\n  var latestTimestamp = Math.max.apply(null, dates)\n  return new Date(latestTimestamp)\n}\n\nmodule.exports = max\n","var parse = require('../parse/index.js')\n\n/**\n * @category Common Helpers\n * @summary Return the earliest of the given dates.\n *\n * @description\n * Return the earliest of the given dates.\n *\n * @param {...(Date|String|Number)} dates - the dates to compare\n * @returns {Date} the earliest of the dates\n *\n * @example\n * // Which of these dates is the earliest?\n * var result = min(\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * )\n * //=> Wed Feb 11 1987 00:00:00\n */\nfunction min () {\n  var dirtyDates = Array.prototype.slice.call(arguments)\n  var dates = dirtyDates.map(function (dirtyDate) {\n    return parse(dirtyDate)\n  })\n  var earliestTimestamp = Math.min.apply(null, dates)\n  return new Date(earliestTimestamp)\n}\n\nmodule.exports = min\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Set the day of the month to the given date.\n *\n * @description\n * Set the day of the month to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} dayOfMonth - the day of the month of the new date\n * @returns {Date} the new date with the day of the month setted\n *\n * @example\n * // Set the 30th day of the month to 1 September 2014:\n * var result = setDate(new Date(2014, 8, 1), 30)\n * //=> Tue Sep 30 2014 00:00:00\n */\nfunction setDate (dirtyDate, dirtyDayOfMonth) {\n  var date = parse(dirtyDate)\n  var dayOfMonth = Number(dirtyDayOfMonth)\n  date.setDate(dayOfMonth)\n  return date\n}\n\nmodule.exports = setDate\n","var parse = require('../parse/index.js')\nvar addDays = require('../add_days/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} day - the day of the week of the new date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the new date with the day of the week setted\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If week starts with Monday, set Sunday to 1 September 2014:\n * var result = setDay(new Date(2014, 8, 1), 0, {weekStartsOn: 1})\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction setDay (dirtyDate, dirtyDay, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? (Number(dirtyOptions.weekStartsOn) || 0) : 0\n  var date = parse(dirtyDate)\n  var day = Number(dirtyDay)\n  var currentDay = date.getDay()\n\n  var remainder = day % 7\n  var dayIndex = (remainder + 7) % 7\n\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay\n  return addDays(date, diff)\n}\n\nmodule.exports = setDay\n","var parse = require('../parse/index.js')\n\n/**\n * @category Day Helpers\n * @summary Set the day of the year to the given date.\n *\n * @description\n * Set the day of the year to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} dayOfYear - the day of the year of the new date\n * @returns {Date} the new date with the day of the year setted\n *\n * @example\n * // Set the 2nd day of the year to 2 July 2014:\n * var result = setDayOfYear(new Date(2014, 6, 2), 2)\n * //=> Thu Jan 02 2014 00:00:00\n */\nfunction setDayOfYear (dirtyDate, dirtyDayOfYear) {\n  var date = parse(dirtyDate)\n  var dayOfYear = Number(dirtyDayOfYear)\n  date.setMonth(0)\n  date.setDate(dayOfYear)\n  return date\n}\n\nmodule.exports = setDayOfYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Set the hours to the given date.\n *\n * @description\n * Set the hours to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} hours - the hours of the new date\n * @returns {Date} the new date with the hours setted\n *\n * @example\n * // Set 4 hours to 1 September 2014 11:30:00:\n * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n * //=> Mon Sep 01 2014 04:30:00\n */\nfunction setHours (dirtyDate, dirtyHours) {\n  var date = parse(dirtyDate)\n  var hours = Number(dirtyHours)\n  date.setHours(hours)\n  return date\n}\n\nmodule.exports = setHours\n","var parse = require('../parse/index.js')\nvar addDays = require('../add_days/index.js')\nvar getISODay = require('../get_iso_day/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} day - the day of the ISO week of the new date\n * @returns {Date} the new date with the day of the ISO week setted\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * var result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nfunction setISODay (dirtyDate, dirtyDay) {\n  var date = parse(dirtyDate)\n  var day = Number(dirtyDay)\n  var currentDay = getISODay(date)\n  var diff = day - currentDay\n  return addDays(date, diff)\n}\n\nmodule.exports = setISODay\n","var parse = require('../parse/index.js')\nvar getISOWeek = require('../get_iso_week/index.js')\n\n/**\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} isoWeek - the ISO week of the new date\n * @returns {Date} the new date with the ISO week setted\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * var result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nfunction setISOWeek (dirtyDate, dirtyISOWeek) {\n  var date = parse(dirtyDate)\n  var isoWeek = Number(dirtyISOWeek)\n  var diff = getISOWeek(date) - isoWeek\n  date.setDate(date.getDate() - diff * 7)\n  return date\n}\n\nmodule.exports = setISOWeek\n","var parse = require('../parse/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Set the milliseconds to the given date.\n *\n * @description\n * Set the milliseconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} milliseconds - the milliseconds of the new date\n * @returns {Date} the new date with the milliseconds setted\n *\n * @example\n * // Set 300 milliseconds to 1 September 2014 11:30:40.500:\n * var result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)\n * //=> Mon Sep 01 2014 11:30:40.300\n */\nfunction setMilliseconds (dirtyDate, dirtyMilliseconds) {\n  var date = parse(dirtyDate)\n  var milliseconds = Number(dirtyMilliseconds)\n  date.setMilliseconds(milliseconds)\n  return date\n}\n\nmodule.exports = setMilliseconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Set the minutes to the given date.\n *\n * @description\n * Set the minutes to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} minutes - the minutes of the new date\n * @returns {Date} the new date with the minutes setted\n *\n * @example\n * // Set 45 minutes to 1 September 2014 11:30:40:\n * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:45:40\n */\nfunction setMinutes (dirtyDate, dirtyMinutes) {\n  var date = parse(dirtyDate)\n  var minutes = Number(dirtyMinutes)\n  date.setMinutes(minutes)\n  return date\n}\n\nmodule.exports = setMinutes\n","var parse = require('../parse/index.js')\nvar setMonth = require('../set_month/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Set the year quarter to the given date.\n *\n * @description\n * Set the year quarter to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} quarter - the quarter of the new date\n * @returns {Date} the new date with the quarter setted\n *\n * @example\n * // Set the 2nd quarter to 2 July 2014:\n * var result = setQuarter(new Date(2014, 6, 2), 2)\n * //=> Wed Apr 02 2014 00:00:00\n */\nfunction setQuarter (dirtyDate, dirtyQuarter) {\n  var date = parse(dirtyDate)\n  var quarter = Number(dirtyQuarter)\n  var oldQuarter = Math.floor(date.getMonth() / 3) + 1\n  var diff = quarter - oldQuarter\n  return setMonth(date, date.getMonth() + diff * 3)\n}\n\nmodule.exports = setQuarter\n","var parse = require('../parse/index.js')\n\n/**\n * @category Second Helpers\n * @summary Set the seconds to the given date.\n *\n * @description\n * Set the seconds to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} seconds - the seconds of the new date\n * @returns {Date} the new date with the seconds setted\n *\n * @example\n * // Set 45 seconds to 1 September 2014 11:30:40:\n * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:30:45\n */\nfunction setSeconds (dirtyDate, dirtySeconds) {\n  var date = parse(dirtyDate)\n  var seconds = Number(dirtySeconds)\n  date.setSeconds(seconds)\n  return date\n}\n\nmodule.exports = setSeconds\n","var parse = require('../parse/index.js')\n\n/**\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} year - the year of the new date\n * @returns {Date} the new date with the year setted\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * var result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\nfunction setYear (dirtyDate, dirtyYear) {\n  var date = parse(dirtyDate)\n  var year = Number(dirtyYear)\n  date.setFullYear(year)\n  return date\n}\n\nmodule.exports = setYear\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction startOfMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  date.setDate(1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfMonth\n","var startOfDay = require('../start_of_day/index.js')\n\n/**\n * @category Day Helpers\n * @summary Return the start of today.\n *\n * @description\n * Return the start of today.\n *\n * @returns {Date} the start of today\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfToday()\n * //=> Mon Oct 6 2014 00:00:00\n */\nfunction startOfToday () {\n  return startOfDay(new Date())\n}\n\nmodule.exports = startOfToday\n","/**\n * @category Day Helpers\n * @summary Return the start of tomorrow.\n *\n * @description\n * Return the start of tomorrow.\n *\n * @returns {Date} the start of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfTomorrow()\n * //=> Tue Oct 7 2014 00:00:00\n */\nfunction startOfTomorrow () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day + 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfTomorrow\n","/**\n * @category Day Helpers\n * @summary Return the start of yesterday.\n *\n * @description\n * Return the start of yesterday.\n *\n * @returns {Date} the start of yesterday\n *\n * @example\n * // If today is 6 October 2014:\n * var result = startOfYesterday()\n * //=> Sun Oct 5 2014 00:00:00\n */\nfunction startOfYesterday () {\n  var now = new Date()\n  var year = now.getFullYear()\n  var month = now.getMonth()\n  var day = now.getDate()\n\n  var date = new Date(0)\n  date.setFullYear(year, month, day - 1)\n  date.setHours(0, 0, 0, 0)\n  return date\n}\n\nmodule.exports = startOfYesterday\n","var addDays = require('../add_days/index.js')\n\n/**\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted\n * @returns {Date} the new date with the days subtracted\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * var result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nfunction subDays (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addDays(dirtyDate, -amount)\n}\n\nmodule.exports = subDays\n","var addHours = require('../add_hours/index.js')\n\n/**\n * @category Hour Helpers\n * @summary Subtract the specified number of hours from the given date.\n *\n * @description\n * Subtract the specified number of hours from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be subtracted\n * @returns {Date} the new date with the hours subtracted\n *\n * @example\n * // Subtract 2 hours from 11 July 2014 01:00:00:\n * var result = subHours(new Date(2014, 6, 11, 1, 0), 2)\n * //=> Thu Jul 10 2014 23:00:00\n */\nfunction subHours (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addHours(dirtyDate, -amount)\n}\n\nmodule.exports = subHours\n","var addMilliseconds = require('../add_milliseconds/index.js')\n\n/**\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted\n * @returns {Date} the new date with the milliseconds subtracted\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\nfunction subMilliseconds (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMilliseconds(dirtyDate, -amount)\n}\n\nmodule.exports = subMilliseconds\n","var addMinutes = require('../add_minutes/index.js')\n\n/**\n * @category Minute Helpers\n * @summary Subtract the specified number of minutes from the given date.\n *\n * @description\n * Subtract the specified number of minutes from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be subtracted\n * @returns {Date} the new date with the mintues subtracted\n *\n * @example\n * // Subtract 30 minutes from 10 July 2014 12:00:00:\n * var result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 11:30:00\n */\nfunction subMinutes (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMinutes(dirtyDate, -amount)\n}\n\nmodule.exports = subMinutes\n","var addMonths = require('../add_months/index.js')\n\n/**\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be subtracted\n * @returns {Date} the new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * var result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nfunction subMonths (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addMonths(dirtyDate, -amount)\n}\n\nmodule.exports = subMonths\n","var addQuarters = require('../add_quarters/index.js')\n\n/**\n * @category Quarter Helpers\n * @summary Subtract the specified number of year quarters from the given date.\n *\n * @description\n * Subtract the specified number of year quarters from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of quarters to be subtracted\n * @returns {Date} the new date with the quarters subtracted\n *\n * @example\n * // Subtract 3 quarters from 1 September 2014:\n * var result = subQuarters(new Date(2014, 8, 1), 3)\n * //=> Sun Dec 01 2013 00:00:00\n */\nfunction subQuarters (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addQuarters(dirtyDate, -amount)\n}\n\nmodule.exports = subQuarters\n","var addSeconds = require('../add_seconds/index.js')\n\n/**\n * @category Second Helpers\n * @summary Subtract the specified number of seconds from the given date.\n *\n * @description\n * Subtract the specified number of seconds from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be subtracted\n * @returns {Date} the new date with the seconds subtracted\n *\n * @example\n * // Subtract 30 seconds from 10 July 2014 12:45:00:\n * var result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:44:30\n */\nfunction subSeconds (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addSeconds(dirtyDate, -amount)\n}\n\nmodule.exports = subSeconds\n","var addWeeks = require('../add_weeks/index.js')\n\n/**\n * @category Week Helpers\n * @summary Subtract the specified number of weeks from the given date.\n *\n * @description\n * Subtract the specified number of weeks from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be subtracted\n * @returns {Date} the new date with the weeks subtracted\n *\n * @example\n * // Subtract 4 weeks from 1 September 2014:\n * var result = subWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Aug 04 2014 00:00:00\n */\nfunction subWeeks (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addWeeks(dirtyDate, -amount)\n}\n\nmodule.exports = subWeeks\n","var addYears = require('../add_years/index.js')\n\n/**\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * @param {Date|String|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted\n * @returns {Date} the new date with the years subtracted\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * var result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\nfunction subYears (dirtyDate, dirtyAmount) {\n  var amount = Number(dirtyAmount)\n  return addYears(dirtyDate, -amount)\n}\n\nmodule.exports = subYears\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","module.exports = require(\"string_decoder\");","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","'use strict';\nimport { TextDocument, TextEditor, Uri } from 'vscode';\n\nabstract class Comparer<T> {\n    abstract equals(lhs: T, rhs: T): boolean;\n}\n\nclass UriComparer extends Comparer<Uri> {\n    equals(lhs: Uri | undefined, rhs: Uri | undefined) {\n        if (lhs === rhs) return true;\n        if (lhs === undefined || rhs === undefined) return false;\n\n        return lhs.scheme === rhs.scheme && lhs.fsPath === rhs.fsPath;\n    }\n}\n\nclass TextDocumentComparer extends Comparer<TextDocument> {\n    equals(lhs: TextDocument | undefined, rhs: TextDocument | undefined) {\n        return lhs === rhs;\n        // if (lhs === rhs) return true;\n        // if (lhs === undefined || rhs === undefined) return false;\n\n        // return uriComparer.equals(lhs.uri, rhs.uri);\n    }\n}\n\nclass TextEditorComparer extends Comparer<TextEditor> {\n    equals(\n        lhs: TextEditor | undefined,\n        rhs: TextEditor | undefined,\n        options: { useId: boolean; usePosition: boolean } = { useId: false, usePosition: false }\n    ) {\n        if (lhs === rhs) return true;\n        if (lhs === undefined || rhs === undefined) return false;\n\n        if (options.usePosition && lhs.viewColumn !== rhs.viewColumn) return false;\n\n        if (options.useId && (!lhs.document || !rhs.document)) {\n            if ((lhs as any).id !== (rhs as any).id) return false;\n\n            return true;\n        }\n\n        return textDocumentComparer.equals(lhs.document, rhs.document);\n    }\n}\n\nconst textDocumentComparer = new TextDocumentComparer();\nconst textEditorComparer = new TextEditorComparer();\nconst uriComparer = new UriComparer();\nexport {\n    textDocumentComparer as TextDocumentComparer,\n    textEditorComparer as TextEditorComparer,\n    uriComparer as UriComparer\n};\n","'use strict';\n\nexport interface Config {\n    blame: {\n        avatars: boolean;\n        compact: boolean;\n        dateFormat: string | null;\n        format: string;\n        heatmap: {\n            enabled: boolean;\n            location: 'left' | 'right';\n        };\n        highlight: {\n            enabled: boolean;\n            locations: HighlightLocations[];\n        };\n        ignoreWhitespace: boolean;\n        separateLines: boolean;\n        toggleMode: AnnotationsToggleMode;\n    };\n    currentLine: {\n        scrollable: boolean;\n        dateFormat: string | null;\n        enabled: boolean;\n        format: string;\n    };\n    codeLens: CodeLensConfig;\n    debug: boolean;\n    defaultDateFormat: string | null;\n    defaultDateStyle: DateStyle;\n    defaultGravatarsStyle: GravatarDefaultStyle;\n    heatmap: {\n        ageThreshold: number;\n        coldColor: string;\n        hotColor: string;\n        toggleMode: AnnotationsToggleMode;\n    };\n    hovers: {\n        annotations: {\n            changes: boolean;\n            details: boolean;\n            enabled: boolean;\n            over: 'line' | 'annotation';\n        };\n        currentLine: {\n            changes: boolean;\n            details: boolean;\n            enabled: boolean;\n            over: 'line' | 'annotation';\n        };\n        avatars: boolean;\n        enabled: boolean;\n    };\n    insiders: boolean;\n    keymap: KeyMap;\n    liveshare: {\n        allowGuestAccess: boolean;\n    };\n    menus: boolean | MenuConfig;\n    mode: {\n        active: string;\n        statusBar: {\n            enabled: boolean;\n            alignment: 'left' | 'right';\n        };\n    };\n    modes: { [key: string]: ModeConfig };\n    outputLevel: LogLevel;\n    recentChanges: {\n        highlight: {\n            locations: HighlightLocations[];\n        };\n        toggleMode: AnnotationsToggleMode;\n    };\n    remotes: RemotesConfig[];\n    showWhatsNewAfterUpgrades: boolean;\n    statusBar: {\n        alignment: 'left' | 'right';\n        command: StatusBarCommand;\n        dateFormat: string | null;\n        enabled: boolean;\n        format: string;\n        reduceFlicker: boolean;\n    };\n    strings: {\n        codeLens: {\n            unsavedChanges: {\n                recentChangeAndAuthors: string;\n                recentChangeOnly: string;\n                authorsOnly: string;\n            };\n        };\n    };\n    views: ViewsConfig;\n    advanced: AdvancedConfig;\n}\n\nexport enum AnnotationsToggleMode {\n    File = 'file',\n    Window = 'window'\n}\n\nexport enum CodeLensCommand {\n    DiffWithPrevious = 'gitlens.diffWithPrevious',\n    ShowQuickCommitDetails = 'gitlens.showQuickCommitDetails',\n    ShowQuickCommitFileDetails = 'gitlens.showQuickCommitFileDetails',\n    ShowQuickCurrentBranchHistory = 'gitlens.showQuickRepoHistory',\n    ShowQuickFileHistory = 'gitlens.showQuickFileHistory',\n    ToggleFileBlame = 'gitlens.toggleFileBlame'\n}\n\nexport enum CodeLensScopes {\n    Document = 'document',\n    Containers = 'containers',\n    Blocks = 'blocks'\n}\n\nexport enum CustomRemoteType {\n    Bitbucket = 'Bitbucket',\n    BitbucketServer = 'BitbucketServer',\n    Custom = 'Custom',\n    GitHub = 'GitHub',\n    GitLab = 'GitLab'\n}\n\nexport enum DateStyle {\n    Absolute = 'absolute',\n    Relative = 'relative'\n}\n\nexport enum FileAnnotationType {\n    Blame = 'blame',\n    Heatmap = 'heatmap',\n    RecentChanges = 'recentChanges'\n}\n\nexport enum GravatarDefaultStyle {\n    Faces = 'wavatar',\n    Geometric = 'identicon',\n    Monster = 'monsterid',\n    MysteryPerson = 'mp',\n    Retro = 'retro',\n    Robot = 'robohash'\n}\n\nexport enum HighlightLocations {\n    Gutter = 'gutter',\n    Line = 'line',\n    Overview = 'overview'\n}\n\nexport enum KeyMap {\n    Alternate = 'alternate',\n    Chorded = 'chorded',\n    None = 'none'\n}\n\nexport enum LogLevel {\n    Silent = 'silent',\n    Errors = 'errors',\n    Verbose = 'verbose',\n    Debug = 'debug'\n}\n\nexport enum StatusBarCommand {\n    DiffWithPrevious = 'gitlens.diffWithPrevious',\n    DiffWithWorking = 'gitlens.diffWithWorking',\n    ShowQuickCommitDetails = 'gitlens.showQuickCommitDetails',\n    ShowQuickCommitFileDetails = 'gitlens.showQuickCommitFileDetails',\n    ShowQuickCurrentBranchHistory = 'gitlens.showQuickRepoHistory',\n    ShowQuickFileHistory = 'gitlens.showQuickFileHistory',\n    ToggleCodeLens = 'gitlens.toggleCodeLens',\n    ToggleFileBlame = 'gitlens.toggleFileBlame'\n}\n\nexport enum ViewBranchesLayout {\n    List = 'list',\n    Tree = 'tree'\n}\n\nexport enum ViewFilesLayout {\n    Auto = 'auto',\n    List = 'list',\n    Tree = 'tree'\n}\n\nexport interface AdvancedConfig {\n    blame: {\n        customArguments: string[] | null;\n        delayAfterEdit: number;\n        sizeThresholdAfterEdit: number;\n    };\n    caching: {\n        enabled: boolean;\n    };\n    fileHistoryFollowsRenames: boolean;\n    maxListItems: number;\n    messages: {\n        suppressCommitHasNoPreviousCommitWarning: boolean;\n        suppressCommitNotFoundWarning: boolean;\n        suppressFileNotUnderSourceControlWarning: boolean;\n        suppressGitDisabledWarning: boolean;\n        suppressGitVersionWarning: boolean;\n        suppressLineUncommittedWarning: boolean;\n        suppressNoRepositoryWarning: boolean;\n        suppressSupportGitLensNotification: boolean;\n    };\n    quickPick: {\n        closeOnFocusOut: boolean;\n    };\n    repositorySearchDepth: number;\n    telemetry: {\n        enabled: boolean;\n    };\n}\n\nexport interface CodeLensConfig {\n    authors: {\n        enabled: boolean;\n        command: CodeLensCommand;\n    };\n    enabled: boolean;\n    includeSingleLineSymbols: boolean;\n    recentChange: {\n        enabled: boolean;\n        command: CodeLensCommand;\n    };\n    scopes: CodeLensScopes[];\n    scopesByLanguage: CodeLensLanguageScope[];\n    symbolScopes: string[];\n}\n\nexport interface CodeLensLanguageScope {\n    language: string | undefined;\n    scopes?: CodeLensScopes[];\n    symbolScopes?: string[];\n}\n\nexport interface CompareViewConfig {\n    enabled: boolean;\n    files: ViewsFilesConfig;\n    location: 'explorer' | 'gitlens' | 'scm';\n}\n\nexport interface FileHistoryViewConfig {\n    avatars: boolean;\n    enabled: boolean;\n    location: 'explorer' | 'gitlens' | 'scm';\n}\n\nexport interface LineHistoryViewConfig extends FileHistoryViewConfig {}\n\nexport interface MenuConfig {\n    editor:\n        | false\n        | {\n              blame: boolean;\n              clipboard: boolean;\n              compare: boolean;\n              details: boolean;\n              history: boolean;\n              remote: boolean;\n          };\n    editorGroup:\n        | false\n        | {\n              compare: boolean;\n              history: boolean;\n          };\n    editorTab:\n        | false\n        | {\n              clipboard: boolean;\n              compare: boolean;\n              history: boolean;\n              remote: boolean;\n          };\n    explorer:\n        | false\n        | {\n              clipboard: boolean;\n              compare: boolean;\n              history: boolean;\n              remote: boolean;\n          };\n    scmGroup:\n        | false\n        | {\n              compare: boolean;\n              openClose: boolean;\n              stash: boolean;\n              stashInline: boolean;\n          };\n    scmItem:\n        | false\n        | {\n              clipboard: boolean;\n              compare: boolean;\n              history: boolean;\n              remote: boolean;\n              stash: boolean;\n          };\n}\n\nexport interface ModeConfig {\n    name: string;\n    statusBarItemName?: string;\n    description?: string;\n    codeLens?: boolean;\n    currentLine?: boolean;\n    hovers?: boolean;\n    statusBar?: boolean;\n    views?: boolean;\n}\n\nexport interface RemotesConfig {\n    domain: string;\n    name?: string;\n    protocol?: string;\n    type: CustomRemoteType;\n    urls?: RemotesUrlsConfig;\n}\n\nexport interface RemotesUrlsConfig {\n    repository: string;\n    branches: string;\n    branch: string;\n    commit: string;\n    file: string;\n    fileInBranch: string;\n    fileInCommit: string;\n    fileLine: string;\n    fileRange: string;\n}\n\nexport interface RepositoriesViewConfig {\n    autoRefresh: boolean;\n    autoReveal: boolean;\n    branches: {\n        layout: ViewBranchesLayout;\n    };\n    compact: boolean;\n    enabled: boolean;\n    files: ViewsFilesConfig;\n    includeWorkingTree: boolean;\n    location: 'explorer' | 'gitlens' | 'scm';\n    showTrackingBranch: boolean;\n}\n\nexport interface SearchViewConfig {\n    enabled: boolean;\n    files: ViewsFilesConfig;\n    location: 'explorer' | 'gitlens' | 'scm';\n}\n\nexport interface ViewsConfig {\n    avatars: boolean;\n    fileHistory: FileHistoryViewConfig;\n    files: {\n        layout: ViewFilesLayout;\n        compact: boolean;\n        threshold: number;\n    };\n    commitFileDescriptionFormat: string;\n    commitFileFormat: string;\n    commitDescriptionFormat: string;\n    commitFormat: string;\n    compare: CompareViewConfig;\n    // dateFormat: string | null;\n    defaultItemLimit: number;\n    lineHistory: LineHistoryViewConfig;\n    repositories: RepositoriesViewConfig;\n    search: SearchViewConfig;\n    stashFileDescriptionFormat: string;\n    stashFileFormat: string;\n    stashDescriptionFormat: string;\n    stashFormat: string;\n    statusFileDescriptionFormat: string;\n    statusFileFormat: string;\n}\n\nexport interface ViewsFilesConfig {\n    compact: boolean;\n    layout: ViewFilesLayout;\n    threshold: number;\n}\n","'use strict';\nimport { commands, TextDocument, TextEditor, window } from 'vscode';\n\nexport const applicationInsightsKey = 'a9c302f8-6483-4d01-b92c-c159c799c679';\nexport const extensionId = 'gitlens';\nexport const extensionOutputChannelName = 'GitLens';\nexport const extensionQualifiedId = `eamodio.${extensionId}`;\nexport const extensionTerminalName = 'GitLens';\n\nexport enum BuiltInCommands {\n    CloseActiveEditor = 'workbench.action.closeActiveEditor',\n    CloseAllEditors = 'workbench.action.closeAllEditors',\n    CursorMove = 'cursorMove',\n    Diff = 'vscode.diff',\n    EditorScroll = 'editorScroll',\n    ExecuteDocumentSymbolProvider = 'vscode.executeDocumentSymbolProvider',\n    ExecuteCodeLensProvider = 'vscode.executeCodeLensProvider',\n    FocusFilesExplorer = 'workbench.files.action.focusFilesExplorer',\n    Open = 'vscode.open',\n    OpenFolder = 'vscode.openFolder',\n    NextEditor = 'workbench.action.nextEditor',\n    PreviewHtml = 'vscode.previewHtml',\n    RevealLine = 'revealLine',\n    SetContext = 'setContext',\n    ShowExplorerActivity = 'workbench.view.explorer',\n    ShowReferences = 'editor.action.showReferences'\n}\n\nexport enum CommandContext {\n    ActiveFileStatus = 'gitlens:activeFileStatus',\n    AnnotationStatus = 'gitlens:annotationStatus',\n    CanToggleCodeLens = 'gitlens:canToggleCodeLens',\n    Enabled = 'gitlens:enabled',\n    HasRemotes = 'gitlens:hasRemotes',\n    Key = 'gitlens:key',\n    Readonly = 'gitlens:readonly',\n    ViewsCanCompare = 'gitlens:views:canCompare',\n    ViewsCanCompareFile = 'gitlens:views:canCompare:file',\n    ViewsCompareKeepResults = 'gitlens:views:compare:keepResults',\n    ViewsHideSupportGitLens = 'gitlens:views:supportGitLens:hide',\n    ViewsFileHistoryEditorFollowing = 'gitlens:views:fileHistory:editorFollowing',\n    ViewsLineHistoryEditorFollowing = 'gitlens:views:lineHistory:editorFollowing',\n    ViewsRepositoriesAutoRefresh = 'gitlens:views:repositories:autoRefresh',\n    ViewsSearchKeepResults = 'gitlens:views:search:keepResults'\n}\n\nexport function setCommandContext(key: CommandContext | string, value: any) {\n    return commands.executeCommand(BuiltInCommands.SetContext, key, value);\n}\n\nexport enum DocumentSchemes {\n    DebugConsole = 'debug',\n    File = 'file',\n    Git = 'git',\n    GitLens = 'gitlens',\n    Output = 'output',\n    Vsls = 'vsls'\n}\n\nexport function getEditorIfActive(document: TextDocument): TextEditor | undefined {\n    const editor = window.activeTextEditor;\n    return editor != null && editor.document === document ? editor : undefined;\n}\n\nexport function isActiveDocument(document: TextDocument): boolean {\n    const editor = window.activeTextEditor;\n    return editor != null && editor.document === document;\n}\n\nexport function isTextEditor(editor: TextEditor): boolean {\n    const scheme = editor.document.uri.scheme;\n    return scheme !== DocumentSchemes.Output && scheme !== DocumentSchemes.DebugConsole;\n}\n\nexport enum GlyphChars {\n    AngleBracketLeftHeavy = '\\u2770',\n    AngleBracketRightHeavy = '\\u2771',\n    ArrowBack = '\\u21a9',\n    ArrowDown = '\\u2193',\n    ArrowDropRight = '\\u2937',\n    ArrowHeadRight = '\\u27A4',\n    ArrowLeft = '\\u2190',\n    ArrowLeftDouble = '\\u21d0',\n    ArrowLeftRight = '\\u2194',\n    ArrowLeftRightDouble = '\\u21d4',\n    ArrowLeftRightDoubleStrike = '\\u21ce',\n    ArrowLeftRightLong = '\\u27f7',\n    ArrowRight = '\\u2192',\n    ArrowRightDouble = '\\u21d2',\n    ArrowRightHollow = '\\u21e8',\n    ArrowUp = '\\u2191',\n    ArrowUpRight = '\\u2197',\n    ArrowsHalfLeftRight = '\\u21cb',\n    ArrowsHalfRightLeft = '\\u21cc',\n    ArrowsLeftRight = '\\u21c6',\n    ArrowsRightLeft = '\\u21c4',\n    Asterisk = '\\u2217',\n    Check = '\\u2713',\n    Dash = '\\u2014',\n    Dot = '\\u2022',\n    Ellipsis = '\\u2026',\n    EnDash = '\\u2013',\n    MiddleEllipsis = '\\u22EF',\n    MuchGreaterThan = '\\u226A',\n    MuchLessThan = '\\u22D8',\n    Pencil = '\\u270E',\n    Space = '\\u00a0',\n    SpaceThin = '\\u2009',\n    SpaceThinnest = '\\u200A',\n    SquareWithBottomShadow = '\\u274F',\n    SquareWithTopShadow = '\\u2750',\n    ZeroWidthSpace = '\\u200b'\n}\n\nexport enum GlobalState {\n    GitLensVersion = 'gitlensVersion'\n}\n\nexport const ImageMimetypes: { [key: string]: string } = {\n    '.png': 'image/png',\n    '.gif': 'image/gif',\n    '.jpg': 'image/jpeg',\n    '.jpeg': 'image/jpeg',\n    '.jpe': 'image/jpeg',\n    '.webp': 'image/webp',\n    '.tif': 'image/tiff',\n    '.tiff': 'image/tiff',\n    '.bmp': 'image/bmp'\n};\n\nexport enum WorkspaceState {\n    ViewsCompareKeepResults = 'gitlens:views:compare:keepResults',\n    ViewsRepositoriesAutoRefresh = 'gitlens:views:repositories:autoRefresh',\n    ViewsSearchKeepResults = 'gitlens:views:search:keepResults'\n}\n","'use strict';\n\nexport namespace Objects {\n    export function entries<T>(o: { [key: string]: T }): IterableIterator<[string, T]>;\n    export function entries<T>(o: { [key: number]: T }): IterableIterator<[string, T]>;\n    export function* entries<T>(o: any): IterableIterator<[string, T]> {\n        for (const key in o) {\n            yield [key, o[key]];\n        }\n    }\n\n    export function flatten(o: any, prefix: string = '', stringify: boolean = false): { [key: string]: any } {\n        const flattened = Object.create(null);\n        _flatten(flattened, prefix, o, stringify);\n        return flattened;\n    }\n\n    function _flatten(flattened: { [key: string]: any }, key: string, value: any, stringify: boolean = false) {\n        if (Object(value) !== value) {\n            if (stringify) {\n                if (value == null) {\n                    flattened[key] = null;\n                }\n                else if (typeof value === 'string') {\n                    flattened[key] = value;\n                }\n                else {\n                    flattened[key] = JSON.stringify(value);\n                }\n            }\n            else {\n                flattened[key] = value;\n            }\n        }\n        else if (Array.isArray(value)) {\n            const len = value.length;\n            for (let i = 0; i < len; i++) {\n                _flatten(flattened, `${key}[${i}]`, value[i], stringify);\n            }\n            if (len === 0) {\n                flattened[key] = null;\n            }\n        }\n        else {\n            let isEmpty = true;\n            for (const p in value) {\n                isEmpty = false;\n                _flatten(flattened, key ? `${key}.${p}` : p, value[p], stringify);\n            }\n            if (isEmpty && key) {\n                flattened[key] = null;\n            }\n        }\n    }\n\n    export function paths(o: { [key: string]: any }, path?: string): string[] {\n        const results = [];\n\n        for (const key in o) {\n            const child = o[key];\n            if (typeof child === 'object') {\n                results.push(...paths(child, path === undefined ? key : `${path}.${key}`));\n            }\n            else {\n                results.push(path === undefined ? key : `${path}.${key}`);\n            }\n        }\n\n        return results;\n    }\n\n    export function values<T>(o: { [key: string]: T }): IterableIterator<T>;\n    export function values<T>(o: { [key: number]: T }): IterableIterator<T>;\n    export function* values<T>(o: any): IterableIterator<T> {\n        for (const key in o) {\n            yield o[key];\n        }\n    }\n}\n","'use strict';\nimport { Objects } from './object';\n\nexport namespace Arrays {\n    export function countUniques<T>(source: T[], accessor: (item: T) => string): { [key: string]: number } {\n        const uniqueCounts = Object.create(null);\n        for (const item of source) {\n            const value = accessor(item);\n            uniqueCounts[value] = (uniqueCounts[value] || 0) + 1;\n        }\n        return uniqueCounts;\n    }\n\n    export function filterMap<T, TMapped>(\n        source: T[],\n        predicateMapper: (item: T) => TMapped | null | undefined\n    ): TMapped[] {\n        return source.reduce(\n            (accumulator, current) => {\n                const mapped = predicateMapper(current);\n                if (mapped != null) {\n                    accumulator.push(mapped);\n                }\n                return accumulator;\n            },\n            [] as TMapped[]\n        );\n    }\n\n    export async function filterMapAsync<T, TMapped>(\n        source: T[],\n        predicateMapper: (item: T) => Promise<TMapped | null | undefined>\n    ): Promise<TMapped[]> {\n        return source.reduce(\n            async (accumulator, current) => {\n                const mapped = await predicateMapper(current);\n                if (mapped != null) {\n                    accumulator.push(mapped);\n                }\n                return accumulator;\n            },\n            [] as any\n        );\n    }\n\n    export function groupBy<T>(source: T[], accessor: (item: T) => string): { [key: string]: T[] } {\n        return source.reduce((groupings, current) => {\n            const value = accessor(current);\n            groupings[value] = groupings[value] || [];\n            groupings[value].push(current);\n            return groupings;\n        }, Object.create(null));\n    }\n\n    export function groupByMap<TKey, TValue>(source: TValue[], accessor: (item: TValue) => TKey): Map<TKey, TValue[]> {\n        return source.reduce((groupings, current) => {\n            const value = accessor(current);\n            const group = groupings.get(value) || [];\n            groupings.set(value, group);\n            group.push(current);\n            return groupings;\n        }, new Map<TKey, TValue[]>());\n    }\n\n    export function groupByFilterMap<TKey, TValue, TMapped>(\n        source: TValue[],\n        accessor: (item: TValue) => TKey,\n        predicateMapper: (item: TValue) => TMapped | null | undefined\n    ): Map<TKey, TMapped[]> {\n        return source.reduce((groupings, current) => {\n            const mapped = predicateMapper(current);\n            if (mapped != null) {\n                const value = accessor(current);\n                const group = groupings.get(value) || [];\n                groupings.set(value, group);\n                group.push(mapped);\n            }\n            return groupings;\n        }, new Map<TKey, TMapped[]>());\n    }\n\n    export interface IHierarchicalItem<T> {\n        name: string;\n        relativePath: string;\n        value?: T;\n\n        // parent?: IHierarchicalItem<T>;\n        children: { [key: string]: IHierarchicalItem<T> } | undefined;\n        descendants: T[] | undefined;\n    }\n\n    export function makeHierarchical<T>(\n        values: T[],\n        splitPath: (i: T) => string[],\n        joinPath: (...paths: string[]) => string,\n        compact: boolean = false\n    ): IHierarchicalItem<T> {\n        const seed = {\n            name: '',\n            relativePath: '',\n            children: Object.create(null),\n            descendants: []\n        };\n\n        const hierarchy = values.reduce((root: IHierarchicalItem<T>, value) => {\n            let folder = root;\n\n            let relativePath = '';\n            for (const folderName of splitPath(value)) {\n                relativePath = joinPath(relativePath, folderName);\n\n                if (folder.children === undefined) {\n                    folder.children = Object.create(null);\n                }\n\n                let f = folder.children![folderName];\n                if (f === undefined) {\n                    folder.children![folderName] = f = {\n                        name: folderName,\n                        relativePath: relativePath,\n                        // parent: folder,\n                        children: undefined,\n                        descendants: undefined\n                    };\n                }\n\n                if (folder.descendants === undefined) {\n                    folder.descendants = [];\n                }\n                folder.descendants.push(value);\n                folder = f;\n            }\n\n            folder.value = value;\n\n            return root;\n        }, seed);\n\n        if (compact) return compactHierarchy(hierarchy, joinPath, true);\n        return hierarchy;\n    }\n\n    export function compactHierarchy<T>(\n        root: IHierarchicalItem<T>,\n        joinPath: (...paths: string[]) => string,\n        isRoot: boolean = true\n    ): IHierarchicalItem<T> {\n        if (root.children === undefined) return root;\n\n        const children = [...Objects.values(root.children)];\n\n        // // Attempts less nesting but duplicate roots\n        // if (!isRoot && children.every(c => c.value === undefined)) {\n        //     const parentSiblings = root.parent!.children!;\n        //     if (parentSiblings[root.name] !== undefined) {\n        //         delete parentSiblings[root.name];\n\n        //         for (const child of children) {\n        //             child.name = joinPath(root.name, child.name);\n        //             parentSiblings[child.name] = child;\n        //         }\n        //     }\n        // }\n\n        for (const child of children) {\n            compactHierarchy(child, joinPath, false);\n        }\n\n        if (!isRoot && children.length === 1) {\n            const child = children[0];\n            if (child.value === undefined) {\n                root.name = joinPath(root.name, child.name);\n                root.relativePath = child.relativePath;\n                root.children = child.children;\n            }\n        }\n\n        return root;\n    }\n\n    export function uniqueBy<T>(source: T[], accessor: (item: T) => any, predicate?: (item: T) => boolean): T[] {\n        const uniqueValues = Object.create(null);\n        return source.filter(item => {\n            const value = accessor(item);\n            if (uniqueValues[value]) return false;\n\n            uniqueValues[value] = accessor;\n            return predicate ? predicate(item) : true;\n        });\n    }\n}\n","'use strict';\nimport { distanceInWordsToNow as _fromNow, format as _format } from 'date-fns';\nimport * as en from 'date-fns/locale/en';\n\n// Taken from https://github.com/date-fns/date-fns/blob/601bc8e5708cbaebee5389bdaf51c2b4b33b73c4/src/locale/en/build_distance_in_words_locale/index.js\nfunction buildDistanceInWordsLocale() {\n    const distanceInWordsLocale: { [key: string]: string | { one: string; other: string } } = {\n        lessThanXSeconds: {\n            one: 'less than a second',\n            other: 'less than {{count}} seconds'\n        },\n\n        xSeconds: {\n            one: '1 second',\n            other: '{{count}} seconds'\n        },\n\n        halfAMinute: 'half a minute',\n\n        lessThanXMinutes: {\n            one: 'a few seconds',\n            other: 'less than {{count}} minutes'\n        },\n\n        xMinutes: {\n            one: 'a minute',\n            other: '{{count}} minutes'\n        },\n\n        aboutXHours: {\n            one: 'an hour',\n            other: '{{count}} hours'\n        },\n\n        xHours: {\n            one: 'an hour',\n            other: '{{count}} hours'\n        },\n\n        xDays: {\n            one: 'a day',\n            other: '{{count}} days'\n        },\n\n        aboutXMonths: {\n            one: 'a month',\n            other: '{{count}} months'\n        },\n\n        xMonths: {\n            one: 'a month',\n            other: '{{count}} months'\n        },\n\n        aboutXYears: {\n            one: 'a year',\n            other: '{{count}} years'\n        },\n\n        xYears: {\n            one: 'a year',\n            other: '{{count}} years'\n        },\n\n        overXYears: {\n            one: 'a year',\n            other: '{{count}} years'\n        },\n\n        almostXYears: {\n            one: 'a year',\n            other: '{{count}} years'\n        }\n    };\n\n    function localize(token: string, count: number, options: any) {\n        options = options || {};\n\n        if (count === 12 && token === 'xMonths') {\n            token = 'aboutXYears';\n            count = 1;\n        }\n\n        const result = distanceInWordsLocale[token];\n\n        let value: string;\n        if (typeof result === 'string') {\n            value = result;\n        }\n        else {\n            if (count === 1) {\n                value = result.one;\n            }\n            else {\n                value = result.other.replace('{{count}}', count.toString());\n            }\n        }\n\n        if (!options.addSuffix) return value;\n\n        if (options.comparison > 0) return 'in ' + value;\n\n        return value + ' ago';\n    }\n\n    return {\n        localize: localize\n    };\n}\n\n// Monkey patch the locale to customize the wording\nconst patch = en as any;\npatch.distanceInWords = buildDistanceInWordsLocale();\n\nconst formatterOptions = { addSuffix: true, locale: patch };\n\nexport namespace Dates {\n    export const MillisecondsPerMinute = 60000; // 60 * 1000\n    export const MillisecondsPerHour = 3600000; // 60 * 60 * 1000\n    export const MillisecondsPerDay = 86400000; // 24 * 60 * 60 * 1000\n\n    export interface IDateFormatter {\n        fromNow(): string;\n        format(format: string): string;\n    }\n\n    export function dateDaysFromNow(date: Date, now: number = Date.now()) {\n        const startOfDayLeft = startOfDay(now);\n        const startOfDayRight = startOfDay(date);\n\n        const timestampLeft = startOfDayLeft.getTime() - startOfDayLeft.getTimezoneOffset() * MillisecondsPerMinute;\n        const timestampRight = startOfDayRight.getTime() - startOfDayRight.getTimezoneOffset() * MillisecondsPerMinute;\n\n        return Math.round((timestampLeft - timestampRight) / MillisecondsPerDay);\n    }\n\n    export function startOfDay(date: Date | number) {\n        const newDate = new Date(typeof date === 'number' ? date : date.getTime());\n        newDate.setHours(0, 0, 0, 0);\n        return newDate;\n    }\n\n    export function toFormatter(date: Date): IDateFormatter {\n        return {\n            fromNow: () => {\n                return _fromNow(date, formatterOptions);\n            },\n            format: (format: string) => _format(date, format)\n        };\n    }\n}\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","import isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","import toInteger from './toInteger.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\nexport default before;\n","import before from './before.js';\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\nexport default once;\n","'use strict';\nimport { debounce as _debounce, once as _once } from 'lodash-es';\nimport { CancellationToken, Disposable } from 'vscode';\n\nexport interface IDeferrable {\n    cancel(): void;\n    flush(...args: any[]): void;\n    pending?(): boolean;\n}\n\ninterface IPropOfValue {\n    (): any;\n    value: string | undefined;\n}\n\nexport namespace Functions {\n    export function cachedOnce<T>(fn: (...args: any[]) => Promise<T>, seed: T): (...args: any[]) => Promise<T> {\n        let cached: T | undefined = seed;\n        return (...args: any[]) => {\n            if (cached !== undefined) {\n                const promise = Promise.resolve(cached);\n                cached = undefined;\n\n                return promise;\n            }\n            return fn(...args);\n        };\n    }\n\n    export function cancellable<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined> {\n        return new Promise<T | undefined>((resolve, reject) => {\n            token.onCancellationRequested(() => resolve(undefined));\n\n            promise.then(resolve, reject);\n        });\n    }\n\n    export function debounce<T extends (...args: any[]) => any>(\n        fn: T,\n        wait?: number,\n        options?: { leading?: boolean; maxWait?: number; track?: boolean; trailing?: boolean }\n    ): T & IDeferrable {\n        const { track, ...opts } = {\n            track: false,\n            ...(options || {})\n        } as { leading?: boolean; maxWait?: number; track?: boolean; trailing?: boolean };\n\n        if (track !== true) return _debounce(fn, wait, opts);\n\n        let pending = false;\n\n        const debounced = _debounce(\n            (function(this: any, ...args: any[]) {\n                pending = false;\n                return fn.apply(this, args);\n            } as any) as T,\n            wait,\n            options\n        ) as T & IDeferrable;\n\n        const tracked = (function(this: any, ...args: any[]) {\n            pending = true;\n            return debounced.apply(this, args);\n        } as any) as T & IDeferrable;\n\n        tracked.pending = function() {\n            return pending;\n        };\n        tracked.cancel = function() {\n            return debounced.cancel.apply(debounced);\n        };\n        tracked.flush = function(...args: any[]) {\n            return debounced.flush.apply(debounced, args);\n        };\n\n        return tracked;\n    }\n\n    const comma = ',';\n    const empty = '';\n    const equals = '=';\n    const openBrace = '{';\n    const openParen = '(';\n    const closeParen = ')';\n\n    const fnBodyRegex = /\\(([\\s\\S]*)\\)/;\n    const fnBodyStripCommentsRegex = /(\\/\\*([\\s\\S]*?)\\*\\/|([^:]|^)\\/\\/(.*)$)/gm;\n    const fnBodyStripParamDefaultValueRegex = /\\s?=.*$/;\n\n    export function getParameters(fn: Function): string[] {\n        if (typeof fn !== 'function') throw new Error('Not supported');\n\n        if (fn.length === 0) return [];\n\n        let fnBody: string = Function.prototype.toString.call(fn);\n        fnBody = fnBody.replace(fnBodyStripCommentsRegex, empty) || fnBody;\n        fnBody = fnBody.slice(0, fnBody.indexOf(openBrace));\n\n        let open = fnBody.indexOf(openParen);\n        let close = fnBody.indexOf(closeParen);\n\n        open = open >= 0 ? open + 1 : 0;\n        close = close > 0 ? close : fnBody.indexOf(equals);\n\n        fnBody = fnBody.slice(open, close);\n        fnBody = `(${fnBody})`;\n\n        const match = fnBody.match(fnBodyRegex);\n        return match != null\n            ? match[1].split(comma).map(param => param.trim().replace(fnBodyStripParamDefaultValueRegex, empty))\n            : [];\n    }\n\n    export function isPromise(o: any): o is Promise<any> {\n        return (typeof o === 'object' || typeof o === 'function') && typeof o.then === 'function';\n    }\n\n    export function once<T extends (...args: any[]) => any>(fn: T): T {\n        return _once(fn);\n    }\n\n    export function propOf<T, K extends Extract<keyof T, string>>(o: T, key: K) {\n        const propOfCore = <T, K extends Extract<keyof T, string>>(o: T, key: K) => {\n            const value: string =\n                (propOfCore as IPropOfValue).value === undefined ? key : `${(propOfCore as IPropOfValue).value}.${key}`;\n            (propOfCore as IPropOfValue).value = value;\n            const fn = <Y extends Extract<keyof T[K], string>>(k: Y) => propOfCore(o[key], k);\n            return Object.assign(fn, { value: value });\n        };\n        return propOfCore(o, key);\n    }\n\n    export function interval(fn: (...args: any[]) => void, ms: number): Disposable {\n        let timer: NodeJS.Timer | undefined;\n        const disposable = {\n            dispose: () => {\n                if (timer !== undefined) {\n                    clearInterval(timer);\n                    timer = undefined;\n                }\n            }\n        };\n        timer = setInterval(fn, ms);\n\n        return disposable;\n    }\n\n    export async function wait(ms: number) {\n        await new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    export async function waitUntil(fn: (...args: any[]) => boolean, timeout: number): Promise<boolean> {\n        const max = Math.round(timeout / 100);\n        let counter = 0;\n        while (true) {\n            if (fn()) return true;\n            if (counter > max) return false;\n\n            await wait(100);\n            counter++;\n        }\n    }\n}\n","'use strict';\nimport { Functions } from '../function';\n\nexport function gate() {\n    return (target: any, key: string, descriptor: PropertyDescriptor) => {\n        let fn: Function | undefined;\n        if (typeof descriptor.value === 'function') {\n            fn = descriptor.value;\n        }\n        else if (typeof descriptor.get === 'function') {\n            fn = descriptor.get;\n        }\n        if (fn == null) throw new Error('Not supported');\n\n        const gateKey = `$gate$${key}`;\n\n        descriptor.value = function(this: any, ...args: any[]) {\n            if (!this.hasOwnProperty(gateKey)) {\n                Object.defineProperty(this, gateKey, {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: undefined\n                });\n            }\n\n            let promise = this[gateKey];\n            if (promise === undefined) {\n                const result = fn!.apply(this, args);\n                if (result == null || !Functions.isPromise(result)) {\n                    return result;\n                }\n\n                this[gateKey] = promise = result.then((r: any) => {\n                    this[gateKey] = undefined;\n                    return r;\n                });\n            }\n\n            return promise;\n        };\n    };\n}\n","'use strict';\nimport { createHash, HexBase64Latin1Encoding } from 'crypto';\n\nexport namespace Strings {\n    export const enum CharCode {\n        /**\n         * The `/` character.\n         */\n        Slash = 47,\n        /**\n         * The `\\` character.\n         */\n        Backslash = 92\n    }\n\n    export function getDurationMilliseconds(start: [number, number]) {\n        const [secs, nanosecs] = process.hrtime(start);\n        return secs * 1000 + Math.floor(nanosecs / 1000000);\n    }\n\n    const pathNormalizeRegex = /\\\\/g;\n    const pathStripTrailingSlashRegex = /\\/$/g;\n    const tokenRegex = /\\$\\{(\\W*)?([^|]*?)(?:\\|(\\d+)(\\-|\\?)?)?(\\W*)?\\}/g;\n    const tokenSanitizeRegex = /\\$\\{(?:\\W*)?(\\w*?)(?:[\\W\\d]*)\\}/g;\n\n    export interface ITokenOptions {\n        collapseWhitespace: boolean;\n        padDirection: 'left' | 'right';\n        prefix: string | undefined;\n        suffix: string | undefined;\n        truncateTo: number | undefined;\n    }\n\n    export function getTokensFromTemplate(template: string) {\n        const tokens: { key: string; options: ITokenOptions }[] = [];\n\n        let match = tokenRegex.exec(template);\n        while (match != null) {\n            const [, prefix, key, truncateTo, option, suffix] = match;\n            tokens.push({\n                key: key,\n                options: {\n                    collapseWhitespace: option === '?',\n                    padDirection: option === '-' ? 'left' : 'right',\n                    prefix: prefix,\n                    suffix: suffix,\n                    truncateTo: truncateTo == null ? undefined : parseInt(truncateTo, 10)\n                }\n            });\n            match = tokenRegex.exec(template);\n        }\n\n        return tokens;\n    }\n\n    export function interpolate(template: string, context: object | undefined): string {\n        if (!template) return template;\n        if (context === undefined) return template.replace(tokenSanitizeRegex, '');\n\n        template = template.replace(tokenSanitizeRegex, '$${this.$1}');\n        return new Function(`return \\`${template}\\`;`).call(context);\n    }\n\n    export function* lines(s: string): IterableIterator<string> {\n        let i = 0;\n        while (i < s.length) {\n            let j = s.indexOf('\\n', i);\n            if (j === -1) {\n                j = s.length;\n            }\n\n            yield s.substring(i, j);\n            i = j + 1;\n        }\n    }\n\n    export function md5(s: string, encoding: HexBase64Latin1Encoding = 'base64'): string {\n        return createHash('md5')\n            .update(s)\n            .digest(encoding);\n    }\n\n    export function normalizePath(\n        fileName: string,\n        options: { addLeadingSlash?: boolean; stripTrailingSlash?: boolean } = { stripTrailingSlash: true }\n    ) {\n        if (fileName == null || fileName.length === 0) return fileName;\n\n        let normalized = fileName.replace(pathNormalizeRegex, '/');\n\n        const { addLeadingSlash, stripTrailingSlash } = { stripTrailingSlash: true, ...options };\n\n        if (stripTrailingSlash) {\n            normalized = normalized.replace(pathStripTrailingSlashRegex, '');\n        }\n\n        if (addLeadingSlash && normalized.charCodeAt(0) !== CharCode.Slash) {\n            normalized = `/${normalized}`;\n        }\n\n        return normalized;\n    }\n\n    export function pad(s: string, before: number = 0, after: number = 0, padding: string = `\\u00a0`) {\n        if (before === 0 && after === 0) return s;\n\n        return `${before === 0 ? '' : padding.repeat(before)}${s}${after === 0 ? '' : padding.repeat(after)}`;\n    }\n\n    export function padLeft(s: string, padTo: number, padding: string = '\\u00a0', width?: number) {\n        const diff = padTo - (width || getWidth(s));\n        return diff <= 0 ? s : padding.repeat(diff) + s;\n    }\n\n    export function padLeftOrTruncate(s: string, max: number, padding?: string, width?: number) {\n        width = width || getWidth(s);\n        if (width < max) return padLeft(s, max, padding, width);\n        if (width > max) return truncate(s, max, undefined, width);\n        return s;\n    }\n\n    export function padRight(s: string, padTo: number, padding: string = '\\u00a0', width?: number) {\n        const diff = padTo - (width || getWidth(s));\n        return diff <= 0 ? s : s + padding.repeat(diff);\n    }\n\n    export function padOrTruncate(s: string, max: number, padding?: string, width?: number) {\n        const left = max < 0;\n        max = Math.abs(max);\n\n        width = width || getWidth(s);\n        if (width < max) return left ? padLeft(s, max, padding, width) : padRight(s, max, padding, width);\n        if (width > max) return truncate(s, max, undefined, width);\n        return s;\n    }\n\n    export function padRightOrTruncate(s: string, max: number, padding?: string, width?: number) {\n        width = width || getWidth(s);\n        if (width < max) return padRight(s, max, padding, width);\n        if (width > max) return truncate(s, max);\n        return s;\n    }\n\n    export function pluralize(\n        s: string,\n        count: number,\n        options?: { number?: string; plural?: string; suffix?: string; zero?: string }\n    ) {\n        if (options === undefined) return `${count} ${s}${count === 1 ? '' : 's'}`;\n\n        return `${count === 0 ? options.zero || count : options.number || count} ${\n            count === 1 ? s : options.plural || `${s}${options.suffix || 's'}`\n        }`;\n    }\n\n    // Removes \\ / : * ? \" < > | and C0 and C1 control codes\n    const illegalCharsForFSRegex = /[\\\\/:*?\"<>|\\x00-\\x1f\\x80-\\x9f]/g;\n\n    export function sanitizeForFileSystem(s: string, replacement: string = '_') {\n        if (!s) return s;\n        return s.replace(illegalCharsForFSRegex, replacement);\n    }\n\n    export function sha1(s: string, encoding: HexBase64Latin1Encoding = 'base64'): string {\n        return createHash('sha1')\n            .update(s)\n            .digest(encoding);\n    }\n\n    export function truncate(s: string, truncateTo: number, ellipsis: string = '\\u2026', width?: number) {\n        if (!s) return s;\n\n        width = width || getWidth(s);\n        if (width <= truncateTo) return s;\n        if (width === s.length) return `${s.substring(0, truncateTo - 1)}${ellipsis}`;\n\n        // Skip ahead to start as far as we can by assuming all the double-width characters won't be truncated\n        let chars = Math.floor(truncateTo / (width / s.length));\n        let count = getWidth(s.substring(0, chars));\n        while (count < truncateTo) {\n            count += getWidth(s[chars++]);\n        }\n\n        if (count >= truncateTo) {\n            chars--;\n        }\n\n        return `${s.substring(0, chars)}${ellipsis}`;\n    }\n\n    const ansiRegex = /[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[a-zA-Z\\\\d]*)*)?\\\\u0007)|(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PRZcf-ntqry=><~]))/g;\n    const containsNonAsciiRegex = /[^\\x20-\\x7F\\u00a0\\u2026]/;\n\n    export function getWidth(s: string): number {\n        if (s == null || s.length === 0) return 0;\n\n        // Shortcut to avoid needless string `RegExp`s, replacements, and allocations\n        if (!containsNonAsciiRegex.test(s)) return s.length;\n\n        s = s.replace(ansiRegex, '');\n\n        let count = 0;\n        let emoji = 0;\n        let joiners = 0;\n\n        const graphemes = [...s];\n        for (let i = 0; i < graphemes.length; i++) {\n            const code = graphemes[i].codePointAt(0)!;\n\n            // Ignore control characters\n            if (code <= 0x1f || (code >= 0x7f && code <= 0x9f)) continue;\n\n            // Ignore combining characters\n            if (code >= 0x300 && code <= 0x36f) continue;\n\n            // https://stackoverflow.com/questions/30757193/find-out-if-character-in-string-is-emoji\n            if (\n                (code >= 0x1f600 && code <= 0x1f64f) || // Emoticons\n                (code >= 0x1f300 && code <= 0x1f5ff) || // Misc Symbols and Pictographs\n                (code >= 0x1f680 && code <= 0x1f6ff) || // Transport and Map\n                (code >= 0x2600 && code <= 0x26ff) || // Misc symbols\n                (code >= 0x2700 && code <= 0x27bf) || // Dingbats\n                (code >= 0xfe00 && code <= 0xfe0f) || // Variation Selectors\n                (code >= 0x1f900 && code <= 0x1f9ff) || // Supplemental Symbols and Pictographs\n                (code >= 65024 && code <= 65039) || // Variation selector\n                (code >= 8400 && code <= 8447) // Combining Diacritical Marks for Symbols\n            ) {\n                if (code >= 0x1f3fb && code <= 0x1f3ff) continue; // emoji modifier fitzpatrick type\n\n                emoji++;\n                count += 2;\n                continue;\n            }\n\n            // Ignore zero-width joiners '\\u200d'\n            if (code === 8205) {\n                joiners++;\n                count -= 2;\n                continue;\n            }\n\n            // Surrogates\n            if (code > 0xffff) {\n                i++;\n            }\n\n            count += isFullwidthCodePoint(code) ? 2 : 1;\n        }\n\n        const offset = emoji - joiners;\n        if (offset > 1) {\n            count += offset - 1;\n        }\n        return count;\n    }\n\n    function isFullwidthCodePoint(cp: number) {\n        // code points are derived from:\n        // http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\n        if (\n            cp >= 0x1100 &&\n            (cp <= 0x115f || // Hangul Jamo\n            cp === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n            cp === 0x232a || // RIGHT-POINTING ANGLE BRACKET\n                // CJK Radicals Supplement .. Enclosed CJK Letters and Months\n                (0x2e80 <= cp && cp <= 0x3247 && cp !== 0x303f) ||\n                // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n                (0x3250 <= cp && cp <= 0x4dbf) ||\n                // CJK Unified Ideographs .. Yi Radicals\n                (0x4e00 <= cp && cp <= 0xa4c6) ||\n                // Hangul Jamo Extended-A\n                (0xa960 <= cp && cp <= 0xa97c) ||\n                // Hangul Syllables\n                (0xac00 <= cp && cp <= 0xd7a3) ||\n                // CJK Compatibility Ideographs\n                (0xf900 <= cp && cp <= 0xfaff) ||\n                // Vertical Forms\n                (0xfe10 <= cp && cp <= 0xfe19) ||\n                // CJK Compatibility Forms .. Small Form Variants\n                (0xfe30 <= cp && cp <= 0xfe6b) ||\n                // Halfwidth and Fullwidth Forms\n                (0xff01 <= cp && cp <= 0xff60) ||\n                (0xffe0 <= cp && cp <= 0xffe6) ||\n                // Kana Supplement\n                (0x1b000 <= cp && cp <= 0x1b001) ||\n                // Enclosed Ideographic Supplement\n                (0x1f200 <= cp && cp <= 0x1f251) ||\n                // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n                (0x20000 <= cp && cp <= 0x3fffd))\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n}\n","'use strict';\nimport { LogCorrelationContext, Logger, LogLevel } from '../../logger';\nimport { Functions } from './../function';\nimport { Strings } from './../string';\n\nconst correlationContext = new Map<number, LogCorrelationContext>();\nlet correlationCounter = 0;\n\nexport function getCorrelationContext() {\n    return correlationContext.get(correlationCounter);\n}\n\nexport function getCorrelationId() {\n    return correlationCounter;\n}\n\nfunction getNextCorrelationId() {\n    if (correlationCounter === Number.MAX_SAFE_INTEGER) {\n        correlationCounter = 0;\n    }\n    return ++correlationCounter;\n}\n\nfunction clearCorrelationContext(correlationId: number) {\n    correlationContext.delete(correlationId);\n}\n\nfunction setCorrelationContext(correlationId: number, context: LogCorrelationContext) {\n    correlationContext.set(correlationId, context);\n}\n\nexport interface LogContext<T> {\n    id: number;\n    instance: T;\n    instanceName: string;\n    name: string;\n    prefix: string;\n}\n\nexport const LogInstanceNameFn = Symbol('logInstanceNameFn');\n\nexport function logName<T>(fn: (c: T, name: string) => string) {\n    return (target: Function) => {\n        (target as any)[LogInstanceNameFn] = fn;\n    };\n}\n\nexport function debug<T>(\n    options: {\n        args?: false | { [arg: string]: (arg: any) => string | false };\n        condition?(...args: any[]): boolean;\n        correlate?: boolean;\n        enter?(...args: any[]): string;\n        exit?(result: any): string;\n        prefix?(context: LogContext<T>, ...args: any[]): string;\n        sanitize?(key: string, value: any): any;\n        singleLine?: boolean;\n        timed?: boolean;\n    } = { timed: true }\n) {\n    return log<T>({ debug: true, ...options });\n}\n\nexport function log<T>(\n    options: {\n        args?: false | { [arg: number]: ((arg: any) => string | false) };\n        condition?(...args: any[]): boolean;\n        correlate?: boolean;\n        debug?: boolean;\n        enter?(...args: any[]): string;\n        exit?(result: any): string;\n        prefix?(context: LogContext<T>, ...args: any[]): string;\n        sanitize?(key: string, value: any): any;\n        singleLine?: boolean;\n        timed?: boolean;\n    } = { timed: true }\n) {\n    options = { timed: true, ...options };\n\n    const logFn = (options.debug ? Logger.debug.bind(Logger) : Logger.log.bind(Logger)) as\n        | typeof Logger.debug\n        | typeof Logger.log;\n\n    return (target: any, key: string, descriptor: PropertyDescriptor) => {\n        let fn: Function | undefined;\n        if (typeof descriptor.value === 'function') {\n            fn = descriptor.value;\n        }\n        else if (typeof descriptor.get === 'function') {\n            fn = descriptor.get;\n        }\n        if (fn == null) throw new Error('Not supported');\n\n        const parameters = Functions.getParameters(fn);\n\n        descriptor.value = function(this: any, ...args: any[]) {\n            const correlationId = getNextCorrelationId();\n\n            if (\n                (Logger.level !== LogLevel.Debug && !(Logger.level === LogLevel.Verbose && !options.debug)) ||\n                (typeof options.condition === 'function' && !options.condition(...args))\n            ) {\n                return fn!.apply(this, args);\n            }\n\n            let instanceName: string;\n            if (this != null) {\n                instanceName = Logger.toLoggableName(this);\n                if (this.constructor != null && this.constructor[LogInstanceNameFn]) {\n                    instanceName = target.constructor[LogInstanceNameFn](this, instanceName);\n                }\n            }\n            else {\n                instanceName = '';\n            }\n\n            let { correlate } = options;\n            if (!correlate && options.timed) {\n                correlate = true;\n            }\n\n            let prefix = `${correlate ? `[${correlationId.toString(16)}] ` : ''}${\n                instanceName ? `${instanceName}.` : ''\n            }${key}`;\n\n            if (options.prefix != null) {\n                prefix = options.prefix(\n                    {\n                        id: correlationId,\n                        instance: this,\n                        instanceName: instanceName,\n                        name: key,\n                        prefix: prefix\n                    } as LogContext<T>,\n                    ...args\n                );\n            }\n\n            let correlationContext: LogCorrelationContext | undefined;\n            if (correlate) {\n                correlationContext = { correlationId: correlationId, prefix: prefix };\n                setCorrelationContext(correlationId, correlationContext);\n            }\n\n            const enter = options.enter != null ? options.enter(...args) : '';\n\n            let loggableParams: string;\n            if (options.args === false || args.length === 0) {\n                loggableParams = '';\n\n                if (!options.singleLine) {\n                    logFn(`${prefix}${enter}`);\n                }\n            }\n            else {\n                const argFns = typeof options.args === 'object' ? options.args : undefined;\n                let argFn;\n                let loggable;\n                loggableParams = args\n                    .map((v: any, index: number) => {\n                        const p = parameters[index];\n\n                        argFn = argFns !== undefined ? argFns[index] : undefined;\n                        if (argFn !== undefined) {\n                            loggable = argFn(v);\n                            if (loggable === false) return undefined;\n                        }\n                        else {\n                            loggable = Logger.toLoggable(v, options.sanitize);\n                        }\n\n                        return p ? `${p}=${loggable}` : loggable;\n                    })\n                    .filter(Boolean)\n                    .join(', ');\n\n                if (!options.singleLine) {\n                    if (!options.debug) {\n                        Logger.logWithDebugParams(`${prefix}${enter}`, loggableParams);\n                    }\n                    else {\n                        logFn(`${prefix}${enter}`, loggableParams);\n                    }\n                }\n            }\n\n            if (options.timed || options.exit != null) {\n                const start = options.timed ? process.hrtime() : undefined;\n\n                const logError = (ex: Error) => {\n                    const timing = start !== undefined ? ` \\u2022 ${Strings.getDurationMilliseconds(start)} ms` : '';\n                    if (options.singleLine) {\n                        Logger.error(\n                            ex,\n                            `${prefix}${enter}`,\n                            `failed${\n                                correlationContext !== undefined && correlationContext.exitDetails\n                                    ? correlationContext.exitDetails\n                                    : ''\n                            }${timing}`,\n                            loggableParams\n                        );\n                    }\n                    else {\n                        Logger.error(\n                            ex,\n                            prefix,\n                            `failed${\n                                correlationContext !== undefined && correlationContext.exitDetails\n                                    ? correlationContext.exitDetails\n                                    : ''\n                            }${timing}`\n                        );\n                    }\n\n                    if (correlate) {\n                        clearCorrelationContext(correlationId);\n                    }\n                };\n\n                let result;\n                try {\n                    result = fn!.apply(this, args);\n                }\n                catch (ex) {\n                    logError(ex);\n                    throw ex;\n                }\n\n                const logResult = (r: any) => {\n                    const timing = start !== undefined ? ` \\u2022 ${Strings.getDurationMilliseconds(start)} ms` : '';\n                    let exit;\n                    if (options.exit != null) {\n                        try {\n                            exit = options.exit(r);\n                        }\n                        catch (ex) {\n                            exit = `@log.exit error: ${ex}`;\n                        }\n                    }\n                    else {\n                        exit = 'completed';\n                    }\n\n                    if (options.singleLine) {\n                        if (!options.debug) {\n                            Logger.logWithDebugParams(\n                                `${prefix}${enter} ${exit}${\n                                    correlationContext !== undefined && correlationContext.exitDetails\n                                        ? correlationContext.exitDetails\n                                        : ''\n                                }${timing}`,\n                                loggableParams\n                            );\n                        }\n                        else {\n                            logFn(\n                                `${prefix}${enter} ${exit}${\n                                    correlationContext !== undefined && correlationContext.exitDetails\n                                        ? correlationContext.exitDetails\n                                        : ''\n                                }${timing}`,\n                                loggableParams\n                            );\n                        }\n                    }\n                    else {\n                        logFn(\n                            `${prefix} ${exit}${\n                                correlationContext !== undefined && correlationContext.exitDetails\n                                    ? correlationContext.exitDetails\n                                    : ''\n                            }${timing}`\n                        );\n                    }\n\n                    if (correlate) {\n                        clearCorrelationContext(correlationId);\n                    }\n                };\n\n                if (result != null && Functions.isPromise(result)) {\n                    const promise = result.then(logResult);\n                    promise.catch(logError);\n                }\n                else {\n                    logResult(result);\n                }\n\n                return result;\n            }\n\n            return fn!.apply(this, args);\n        };\n    };\n}\n","'use strict';\n\nexport namespace Iterables {\n    export function count<T>(source: Iterable<T> | IterableIterator<T>, predicate?: (item: T) => boolean): number {\n        let count = 0;\n        let next: IteratorResult<T>;\n\n        while (true) {\n            next = (source as IterableIterator<T>).next();\n            if (next.done) break;\n\n            if (predicate === undefined || predicate(next.value)) {\n                count++;\n            }\n        }\n\n        return count;\n    }\n\n    export function every<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): boolean {\n        for (const item of source) {\n            if (!predicate(item)) return false;\n        }\n        return true;\n    }\n\n    export function filter<T>(\n        source: Iterable<T | undefined | null> | IterableIterator<T | undefined | null>\n    ): Iterable<T>;\n    export function filter<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): Iterable<T>;\n    export function* filter<T>(\n        source: Iterable<T> | IterableIterator<T>,\n        predicate?: (item: T) => boolean\n    ): Iterable<T> {\n        if (predicate === undefined) {\n            for (const item of source) {\n                if (item != null) yield item;\n            }\n        }\n        else {\n            for (const item of source) {\n                if (predicate(item)) yield item;\n            }\n        }\n    }\n\n    export function* filterMap<T, TMapped>(\n        source: Iterable<T> | IterableIterator<T>,\n        predicateMapper: (item: T) => TMapped | undefined | null\n    ): Iterable<TMapped> {\n        for (const item of source) {\n            const mapped = predicateMapper(item);\n            if (mapped != null) yield mapped;\n        }\n    }\n\n    export function forEach<T>(source: Iterable<T> | IterableIterator<T>, fn: (item: T, index: number) => void): void {\n        let i = 0;\n        for (const item of source) {\n            fn(item, i);\n            i++;\n        }\n    }\n\n    export function find<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): T | null {\n        for (const item of source) {\n            if (predicate(item)) return item;\n        }\n        return null;\n    }\n\n    export function first<T>(source: Iterable<T>): T {\n        return source[Symbol.iterator]().next().value;\n    }\n\n    export function* flatMap<T, TMapped>(\n        source: Iterable<T> | IterableIterator<T>,\n        mapper: (item: T) => Iterable<TMapped>\n    ): Iterable<TMapped> {\n        for (const item of source) {\n            yield* mapper(item);\n        }\n    }\n\n    export function has<T>(source: Iterable<T> | IterableIterator<T>, item: T): boolean {\n        return some(source, i => i === item);\n    }\n\n    export function isIterable(source: Iterable<any>): boolean {\n        return typeof source[Symbol.iterator] === 'function';\n    }\n\n    export function join(source: Iterable<any>, separator: string): string {\n        let value = '';\n\n        const iterator = source[Symbol.iterator]();\n        let next = iterator.next();\n        if (next.done) return value;\n\n        while (true) {\n            const s = next.value.toString();\n\n            next = iterator.next();\n            if (next.done) {\n                value += s;\n                break;\n            }\n\n            value += `${s}${separator}`;\n        }\n\n        return value;\n    }\n\n    export function last<T>(source: Iterable<T>): T | null {\n        let item: T | null = null;\n        for (item of source) {\n            /* noop */\n        }\n        return item;\n    }\n\n    export function* map<T, TMapped>(\n        source: Iterable<T> | IterableIterator<T>,\n        mapper: (item: T) => TMapped\n    ): Iterable<TMapped> {\n        for (const item of source) {\n            yield mapper(item);\n        }\n    }\n\n    export function next<T>(source: IterableIterator<T>): T {\n        return source.next().value;\n    }\n\n    export function* skip<T>(source: Iterable<T> | IterableIterator<T>, count: number): IterableIterator<T> {\n        let i = 0;\n        for (const item of source) {\n            if (i >= count) yield item;\n            i++;\n        }\n    }\n\n    export function some<T>(source: Iterable<T> | IterableIterator<T>, predicate: (item: T) => boolean): boolean {\n        for (const item of source) {\n            if (predicate(item)) return true;\n        }\n        return false;\n    }\n\n    export function* take<T>(source: Iterable<T> | IterableIterator<T>, count: number): Iterable<T> {\n        if (count > 0) {\n            let i = 0;\n            for (const item of source) {\n                yield item;\n                i++;\n                if (i >= count) break;\n            }\n        }\n    }\n\n    export function* union<T>(...sources: (Iterable<T> | IterableIterator<T>)[]): Iterable<T> {\n        for (const source of sources) {\n            for (const item of source) {\n                yield item;\n            }\n        }\n    }\n}\n","'use strict';\n\nexport namespace Versions {\n    declare type VersionComparisonResult = -1 | 0 | 1;\n\n    export interface Version {\n        major: number;\n        minor: number;\n        patch: number;\n        pre?: string;\n    }\n\n    export function compare(v1: Version, v2: Version): VersionComparisonResult {\n        if (v1.major > v2.major) return 1;\n        if (v1.major < v2.major) return -1;\n\n        if (v1.minor > v2.minor) return 1;\n        if (v1.minor < v2.minor) return -1;\n\n        if (v1.patch > v2.patch) return 1;\n        if (v1.patch < v2.patch) return -1;\n\n        if (v1.pre === undefined && v2.pre !== undefined) return 1;\n        if (v1.pre !== undefined && v2.pre === undefined) return -1;\n\n        if (v1.pre !== undefined && v2.pre !== undefined) {\n            return v1.pre.localeCompare(v2.pre) as VersionComparisonResult;\n        }\n\n        return 0;\n    }\n\n    export function from(\n        major: string | number,\n        minor: string | number,\n        patch: string | number,\n        pre?: string\n    ): Version {\n        return {\n            major: typeof major === 'string' ? parseInt(major, 10) : major,\n            minor: typeof minor === 'string' ? parseInt(minor, 10) : minor,\n            patch: typeof patch === 'string' ? parseInt(patch, 10) : patch,\n            pre: pre\n        };\n    }\n\n    export function fromString(version: string): Version {\n        const [ver, pre] = version.split('-');\n        const [major, minor, patch] = ver.split('.');\n        return from(major, minor, patch, pre);\n    }\n}\n","'use strict';\nimport { Iterables } from './iterable';\nimport { Strings } from './string';\n\n// Code stolen from https://github.com/Microsoft/vscode/blob/b3e6d5bb039a4a9362b52a2c8726267ca68cf64e/src/vs/base/common/map.ts#L352\n\nexport interface IKeyIterator {\n    reset(key: string): this;\n    next(): this;\n\n    hasNext(): boolean;\n    cmp(a: string): number;\n    value(): string;\n}\n\nexport class StringIterator implements IKeyIterator {\n    private _value: string = '';\n    private _pos: number = 0;\n\n    reset(key: string): this {\n        this._value = key;\n        this._pos = 0;\n        return this;\n    }\n\n    next(): this {\n        this._pos += 1;\n        return this;\n    }\n\n    hasNext(): boolean {\n        return this._pos < this._value.length - 1;\n    }\n\n    cmp(a: string): number {\n        const aCode = a.charCodeAt(0);\n        const thisCode = this._value.charCodeAt(this._pos);\n        return aCode - thisCode;\n    }\n\n    value(): string {\n        return this._value[this._pos];\n    }\n}\n\nexport class PathIterator implements IKeyIterator {\n    private _value!: string;\n    private _from!: number;\n    private _to!: number;\n\n    reset(key: string): this {\n        this._value = key.replace(/\\\\$|\\/$/, '');\n        this._from = 0;\n        this._to = 0;\n        return this.next();\n    }\n\n    hasNext(): boolean {\n        return this._to < this._value.length;\n    }\n\n    next(): this {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._value.length; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === Strings.CharCode.Slash || ch === Strings.CharCode.Backslash) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n\n    cmp(a: string): number {\n        let aPos = 0;\n        const aLen = a.length;\n        let thisPos = this._from;\n\n        while (aPos < aLen && thisPos < this._to) {\n            const cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\n            if (cmp !== 0) {\n                return cmp;\n            }\n            aPos += 1;\n            thisPos += 1;\n        }\n\n        if (aLen === this._to - this._from) {\n            return 0;\n        }\n        else if (aPos < aLen) {\n            return -1;\n        }\n        else {\n            return 1;\n        }\n    }\n\n    value(): string {\n        return this._value.substring(this._from, this._to);\n    }\n}\n\nclass TernarySearchTreeNode<E> {\n    segment!: string;\n    value: E | undefined;\n    key!: string;\n    left: TernarySearchTreeNode<E> | undefined;\n    mid: TernarySearchTreeNode<E> | undefined;\n    right: TernarySearchTreeNode<E> | undefined;\n\n    isEmpty(): boolean {\n        return !this.left && !this.mid && !this.right && !this.value;\n    }\n}\n\nexport class TernarySearchTree<E> {\n    static forPaths<E>(): TernarySearchTree<E> {\n        return new TernarySearchTree<E>(new PathIterator());\n    }\n\n    static forStrings<E>(): TernarySearchTree<E> {\n        return new TernarySearchTree<E>(new StringIterator());\n    }\n\n    private _iter: IKeyIterator;\n    private _root: TernarySearchTreeNode<E> | undefined;\n\n    constructor(segments: IKeyIterator) {\n        this._iter = segments;\n    }\n\n    clear(): void {\n        this._root = undefined;\n    }\n\n    set(key: string, element: E): E | undefined {\n        const iter = this._iter.reset(key);\n        let node: TernarySearchTreeNode<E>;\n\n        if (!this._root) {\n            this._root = new TernarySearchTreeNode<E>();\n            this._root.segment = iter.value();\n        }\n\n        node = this._root;\n        while (true) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                if (!node.left) {\n                    node.left = new TernarySearchTreeNode<E>();\n                    node.left.segment = iter.value();\n                }\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                if (!node.right) {\n                    node.right = new TernarySearchTreeNode<E>();\n                    node.right.segment = iter.value();\n                }\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                if (!node.mid) {\n                    node.mid = new TernarySearchTreeNode<E>();\n                    node.mid.segment = iter.value();\n                }\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        const oldElement = node.value;\n        node.value = element;\n        node.key = key;\n        return oldElement;\n    }\n\n    get(key: string): E | undefined {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node ? node.value : undefined;\n    }\n\n    delete(key: string): void {\n        const iter = this._iter.reset(key);\n        const stack: [-1 | 0 | 1, TernarySearchTreeNode<E>][] = [];\n        let node = this._root;\n\n        // find and unset node\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                stack.push([1, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                stack.push([-1, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                stack.push([0, node]);\n                node = node.mid;\n            }\n            else {\n                // remove element\n                node.value = undefined;\n\n                // clean up empty nodes\n                while (stack.length > 0 && node.isEmpty()) {\n                    const [dir, parent] = stack.pop()!;\n                    switch (dir) {\n                        case 1:\n                            parent.left = undefined;\n                            break;\n                        case 0:\n                            parent.mid = undefined;\n                            break;\n                        case -1:\n                            parent.right = undefined;\n                            break;\n                    }\n                    node = parent;\n                }\n                break;\n            }\n        }\n    }\n\n    findSubstr(key: string): E | undefined {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        let candidate: E | undefined;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                candidate = node.value || candidate;\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return (node && node.value) || candidate;\n    }\n\n    findSuperstr(key: string, limit: boolean = false): Iterable<E> | undefined {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                // collect\n                if (!node.mid) {\n                    return undefined;\n                }\n                else {\n                    node = node.mid;\n                    return {\n                        [Symbol.iterator]: () => this._nodeIterator(node!, limit)\n                    };\n                }\n            }\n        }\n        return undefined;\n    }\n\n    private _nodeIterator(node: TernarySearchTreeNode<E>, limit: boolean = false): Iterator<E> {\n        const res = {\n            done: false,\n            value: undefined! as E\n        };\n        let idx: number;\n        let data: E[];\n        const next = () => {\n            if (!data) {\n                // lazy till first invocation\n                data = [];\n                idx = 0;\n                this._forEach(node, value => data.push(value), limit);\n            }\n            if (idx >= data.length) {\n                res.done = true;\n                res.value = undefined!;\n            }\n            else {\n                res.done = false;\n                res.value = data[idx++];\n            }\n            return res;\n        };\n        return { next };\n    }\n\n    forEach(callback: (value: E, index: string) => any) {\n        this._forEach(this._root!, callback);\n    }\n\n    private _forEach(\n        node: TernarySearchTreeNode<E>,\n        callback: (value: E, index: string) => any,\n        limit: boolean = false\n    ) {\n        if (node === undefined) return;\n\n        // left\n        this._forEach(node.left!, callback, limit);\n\n        // node\n        if (node.value) {\n            callback(node.value, node.key);\n        }\n\n        if (!limit) {\n            // mid\n            this._forEach(node.mid!, callback, limit);\n        }\n\n        // right\n        this._forEach(node.right!, callback, limit);\n    }\n\n    any(): boolean {\n        return this._root !== undefined && !this._root.isEmpty();\n    }\n\n    count(predicate?: (entry: E) => boolean): number {\n        if (this._root === undefined || this._root.isEmpty()) return 0;\n\n        return Iterables.count(this.entries(), predicate === undefined ? undefined : ([e]) => predicate(e));\n    }\n\n    entries(): Iterable<[E, string]> {\n        return this._iterator(this._root!);\n    }\n\n    values(): Iterable<E> {\n        return Iterables.map(this.entries(), ([e]) => e);\n    }\n\n    highlander(): [E, string] | undefined {\n        if (this._root === undefined || this._root.isEmpty()) return undefined;\n\n        const entries = this.entries() as IterableIterator<[E, string]>;\n\n        let count = 0;\n        let next: IteratorResult<[E, string]>;\n        let value: [E, string] | undefined;\n\n        while (true) {\n            next = entries.next();\n            if (next.done) break;\n\n            value = next.value;\n\n            count++;\n            if (count > 1) return undefined;\n        }\n\n        return value;\n    }\n\n    some(predicate: (entry: E) => boolean): boolean {\n        if (this._root === undefined || this._root.isEmpty()) return false;\n\n        return Iterables.some(this.entries(), ([e]) => predicate(e));\n    }\n\n    private *_iterator(node: TernarySearchTreeNode<E> | undefined): IterableIterator<[E, string]> {\n        if (node !== undefined) {\n            // left\n            yield* this._iterator(node.left!);\n\n            // node\n            if (node.value) {\n                yield [node.value, node.key];\n            }\n\n            // mid\n            yield* this._iterator(node.mid!);\n\n            // right\n            yield* this._iterator(node.right!);\n        }\n    }\n}\n","'use strict';\nimport { ConfigurationChangeEvent, ExtensionContext, OutputChannel, Uri, window } from 'vscode';\nimport { configuration, LogLevel } from './configuration';\nimport { extensionOutputChannelName } from './constants';\nimport { getCorrelationContext } from './system';\n// import { Telemetry } from './telemetry';\n\nexport { LogLevel } from './configuration';\n\nconst ConsolePrefix = `[${extensionOutputChannelName}]`;\n\nconst isDebuggingRegex = /\\bgitlens\\b/i;\n\nexport interface LogCorrelationContext {\n    readonly correlationId?: number;\n    readonly prefix: string;\n    exitDetails?: string;\n}\n\nexport class Logger {\n    static level: LogLevel = LogLevel.Silent;\n    static output: OutputChannel | undefined;\n    static customLoggableFn: ((o: object) => string | undefined) | undefined;\n\n    static configure(context: ExtensionContext, loggableFn?: (o: any) => string | undefined) {\n        this.customLoggableFn = loggableFn;\n\n        context.subscriptions.push(configuration.onDidChange(this.onConfigurationChanged, this));\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    private static onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const section = configuration.name('outputLevel').value;\n        if (configuration.changed(e, section)) {\n            this.level = configuration.get<LogLevel>(section);\n\n            if (this.level === LogLevel.Silent) {\n                if (this.output !== undefined) {\n                    this.output.dispose();\n                    this.output = undefined;\n                }\n            }\n            else {\n                this.output = this.output || window.createOutputChannel(extensionOutputChannelName);\n            }\n        }\n    }\n\n    static debug(message: string, ...params: any[]): void;\n    static debug(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static debug(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level !== LogLevel.Debug && !Logger.isDebugging) return;\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.log(this.timestamp, ConsolePrefix, message || '', ...params);\n        }\n\n        if (this.output !== undefined && this.level === LogLevel.Debug) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(true, params)}`);\n        }\n    }\n\n    static error(ex: Error, message?: string, ...params: any[]): void;\n    static error(ex: Error, context?: LogCorrelationContext, message?: string, ...params: any[]): void;\n    static error(ex: Error, contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level === LogLevel.Silent && !Logger.isDebugging) return;\n\n        let message;\n        if (contextOrMessage === undefined || typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (message === undefined) {\n            const stack = ex.stack;\n            if (stack) {\n                const match = /.*\\s*?at\\s(.+?)\\s/.exec(stack);\n                if (match != null) {\n                    message = match[1];\n                }\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.error(this.timestamp, ConsolePrefix, message || '', ...params, ex);\n        }\n\n        if (this.output !== undefined && this.level !== LogLevel.Silent) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(false, params)}\\n${ex}`);\n        }\n\n        // Telemetry.trackException(ex);\n    }\n\n    static getCorrelationContext() {\n        return getCorrelationContext();\n    }\n\n    static log(message: string, ...params: any[]): void;\n    static log(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static log(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level !== LogLevel.Verbose && this.level !== LogLevel.Debug && !Logger.isDebugging) {\n            return;\n        }\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.log(this.timestamp, ConsolePrefix, message || '', ...params);\n        }\n\n        if (this.output !== undefined && (this.level === LogLevel.Verbose || this.level === LogLevel.Debug)) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(false, params)}`);\n        }\n    }\n\n    static logWithDebugParams(message: string, ...params: any[]): void;\n    static logWithDebugParams(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static logWithDebugParams(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level !== LogLevel.Verbose && this.level !== LogLevel.Debug && !Logger.isDebugging) {\n            return;\n        }\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.log(this.timestamp, ConsolePrefix, message || '', ...params);\n        }\n\n        if (this.output !== undefined && (this.level === LogLevel.Verbose || this.level === LogLevel.Debug)) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(true, params)}`);\n        }\n    }\n\n    static warn(message: string, ...params: any[]): void;\n    static warn(context: LogCorrelationContext | undefined, message: string, ...params: any[]): void;\n    static warn(contextOrMessage: LogCorrelationContext | string | undefined, ...params: any[]): void {\n        if (this.level === LogLevel.Silent && !Logger.isDebugging) return;\n\n        let message;\n        if (typeof contextOrMessage === 'string') {\n            message = contextOrMessage;\n        }\n        else {\n            message = params.shift();\n\n            if (contextOrMessage !== undefined) {\n                message = `${contextOrMessage.prefix} ${message || ''}`;\n            }\n        }\n\n        if (Logger.isDebugging) {\n            console.warn(this.timestamp, ConsolePrefix, message || '', ...params);\n        }\n\n        if (this.output !== undefined && this.level !== LogLevel.Silent) {\n            this.output.appendLine(`${this.timestamp} ${message || ''}${this.toLoggableParams(false, params)}`);\n        }\n    }\n\n    static showOutputChannel() {\n        if (this.output === undefined) return;\n\n        this.output.show();\n    }\n\n    static toLoggable(p: any, sanitize?: ((key: string, value: any) => any) | undefined) {\n        if (typeof p !== 'object') return String(p);\n        if (this.customLoggableFn !== undefined) {\n            const loggable = this.customLoggableFn(p);\n            if (loggable != null) return loggable;\n        }\n        if (p instanceof Uri) return `Uri(${p.toString(true)})`;\n\n        try {\n            return JSON.stringify(p, sanitize);\n        }\n        catch {\n            return `<error>`;\n        }\n    }\n\n    static toLoggableName(instance: Function | object) {\n        let name;\n        if (typeof instance === 'function') {\n            if (instance.prototype == null || instance.prototype.constructor == null) {\n                return instance.name;\n            }\n\n            name = instance.prototype.constructor.name;\n        }\n        else {\n            name = instance.constructor != null ? instance.constructor.name : '';\n        }\n\n        // Strip webpack module name (since I never name classes with an _)\n        const index = name.indexOf('_');\n        return index === -1 ? name : name.substr(index + 1);\n    }\n\n    private static get timestamp(): string {\n        const now = new Date();\n        return `[${now\n            .toISOString()\n            .replace(/T/, ' ')\n            .replace(/\\..+/, '')}:${('00' + now.getUTCMilliseconds()).slice(-3)}]`;\n    }\n\n    static gitOutput: OutputChannel | undefined;\n\n    static logGitCommand(command: string, ex?: Error): void {\n        if (this.level !== LogLevel.Debug) return;\n\n        if (this.gitOutput === undefined) {\n            this.gitOutput = window.createOutputChannel(`${extensionOutputChannelName} (Git)`);\n        }\n        this.gitOutput.appendLine(`${this.timestamp} ${command}${ex != null ? `\\n\\n${ex.toString()}` : ''}`);\n    }\n\n    private static toLoggableParams(debugOnly: boolean, params: any[]) {\n        if (params.length === 0 || (debugOnly && this.level !== LogLevel.Debug && !Logger.isDebugging)) {\n            return '';\n        }\n\n        const loggableParams = params.map(p => this.toLoggable(p)).join(', ');\n        return ` \\u2014 ${loggableParams}` || '';\n    }\n\n    private static _isDebugging: boolean | undefined;\n    static get isDebugging() {\n        if (this._isDebugging === undefined) {\n            const env = process.env;\n            this._isDebugging =\n                env && env.VSCODE_DEBUGGING_EXTENSION ? isDebuggingRegex.test(env.VSCODE_DEBUGGING_EXTENSION) : false;\n        }\n\n        return this._isDebugging;\n    }\n}\n","'use strict';\nimport {\n    DecorationOptions,\n    Disposable,\n    Range,\n    TextDocument,\n    TextEditor,\n    TextEditorDecorationType,\n    TextEditorSelectionChangeEvent,\n    Uri,\n    window\n} from 'vscode';\nimport { TextDocumentComparer } from '../comparers';\nimport { FileAnnotationType } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Functions } from '../system';\nimport { GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\n\nexport enum AnnotationStatus {\n    Computing = 'computing',\n    Computed = 'computed'\n}\n\nexport type TextEditorCorrelationKey = string;\n\nexport abstract class AnnotationProviderBase implements Disposable {\n    static getCorrelationKey(editor: TextEditor | undefined): TextEditorCorrelationKey {\n        return editor !== undefined ? (editor as any).id : '';\n    }\n\n    annotationType: FileAnnotationType | undefined;\n    correlationKey: TextEditorCorrelationKey;\n    document: TextDocument;\n    status: AnnotationStatus | undefined;\n\n    protected decorations: DecorationOptions[] | undefined;\n    protected disposable: Disposable;\n\n    constructor(\n        public editor: TextEditor,\n        protected readonly trackedDocument: TrackedDocument<GitDocumentState>,\n        protected decoration: TextEditorDecorationType,\n        protected highlightDecoration: TextEditorDecorationType | undefined\n    ) {\n        this.correlationKey = AnnotationProviderBase.getCorrelationKey(this.editor);\n        this.document = this.editor.document;\n\n        this.disposable = Disposable.from(\n            window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged, this)\n        );\n    }\n\n    dispose() {\n        this.clear();\n\n        this.disposable && this.disposable.dispose();\n    }\n\n    private async onTextEditorSelectionChanged(e: TextEditorSelectionChangeEvent) {\n        if (!TextDocumentComparer.equals(this.document, e.textEditor && e.textEditor.document)) return;\n\n        return this.selection(e.selections[0].active.line);\n    }\n\n    get editorId(): string {\n        if (this.editor === undefined || this.editor.document === undefined) return '';\n        return (this.editor as any).id;\n    }\n\n    get editorUri(): Uri | undefined {\n        if (this.editor === undefined || this.editor.document === undefined) return undefined;\n        return this.editor.document.uri;\n    }\n\n    protected additionalDecorations: { decoration: TextEditorDecorationType; ranges: Range[] }[] | undefined;\n\n    clear() {\n        this.status = undefined;\n        if (this.editor === undefined) return;\n\n        if (this.decoration !== undefined) {\n            try {\n                this.editor.setDecorations(this.decoration, []);\n            }\n            catch {}\n        }\n\n        if (this.additionalDecorations !== undefined && this.additionalDecorations.length > 0) {\n            for (const d of this.additionalDecorations) {\n                try {\n                    this.editor.setDecorations(d.decoration, []);\n                }\n                catch {}\n            }\n\n            this.additionalDecorations = undefined;\n        }\n\n        if (this.highlightDecoration !== undefined) {\n            try {\n                this.editor.setDecorations(this.highlightDecoration, []);\n            }\n            catch {}\n        }\n    }\n\n    private _resetDebounced:\n        | ((\n              changes?: {\n                  decoration: TextEditorDecorationType;\n                  highlightDecoration: TextEditorDecorationType | undefined;\n              }\n          ) => void)\n        | undefined;\n\n    reset(changes?: {\n        decoration: TextEditorDecorationType;\n        highlightDecoration: TextEditorDecorationType | undefined;\n    }) {\n        if (this._resetDebounced === undefined) {\n            this._resetDebounced = Functions.debounce(this.onReset, 250);\n        }\n\n        this._resetDebounced(changes);\n    }\n\n    async onReset(changes?: {\n        decoration: TextEditorDecorationType;\n        highlightDecoration: TextEditorDecorationType | undefined;\n    }) {\n        if (changes !== undefined) {\n            this.clear();\n\n            this.decoration = changes.decoration;\n            this.highlightDecoration = changes.highlightDecoration;\n        }\n\n        await this.provideAnnotation(this.editor === undefined ? undefined : this.editor.selection.active.line);\n    }\n\n    async restore(editor: TextEditor) {\n        // If the editor isn't disposed then we don't need to do anything\n        // Explicitly check for `false`\n        if ((this.editor as any)._disposed === false) return;\n\n        this.status = AnnotationStatus.Computing;\n        if (editor === window.activeTextEditor) {\n            await setCommandContext(CommandContext.AnnotationStatus, this.status);\n        }\n\n        this.editor = editor;\n        this.correlationKey = AnnotationProviderBase.getCorrelationKey(editor);\n        this.document = editor.document;\n\n        if (this.decorations !== undefined && this.decorations.length) {\n            this.editor.setDecorations(this.decoration, this.decorations);\n\n            if (this.additionalDecorations !== undefined && this.additionalDecorations.length) {\n                for (const d of this.additionalDecorations) {\n                    this.editor.setDecorations(d.decoration, d.ranges);\n                }\n            }\n        }\n\n        this.status = AnnotationStatus.Computed;\n        if (editor === window.activeTextEditor) {\n            await setCommandContext(CommandContext.AnnotationStatus, this.status);\n            await this.selection(editor.selection.active.line);\n        }\n    }\n\n    async provideAnnotation(shaOrLine?: string | number): Promise<boolean> {\n        this.status = AnnotationStatus.Computing;\n        if (await this.onProvideAnnotation(shaOrLine)) {\n            this.status = AnnotationStatus.Computed;\n            return true;\n        }\n\n        this.status = undefined;\n        return false;\n    }\n\n    abstract async onProvideAnnotation(shaOrLine?: string | number): Promise<boolean>;\n    abstract async selection(shaOrLine?: string | number): Promise<void>;\n    abstract async validate(): Promise<boolean>;\n}\n","'use strict';\nimport { commands, ConfigurationTarget, MessageItem, Uri, window } from 'vscode';\nimport { Commands } from './commands';\nimport { configuration } from './configuration';\nimport { BuiltInCommands, CommandContext, setCommandContext } from './constants';\nimport { GitCommit } from './git/gitService';\nimport { Logger } from './logger';\n\nexport enum SuppressedMessages {\n    CommitHasNoPreviousCommitWarning = 'suppressCommitHasNoPreviousCommitWarning',\n    CommitNotFoundWarning = 'suppressCommitNotFoundWarning',\n    FileNotUnderSourceControlWarning = 'suppressFileNotUnderSourceControlWarning',\n    GitDisabledWarning = 'suppressGitDisabledWarning',\n    GitVersionWarning = 'suppressGitVersionWarning',\n    LineUncommittedWarning = 'suppressLineUncommittedWarning',\n    NoRepositoryWarning = 'suppressNoRepositoryWarning',\n    SupportGitLensNotification = 'suppressSupportGitLensNotification'\n}\n\nexport class Messages {\n    static showCommitHasNoPreviousCommitWarningMessage(commit?: GitCommit): Promise<MessageItem | undefined> {\n        if (commit === undefined) {\n            return Messages.showMessage(\n                'info',\n                `Commit has no previous commit.`,\n                SuppressedMessages.CommitHasNoPreviousCommitWarning\n            );\n        }\n        return Messages.showMessage(\n            'info',\n            `Commit ${commit.shortSha} (${commit.author}, ${commit.formattedDate}) has no previous commit.`,\n            SuppressedMessages.CommitHasNoPreviousCommitWarning\n        );\n    }\n\n    static showCommitNotFoundWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. The commit could not be found.`,\n            SuppressedMessages.CommitNotFoundWarning\n        );\n    }\n\n    static async showGenericErrorMessage(message: string): Promise<MessageItem | undefined> {\n        const actions: MessageItem[] = [{ title: 'Open Output Channel' }];\n        const result = await Messages.showMessage(\n            'error',\n            `${message}. See output channel for more details`,\n            undefined,\n            null,\n            ...actions\n        );\n\n        if (result !== undefined) {\n            Logger.showOutputChannel();\n        }\n        return result;\n    }\n\n    static showFileNotUnderSourceControlWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. The file is probably not under source control.`,\n            SuppressedMessages.FileNotUnderSourceControlWarning\n        );\n    }\n\n    static showGitDisabledErrorMessage() {\n        return Messages.showMessage(\n            'error',\n            `GitLens requires Git to be enabled. Please re-enable Git \\u2014 set \\`git.enabled\\` to true and reload`,\n            SuppressedMessages.GitDisabledWarning\n        );\n    }\n\n    static showGitVersionUnsupportedErrorMessage(version: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'error',\n            `GitLens requires a newer version of Git (>= 2.2.0) than is currently installed (${version}). Please install a more recent version of Git.`,\n            SuppressedMessages.GitVersionWarning\n        );\n    }\n\n    static showLineUncommittedWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. The line has uncommitted changes.`,\n            SuppressedMessages.LineUncommittedWarning\n        );\n    }\n\n    static showNoRepositoryWarningMessage(message: string): Promise<MessageItem | undefined> {\n        return Messages.showMessage(\n            'warn',\n            `${message}. No repository could be found.`,\n            SuppressedMessages.NoRepositoryWarning\n        );\n    }\n\n    static async showSupportGitLensMessage() {\n        const actions: MessageItem[] = [\n            { title: 'Become a Sponsor' },\n            { title: 'Donate via PayPal' },\n            { title: 'Donate via Cash App' }\n        ];\n\n        const result = await Messages.showMessage(\n            'info',\n            `While GitLens is offered to everyone for free, if you find it useful, please consider [supporting](https://gitlens.amod.io/#support-gitlens) it. Thank you! ❤`,\n            undefined,\n            null,\n            ...actions\n        );\n\n        if (result != null) {\n            let uri;\n            if (result === actions[0]) {\n                uri = Uri.parse('https://www.patreon.com/eamodio');\n            }\n            else if (result === actions[1]) {\n                uri = Uri.parse('https://www.paypal.me/eamodio');\n            }\n            else if (result === actions[2]) {\n                uri = Uri.parse('https://cash.me/$eamodio');\n            }\n\n            if (uri !== undefined) {\n                await setCommandContext(CommandContext.ViewsHideSupportGitLens, true);\n                await this.suppressedMessage(SuppressedMessages.SupportGitLensNotification!);\n                await commands.executeCommand(BuiltInCommands.Open, uri);\n            }\n        }\n    }\n\n    static async showWhatsNewMessage(version: string) {\n        const actions: MessageItem[] = [{ title: \"What's New\" }, { title: 'Release Notes' }, { title: '❤' }];\n\n        const result = await Messages.showMessage(\n            'info',\n            `GitLens has been updated to v${version} — check out what's new!`,\n            undefined,\n            null,\n            ...actions\n        );\n\n        if (result != null) {\n            if (result === actions[0]) {\n                await commands.executeCommand(Commands.ShowWelcomePage);\n            }\n            else if (result === actions[1]) {\n                await commands.executeCommand(\n                    BuiltInCommands.Open,\n                    Uri.parse('https://github.com/eamodio/vscode-gitlens/blob/master/CHANGELOG.md')\n                );\n            }\n            else if (result === actions[2]) {\n                await commands.executeCommand(\n                    BuiltInCommands.Open,\n                    Uri.parse('https://gitlens.amod.io/#support-gitlens')\n                );\n            }\n        }\n    }\n\n    private static async showMessage<T extends MessageItem>(\n        type: 'info' | 'warn' | 'error',\n        message: string,\n        suppressionKey?: SuppressedMessages,\n        dontShowAgain: T | null = { title: \"Don't Show Again\" } as T,\n        ...actions: T[]\n    ): Promise<T | undefined> {\n        Logger.log(`ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain})`);\n\n        if (\n            suppressionKey !== undefined &&\n            configuration.get<boolean>(configuration.name('advanced')('messages')(suppressionKey).value)\n        ) {\n            Logger.log(`ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain}) skipped`);\n            return undefined;\n        }\n\n        if (suppressionKey !== undefined && dontShowAgain !== null) {\n            actions.push(dontShowAgain);\n        }\n\n        let result: T | undefined = undefined;\n        switch (type) {\n            case 'info':\n                result = await window.showInformationMessage(message, ...actions);\n                break;\n\n            case 'warn':\n                result = await window.showWarningMessage(message, ...actions);\n                break;\n\n            case 'error':\n                result = await window.showErrorMessage(message, ...actions);\n                break;\n        }\n\n        if ((suppressionKey !== undefined && dontShowAgain === null) || result === dontShowAgain) {\n            Logger.log(\n                `ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain}) don't show again requested`\n            );\n            await this.suppressedMessage(suppressionKey!);\n\n            if (result === dontShowAgain) return undefined;\n        }\n\n        Logger.log(\n            `ShowMessage(${type}, '${message}', ${suppressionKey}, ${dontShowAgain}) returned ${\n                result ? result.title : result\n            }`\n        );\n        return result;\n    }\n\n    private static suppressedMessage(suppressionKey: SuppressedMessages) {\n        const section = configuration.name('advanced')('messages').value;\n        const messages: { [key: string]: boolean | undefined } = configuration.get<{}>(section);\n\n        messages[suppressionKey] = true;\n\n        for (const [key, value] of Object.entries(messages)) {\n            if (value !== true) {\n                messages[key] = undefined;\n            }\n        }\n\n        return configuration.update(section, messages, ConfigurationTarget.Global);\n    }\n}\n","'use strict';\nimport { Disposable, Event, EventEmitter, TextDocument, TextEditor, Uri } from 'vscode';\nimport { CommandContext, getEditorIfActive, isActiveDocument, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { GitUri, Repository, RepositoryChange, RepositoryChangeEvent } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Functions } from '../system';\n\nexport interface DocumentBlameStateChangeEvent<T> {\n    readonly editor: TextEditor;\n    readonly document: TrackedDocument<T>;\n    readonly blameable: boolean;\n}\n\nexport class TrackedDocument<T> implements Disposable {\n    private _onDidBlameStateChange = new EventEmitter<DocumentBlameStateChangeEvent<T>>();\n    get onDidBlameStateChange(): Event<DocumentBlameStateChangeEvent<T>> {\n        return this._onDidBlameStateChange.event;\n    }\n\n    state: T | undefined;\n\n    private _disposable: Disposable | undefined;\n    private _disposed: boolean = false;\n    private _repo: Promise<Repository | undefined>;\n    private _uri!: GitUri;\n\n    constructor(\n        private readonly _document: TextDocument,\n        public readonly key: string,\n        public dirty: boolean,\n        private _eventDelegates: { onDidBlameStateChange(e: DocumentBlameStateChangeEvent<T>): void }\n    ) {\n        this._repo = this.initialize(_document.uri);\n    }\n\n    dispose() {\n        this._disposed = true;\n        this.reset('dispose');\n        this._disposable && this._disposable.dispose();\n    }\n\n    private async initialize(uri: Uri): Promise<Repository | undefined> {\n        // Since there is a bit of a chicken & egg problem with the DocumentTracker and the GitService, wait for the GitService to load if it isn't\n        if (Container.git === undefined) {\n            if (!(await Functions.waitUntil(() => Container.git !== undefined, 2000))) {\n                Logger.log(\n                    `TrackedDocument.initialize(${uri.toString(true)})`,\n                    'Timed out waiting for the GitService to start'\n                );\n                throw new Error('TrackedDocument timed out waiting for the GitService to start');\n            }\n        }\n\n        this._uri = await GitUri.fromUri(uri);\n        if (this._disposed) return undefined;\n\n        const repo = await Container.git.getRepository(this._uri);\n        if (this._disposed) return undefined;\n\n        if (repo !== undefined) {\n            this._disposable = repo.onDidChange(this.onRepositoryChanged, this);\n        }\n\n        await this.update({ initializing: true, repo: repo });\n\n        return repo;\n    }\n\n    private onRepositoryChanged(e: RepositoryChangeEvent) {\n        if (!e.changed(RepositoryChange.Repository)) return;\n\n        // Reset any cached state\n        this.reset('repository');\n        void this.update();\n    }\n\n    private _forceDirtyStateChangeOnNextDocumentChange: boolean = false;\n    get forceDirtyStateChangeOnNextDocumentChange() {\n        return this._forceDirtyStateChangeOnNextDocumentChange;\n    }\n\n    private _hasRemotes: boolean = false;\n    get hasRemotes() {\n        return this._hasRemotes;\n    }\n\n    get isBlameable() {\n        if (this._blameFailed) return false;\n\n        return this._isTracked;\n    }\n\n    private _isDirtyIdle: boolean = false;\n    get isDirtyIdle() {\n        return this._isDirtyIdle;\n    }\n    set isDirtyIdle(value: boolean) {\n        this._isDirtyIdle = value;\n    }\n\n    get isRevision() {\n        return this._uri !== undefined ? Boolean(this._uri.sha) : false;\n    }\n\n    private _isTracked: boolean = false;\n    get isTracked() {\n        return this._isTracked;\n    }\n\n    get lineCount(): number {\n        return this._document.lineCount;\n    }\n\n    get uri() {\n        return this._uri;\n    }\n\n    activate() {\n        setCommandContext(CommandContext.ActiveFileStatus, this.getStatus());\n    }\n\n    async ensureInitialized() {\n        await this._repo;\n    }\n\n    is(document: TextDocument) {\n        return document === this._document;\n    }\n\n    reset(reason: 'config' | 'dispose' | 'document' | 'repository') {\n        this._blameFailed = false;\n        this._isDirtyIdle = false;\n\n        if (this.state === undefined) return;\n\n        // // Don't remove broken blame on change (since otherwise we'll have to run the broken blame again)\n        // if (!this.state.hasErrors) {\n\n        this.state = undefined;\n        Logger.log(`Reset state for '${this.key}', reason=${reason}`);\n\n        // }\n    }\n\n    private _blameFailed: boolean = false;\n    setBlameFailure() {\n        const wasBlameable = this.isBlameable;\n\n        this._blameFailed = true;\n\n        if (wasBlameable && isActiveDocument(this._document)) {\n            void this.update({ forceBlameChange: true });\n        }\n    }\n\n    resetForceDirtyStateChangeOnNextDocumentChange() {\n        this._forceDirtyStateChangeOnNextDocumentChange = false;\n    }\n\n    setForceDirtyStateChangeOnNextDocumentChange() {\n        this._forceDirtyStateChangeOnNextDocumentChange = true;\n    }\n\n    async update(options: { forceBlameChange?: boolean; initializing?: boolean; repo?: Repository } = {}) {\n        if (this._disposed || this._uri === undefined) {\n            this._hasRemotes = false;\n            this._isTracked = false;\n\n            return;\n        }\n\n        this._isDirtyIdle = false;\n\n        const active = getEditorIfActive(this._document);\n        const wasBlameable = options.forceBlameChange ? undefined : this.isBlameable;\n\n        this._isTracked = await Container.git.isTracked(this._uri);\n\n        let repo = undefined;\n        if (this._isTracked) {\n            repo = options.repo;\n            if (repo === undefined) {\n                repo = await this._repo;\n            }\n        }\n\n        if (repo !== undefined) {\n            this._hasRemotes = await repo.hasRemotes();\n        }\n        else {\n            this._hasRemotes = false;\n        }\n\n        if (active !== undefined) {\n            const blameable = this.isBlameable;\n\n            setCommandContext(CommandContext.ActiveFileStatus, this.getStatus());\n\n            if (!options.initializing && wasBlameable !== blameable) {\n                const e = { editor: active, document: this, blameable: blameable } as DocumentBlameStateChangeEvent<T>;\n                this._onDidBlameStateChange.fire(e);\n                this._eventDelegates.onDidBlameStateChange(e);\n            }\n        }\n    }\n\n    private getStatus() {\n        let status = '';\n        if (this.isTracked) {\n            status += 'tracked|';\n        }\n        if (this.isBlameable) {\n            status += 'blameable|';\n        }\n        if (this.isRevision) {\n            status += 'revision|';\n        }\n        if (this.hasRemotes) {\n            status += 'remotes|';\n        }\n\n        return status ? status : undefined;\n    }\n}\n","'use strict';\nimport {\n    ConfigurationChangeEvent,\n    Disposable,\n    EndOfLine,\n    Event,\n    EventEmitter,\n    Position,\n    Range,\n    TextDocument,\n    TextDocumentChangeEvent,\n    TextEditor,\n    TextLine,\n    Uri,\n    window,\n    workspace\n} from 'vscode';\nimport { configuration } from '../configuration';\nimport { CommandContext, DocumentSchemes, isActiveDocument, isTextEditor, setCommandContext } from '../constants';\nimport { GitUri } from '../git/gitService';\nimport { Functions, IDeferrable } from '../system';\nimport { DocumentBlameStateChangeEvent, TrackedDocument } from './trackedDocument';\n\nexport * from './trackedDocument';\n\nexport interface DocumentDirtyStateChangeEvent<T> {\n    readonly editor: TextEditor;\n    readonly document: TrackedDocument<T>;\n    readonly dirty: boolean;\n}\n\nexport interface DocumentDirtyIdleTriggerEvent<T> {\n    readonly editor: TextEditor;\n    readonly document: TrackedDocument<T>;\n}\n\nexport class DocumentTracker<T> implements Disposable {\n    private _onDidChangeBlameState = new EventEmitter<DocumentBlameStateChangeEvent<T>>();\n    get onDidChangeBlameState(): Event<DocumentBlameStateChangeEvent<T>> {\n        return this._onDidChangeBlameState.event;\n    }\n\n    private _onDidChangeDirtyState = new EventEmitter<DocumentDirtyStateChangeEvent<T>>();\n    get onDidChangeDirtyState(): Event<DocumentDirtyStateChangeEvent<T>> {\n        return this._onDidChangeDirtyState.event;\n    }\n\n    private _onDidTriggerDirtyIdle = new EventEmitter<DocumentDirtyIdleTriggerEvent<T>>();\n    get onDidTriggerDirtyIdle(): Event<DocumentDirtyIdleTriggerEvent<T>> {\n        return this._onDidTriggerDirtyIdle.event;\n    }\n\n    private _dirtyIdleTriggerDelay!: number;\n    private readonly _disposable: Disposable | undefined;\n    private readonly _documentMap: Map<TextDocument | string, TrackedDocument<T>> = new Map();\n\n    constructor() {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            window.onDidChangeActiveTextEditor(this.onActiveTextEditorChanged, this),\n            // window.onDidChangeVisibleTextEditors(Functions.debounce(this.onVisibleEditorsChanged, 5000), this),\n            workspace.onDidChangeTextDocument(Functions.debounce(this.onTextDocumentChanged, 50), this),\n            workspace.onDidCloseTextDocument(this.onTextDocumentClosed, this),\n            workspace.onDidSaveTextDocument(this.onTextDocumentSaved, this)\n        );\n\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n\n        this.clear();\n    }\n\n    initialize() {\n        this.onActiveTextEditorChanged(window.activeTextEditor);\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        // Only rest the cached state if we aren't initializing\n        if (\n            !configuration.initializing(e) &&\n            (configuration.changed(e, configuration.name('blame')('ignoreWhitespace').value, null) ||\n                configuration.changed(e, configuration.name('advanced')('caching')('enabled').value))\n        ) {\n            for (const d of this._documentMap.values()) {\n                d.reset('config');\n            }\n        }\n\n        const section = configuration.name('advanced')('blame')('delayAfterEdit').value;\n        if (configuration.changed(e, section)) {\n            this._dirtyIdleTriggerDelay = configuration.get<number>(section);\n            this._dirtyIdleTriggeredDebounced = undefined;\n        }\n    }\n\n    private _timer: NodeJS.Timer | undefined;\n    private onActiveTextEditorChanged(editor: TextEditor | undefined) {\n        if (editor !== undefined && !isTextEditor(editor)) return;\n\n        if (this._timer !== undefined) {\n            clearTimeout(this._timer);\n            this._timer = undefined;\n        }\n\n        if (editor === undefined) {\n            this._timer = setTimeout(() => {\n                this._timer = undefined;\n\n                setCommandContext(CommandContext.ActiveFileStatus, undefined);\n            }, 250);\n\n            return;\n        }\n\n        const doc = this._documentMap.get(editor.document);\n        if (doc !== undefined) {\n            doc.activate();\n\n            return;\n        }\n\n        // No need to activate this, as it is implicit in initialization if currently active\n        this.addCore(editor.document);\n    }\n\n    private onTextDocumentChanged(e: TextDocumentChangeEvent) {\n        const { scheme } = e.document.uri;\n        if (scheme !== DocumentSchemes.File && scheme !== DocumentSchemes.Vsls) return;\n\n        let doc = this._documentMap.get(e.document);\n        if (doc === undefined) {\n            doc = this.addCore(e.document);\n        }\n\n        doc.reset('document');\n\n        const dirty = e.document.isDirty;\n        const editor = window.activeTextEditor;\n\n        // If we have an idle tracker, either reset or cancel it\n        if (this._dirtyIdleTriggeredDebounced !== undefined) {\n            if (dirty) {\n                this._dirtyIdleTriggeredDebounced({ editor: editor!, document: doc });\n            }\n            else {\n                this._dirtyIdleTriggeredDebounced.cancel();\n            }\n        }\n\n        if (!doc.forceDirtyStateChangeOnNextDocumentChange && doc.dirty === dirty) return;\n\n        doc.resetForceDirtyStateChangeOnNextDocumentChange();\n        doc.dirty = dirty;\n\n        // Only fire state change events for the active document\n        if (editor === undefined || editor.document !== e.document) return;\n\n        this.fireDocumentDirtyStateChanged({ editor: editor, document: doc, dirty: doc.dirty });\n    }\n\n    private onTextDocumentClosed(document: TextDocument) {\n        const doc = this._documentMap.get(document);\n        if (doc === undefined) return;\n\n        doc.dispose();\n        this._documentMap.delete(document);\n        this._documentMap.delete(doc.key);\n    }\n\n    private onTextDocumentSaved(document: TextDocument) {\n        const doc = this._documentMap.get(document);\n        if (doc !== undefined) {\n            void doc.update({ forceBlameChange: true });\n\n            return;\n        }\n\n        // If we are saving the active document make sure we are tracking it\n        if (isActiveDocument(document)) {\n            void this.addCore(document);\n        }\n    }\n\n    // private onVisibleEditorsChanged(editors: TextEditor[]) {\n    //     if (this._documentMap.size === 0) return;\n\n    //     // If we have no visible editors, or no \"real\" visible editors reset our cache\n    //     if (editors.length === 0 || editors.every(e => !isTextEditor(e))) {\n    //         this.clear();\n    //     }\n    // }\n\n    add(document: TextDocument): Promise<TrackedDocument<T>>;\n    add(uri: Uri): Promise<TrackedDocument<T>>;\n    add(documentOrId: TextDocument | Uri): Promise<TrackedDocument<T>> {\n        return this._add(documentOrId);\n    }\n\n    clear() {\n        for (const d of this._documentMap.values()) {\n            d.dispose();\n        }\n\n        this._documentMap.clear();\n    }\n\n    get(fileName: string): Promise<TrackedDocument<T> | undefined>;\n    get(document: TextDocument): Promise<TrackedDocument<T> | undefined>;\n    get(uri: Uri): Promise<TrackedDocument<T> | undefined>;\n    get(documentOrId: string | TextDocument | Uri): Promise<TrackedDocument<T> | undefined> {\n        return this._get(documentOrId);\n    }\n\n    async getOrAdd(document: TextDocument): Promise<TrackedDocument<T>>;\n    async getOrAdd(uri: Uri): Promise<TrackedDocument<T>>;\n    async getOrAdd(documentOrId: TextDocument | Uri): Promise<TrackedDocument<T>> {\n        let doc = await this._get(documentOrId);\n        if (doc === undefined) {\n            doc = await this._add(documentOrId);\n        }\n        return doc;\n    }\n\n    has(fileName: string): boolean;\n    has(document: TextDocument): boolean;\n    has(uri: Uri): boolean;\n    has(key: string | TextDocument | Uri): boolean {\n        if (typeof key === 'string' || key instanceof Uri) {\n            key = GitUri.toKey(key);\n        }\n        return this._documentMap.has(key);\n    }\n\n    private async _add(documentOrId: TextDocument | Uri): Promise<TrackedDocument<T>> {\n        if (documentOrId instanceof GitUri) {\n            try {\n                documentOrId = await workspace.openTextDocument(documentOrId.documentUri({ useVersionedPath: true }));\n            }\n            catch (ex) {\n                const msg = ex.toString();\n                if (msg.includes('File seems to be binary and cannot be opened as text')) {\n                    documentOrId = new BinaryTextDocument(documentOrId);\n                }\n                else if (msg.includes('File not found')) {\n                    // If we can't find the file, assume it is because the file has been renamed or deleted at some point\n                    documentOrId = new MissingRevisionTextDocument(documentOrId);\n\n                    // const [fileName, repoPath] = await Container.git.findWorkingFileName(documentOrId, undefined, ref);\n                    // if (fileName === undefined) throw new Error(`Failed to add tracking for document: ${documentOrId}`);\n\n                    // documentOrId = await workspace.openTextDocument(path.resolve(repoPath!, fileName));\n                }\n                else {\n                    throw ex;\n                }\n            }\n        }\n        else if (documentOrId instanceof Uri) {\n            documentOrId = await workspace.openTextDocument(documentOrId);\n        }\n\n        const doc = await this.addCore(documentOrId);\n        await doc.ensureInitialized();\n\n        return doc;\n    }\n\n    private async _get(documentOrId: string | TextDocument | Uri) {\n        if (documentOrId instanceof GitUri) {\n            documentOrId = GitUri.toKey(documentOrId.documentUri({ useVersionedPath: true }));\n        }\n        else if (typeof documentOrId === 'string' || documentOrId instanceof Uri) {\n            documentOrId = GitUri.toKey(documentOrId);\n        }\n\n        const doc = this._documentMap.get(documentOrId);\n        if (doc === undefined) return undefined;\n\n        await doc.ensureInitialized();\n        return doc;\n    }\n\n    private addCore(document: TextDocument): TrackedDocument<T> {\n        const key = GitUri.toKey(document.uri);\n\n        // Always start out false, so we will fire the event if needed\n        const doc = new TrackedDocument<T>(document, key, false, {\n            onDidBlameStateChange: (e: DocumentBlameStateChangeEvent<T>) => this._onDidChangeBlameState.fire(e)\n        });\n        this._documentMap.set(document, doc);\n        this._documentMap.set(key, doc);\n\n        return doc;\n    }\n\n    private _dirtyIdleTriggeredDebounced: (((e: DocumentDirtyIdleTriggerEvent<T>) => void) & IDeferrable) | undefined;\n    private _dirtyStateChangedDebounced: (((e: DocumentDirtyStateChangeEvent<T>) => void) & IDeferrable) | undefined;\n    private fireDocumentDirtyStateChanged(e: DocumentDirtyStateChangeEvent<T>) {\n        if (e.dirty) {\n            setImmediate(async () => {\n                if (this._dirtyStateChangedDebounced !== undefined) {\n                    this._dirtyStateChangedDebounced.cancel();\n                }\n\n                if (window.activeTextEditor !== e.editor) return;\n\n                await e.document.ensureInitialized();\n                this._onDidChangeDirtyState.fire(e);\n            });\n\n            if (this._dirtyIdleTriggerDelay > 0) {\n                if (this._dirtyIdleTriggeredDebounced === undefined) {\n                    this._dirtyIdleTriggeredDebounced = Functions.debounce(\n                        async (e: DocumentDirtyIdleTriggerEvent<T>) => {\n                            if (\n                                this._dirtyIdleTriggeredDebounced !== undefined &&\n                                this._dirtyIdleTriggeredDebounced.pending!()\n                            ) {\n                                return;\n                            }\n\n                            await e.document.ensureInitialized();\n\n                            e.document.isDirtyIdle = true;\n                            this._onDidTriggerDirtyIdle.fire(e);\n                        },\n                        this._dirtyIdleTriggerDelay,\n                        { track: true }\n                    );\n                }\n\n                this._dirtyIdleTriggeredDebounced({ editor: e.editor, document: e.document });\n            }\n\n            return;\n        }\n\n        if (this._dirtyStateChangedDebounced === undefined) {\n            this._dirtyStateChangedDebounced = Functions.debounce(async (e: DocumentDirtyStateChangeEvent<T>) => {\n                if (window.activeTextEditor !== e.editor) return;\n\n                await e.document.ensureInitialized();\n                this._onDidChangeDirtyState.fire(e);\n            }, 250);\n        }\n\n        this._dirtyStateChangedDebounced(e);\n    }\n}\n\nclass EmptyTextDocument implements TextDocument {\n    readonly eol: EndOfLine;\n    readonly fileName: string;\n    readonly isClosed: boolean;\n    readonly isDirty: boolean;\n    readonly isUntitled: boolean;\n    readonly languageId: string;\n    readonly lineCount: number;\n    readonly uri: Uri;\n    readonly version: number;\n\n    constructor(\n        public readonly gitUri: GitUri\n    ) {\n        this.uri = gitUri.documentUri({ useVersionedPath: true });\n\n        this.eol = EndOfLine.LF;\n        this.fileName = this.uri.fsPath;\n        this.isClosed = false;\n        this.isDirty = false;\n        this.isUntitled = false;\n        this.languageId = '';\n        this.lineCount = 0;\n        this.version = 0;\n    }\n\n    getText(range?: Range | undefined): string {\n        throw new Error('Method not supported.');\n    }\n\n    getWordRangeAtPosition(position: Position, regex?: RegExp | undefined): Range | undefined {\n        throw new Error('Method not supported.');\n    }\n\n    lineAt(line: number): TextLine;\n    lineAt(position: Position): TextLine;\n    lineAt(position: any): TextLine {\n        throw new Error('Method not supported.');\n    }\n\n    offsetAt(position: Position): number {\n        throw new Error('Method not supported.');\n    }\n\n    positionAt(offset: number): Position {\n        throw new Error('Method not supported.');\n    }\n\n    save(): Thenable<boolean> {\n        throw new Error('Method not supported.');\n    }\n\n    validatePosition(position: Position): Position {\n        throw new Error('Method not supported.');\n    }\n\n    validateRange(range: Range): Range {\n        throw new Error('Method not supported.');\n    }\n}\n\nclass BinaryTextDocument extends EmptyTextDocument {}\nclass MissingRevisionTextDocument extends EmptyTextDocument {}\n","'use strict';\nimport { GitBlame, GitDiff, GitLog } from '../git/git';\nimport { DocumentTracker } from './documentTracker';\n\nexport * from './documentTracker';\n\ninterface CachedItem<T> {\n    item: Promise<T>;\n    errorMessage?: string;\n}\n\nexport type CachedBlame = CachedItem<GitBlame>;\nexport type CachedDiff = CachedItem<GitDiff>;\nexport type CachedLog = CachedItem<GitLog>;\n\nexport class GitDocumentState {\n    private cache: Map<string, CachedBlame | CachedDiff | CachedLog> = new Map();\n\n    constructor(\n        public readonly key: string\n    ) {}\n\n    get<T extends CachedBlame | CachedDiff | CachedLog>(key: string): T | undefined {\n        return this.cache.get(key) as T;\n    }\n\n    set<T extends CachedBlame | CachedDiff | CachedLog>(key: string, value: T) {\n        this.cache.set(key, value);\n    }\n}\n\nexport class GitDocumentTracker extends DocumentTracker<GitDocumentState> {}\n","'use strict';\nimport { execFile } from 'child_process';\nimport * as fs from 'fs';\nimport * as iconv from 'iconv-lite';\nimport * as paths from 'path';\nimport { Logger } from '../logger';\n\nconst isWindows = process.platform === 'win32';\n\n/**\n * Search PATH to see if a file exists in any of the path folders.\n *\n * @param  {string} exe The file to search for\n * @return {string}     A fully qualified path, or the original path if nothing\n *                      is found\n *\n * @private\n */\nfunction runDownPath(exe: string): string {\n    // NB: Windows won't search PATH looking for executables in spawn like\n    // Posix does\n\n    // Files with any directory path don't get this applied\n    if (exe.match(/[\\\\\\/]/)) return exe;\n\n    const target = paths.join('.', exe);\n    try {\n        if (fs.statSync(target)) return target;\n    }\n    catch {}\n\n    const haystack = process.env.PATH!.split(isWindows ? ';' : ':');\n    for (const p of haystack) {\n        const needle = paths.join(p, exe);\n        try {\n            if (fs.statSync(needle)) return needle;\n        }\n        catch {}\n    }\n\n    return exe;\n}\n\n/**\n * Finds the executable and parameters to run on Windows. This method\n * mimics the POSIX behavior of being able to run scripts as executables by\n * replacing the passed-in executable with the script runner, for PowerShell,\n * CMD, and node scripts.\n *\n * This method also does the work of running down PATH, which spawn on Windows\n * also doesn't do, unlike on POSIX.\n */\nexport function findExecutable(exe: string, args: string[]): { cmd: string; args: string[] } {\n    // POSIX can just execute scripts directly, no need for silly goosery\n    if (!isWindows) return { cmd: runDownPath(exe), args: args };\n\n    if (!fs.existsSync(exe)) {\n        // NB: When you write something like `surf-client ... -- surf-build` on Windows,\n        // a shell would normally convert that to surf-build.cmd, but since it's passed\n        // in as an argument, it doesn't happen\n        const possibleExts = ['.exe', '.bat', '.cmd', '.ps1'];\n        for (const ext of possibleExts) {\n            const possibleFullPath = runDownPath(`${exe}${ext}`);\n\n            if (fs.existsSync(possibleFullPath)) return findExecutable(possibleFullPath, args);\n        }\n    }\n\n    if (exe.match(/\\.ps1$/i)) {\n        const cmd = paths.join(process.env.SYSTEMROOT!, 'System32', 'WindowsPowerShell', 'v1.0', 'PowerShell.exe');\n        const psargs = ['-ExecutionPolicy', 'Unrestricted', '-NoLogo', '-NonInteractive', '-File', exe];\n\n        return { cmd: cmd, args: psargs.concat(args) };\n    }\n\n    if (exe.match(/\\.(bat|cmd)$/i)) {\n        const cmd = paths.join(process.env.SYSTEMROOT!, 'System32', 'cmd.exe');\n        const cmdArgs = ['/C', exe, ...args];\n\n        return { cmd: cmd, args: cmdArgs };\n    }\n\n    if (exe.match(/\\.(js)$/i)) {\n        const cmd = process.execPath;\n        const nodeArgs = [exe];\n\n        return { cmd: cmd, args: nodeArgs.concat(args) };\n    }\n\n    return { cmd: exe, args: args };\n}\n\nexport class RunError extends Error {\n    constructor(\n        public readonly exitCode: number,\n        ...args: any[]\n    ) {\n        super(...args);\n\n        Error.captureStackTrace(this, RunError);\n    }\n}\n\nexport interface RunOptions {\n    cwd?: string;\n    readonly env?: Object;\n    readonly encoding?: BufferEncoding | 'buffer';\n    /**\n     * The size the output buffer to allocate to the spawned process. Set this\n     * if you are anticipating a large amount of output.\n     *\n     * If not specified, this will be 10MB (10485760 bytes) which should be\n     * enough for most Git operations.\n     */\n    readonly maxBuffer?: number;\n    /**\n     * An optional string or buffer which will be written to\n     * the child process stdin stream immediately immediately\n     * after spawning the process.\n     */\n    readonly stdin?: string | Buffer;\n    /**\n     * The encoding to use when writing to stdin, if the stdin\n     * parameter is a string.\n     */\n    readonly stdinEncoding?: string;\n}\n\nexport function run<TOut extends string | Buffer>(\n    command: string,\n    args: any[],\n    encoding: BufferEncoding | 'buffer',\n    options: RunOptions = {}\n): Promise<TOut> {\n    const { stdin, stdinEncoding, ...opts } = { maxBuffer: 100 * 1024 * 1024, ...options } as RunOptions;\n\n    return new Promise<TOut>((resolve, reject) => {\n        const proc = execFile(\n            command,\n            args,\n            opts,\n            (err: (Error & { code?: string | number }) | null, stdout, stderr) => {\n                if (err != null) {\n                    reject(\n                        new RunError(\n                            err.code ? Number(err.code) : 0,\n                            err.message === 'stdout maxBuffer exceeded'\n                                ? `Command output exceeded the allocated stdout buffer. Set 'options.maxBuffer' to a larger value than ${\n                                      opts.maxBuffer\n                                  } bytes`\n                                : stderr || stdout\n                        )\n                    );\n\n                    return;\n                }\n\n                if (stderr) {\n                    Logger.warn(`Warning(${command} ${args.join(' ')}): ${stderr}`);\n                }\n\n                resolve(\n                    encoding === 'utf8' || encoding === 'binary' || encoding === 'buffer'\n                        ? (stdout as TOut)\n                        : (iconv.decode(Buffer.from(stdout, 'binary'), encoding) as TOut)\n                );\n            }\n        );\n\n        if (stdin) {\n            proc.stdin.end(stdin, stdinEncoding || 'utf8');\n        }\n    });\n}\n","'use strict';\nimport * as paths from 'path';\nimport { findExecutable, run } from './shell';\n\nexport interface GitLocation {\n    path: string;\n    version: string;\n}\n\nfunction parseVersion(raw: string): string {\n    return raw.replace(/^git version /, '');\n}\n\nasync function findSpecificGit(path: string): Promise<GitLocation> {\n    const version = await run<string>(path, ['--version'], 'utf8');\n    // If needed, let's update our path to avoid the search on every command\n    if (!path || path === 'git') {\n        path = findExecutable(path, ['--version']).cmd;\n    }\n\n    return {\n        path,\n        version: parseVersion(version.trim())\n    };\n}\n\nasync function findGitDarwin(): Promise<GitLocation> {\n    try {\n        let path = await run<string>('which', ['git'], 'utf8');\n        path = path.replace(/^\\s+|\\s+$/g, '');\n\n        if (path !== '/usr/bin/git') {\n            return findSpecificGit(path);\n        }\n\n        try {\n            await run<string>('xcode-select', ['-p'], 'utf8');\n            return findSpecificGit(path);\n        }\n        catch (ex) {\n            if (ex.code === 2) {\n                return Promise.reject(new Error('Unable to find git'));\n            }\n            return findSpecificGit(path);\n        }\n    }\n    catch (ex) {\n        return Promise.reject(new Error('Unable to find git'));\n    }\n}\n\nfunction findSystemGitWin32(basePath: string): Promise<GitLocation> {\n    if (!basePath) return Promise.reject(new Error('Unable to find git'));\n    return findSpecificGit(paths.join(basePath, 'Git', 'cmd', 'git.exe'));\n}\n\nfunction findGitWin32(): Promise<GitLocation> {\n    return findSystemGitWin32(process.env['ProgramW6432']!)\n        .then(null, () => findSystemGitWin32(process.env['ProgramFiles(x86)']!))\n        .then(null, () => findSystemGitWin32(process.env['ProgramFiles']!))\n        .then(null, () => findSpecificGit('git'));\n}\n\nexport async function findGitPath(path?: string): Promise<GitLocation> {\n    try {\n        return await findSpecificGit(path || 'git');\n    }\n    catch (ex) {\n        try {\n            switch (process.platform) {\n                case 'darwin':\n                    return await findGitDarwin();\n                case 'win32':\n                    return await findGitWin32();\n                default:\n                    return Promise.reject('Unable to find git');\n            }\n        }\n        catch (ex) {\n            return Promise.reject(new Error('Unable to find git'));\n        }\n    }\n}\n","'use strict';\nimport { Strings } from '../../system';\n\nexport interface IFormatOptions {\n    dateFormat?: string | null;\n    tokenOptions?: { [id: string]: Strings.ITokenOptions | undefined };\n}\n\ntype Constructor<T = {}> = new (...args: any[]) => T;\n\nconst spaceReplacementRegex = / /g;\n\nexport abstract class Formatter<TItem = any, TOptions extends IFormatOptions = IFormatOptions> {\n    protected _item!: TItem;\n    protected _options!: TOptions;\n\n    constructor(item: TItem, options?: TOptions) {\n        this.reset(item, options);\n    }\n\n    reset(item: TItem, options?: TOptions) {\n        this._item = item;\n\n        if (options === undefined && this._options !== undefined) return;\n\n        if (options === undefined) {\n            options = {} as TOptions;\n        }\n\n        if (options.dateFormat == null) {\n            options.dateFormat = 'MMMM Do, YYYY h:mma';\n        }\n\n        if (options.tokenOptions == null) {\n            options.tokenOptions = {};\n        }\n\n        this._options = options;\n    }\n\n    private collapsableWhitespace: number = 0;\n\n    protected _padOrTruncate(s: string, options: Strings.ITokenOptions | undefined) {\n        if (s == null || s.length === 0) return s;\n\n        // NOTE: the collapsable whitespace logic relies on the javascript template evaluation to be left to right\n        if (options === undefined) {\n            options = {\n                collapseWhitespace: false,\n                padDirection: 'left',\n                prefix: undefined,\n                suffix: undefined,\n                truncateTo: undefined\n            };\n        }\n\n        let max = options.truncateTo;\n        if (max === undefined) {\n            this.collapsableWhitespace = 0;\n        }\n        else {\n            max += this.collapsableWhitespace;\n            this.collapsableWhitespace = 0;\n\n            const width = Strings.getWidth(s);\n            const diff = max - width;\n            if (diff > 0) {\n                if (options.collapseWhitespace) {\n                    this.collapsableWhitespace = diff;\n                }\n\n                if (options.padDirection === 'left') {\n                    s = Strings.padLeft(s, max, undefined, width);\n                }\n                else {\n                    if (options.collapseWhitespace) {\n                        max -= diff;\n                    }\n                    s = Strings.padRight(s, max, undefined, width);\n                }\n            }\n            else if (diff < 0) {\n                s = Strings.truncate(s, max, undefined, width);\n            }\n        }\n\n        if (options.prefix || options.suffix) {\n            s = `${options.prefix || ''}${s}${options.suffix || ''}`;\n        }\n\n        return s;\n    }\n\n    private static _formatter: Formatter | undefined = undefined;\n\n    protected static fromTemplateCore<\n        TFormatter extends Formatter<TItem, TOptions>,\n        TItem,\n        TOptions extends IFormatOptions\n    >(\n        formatter: TFormatter | Constructor<TFormatter>,\n        template: string,\n        item: TItem,\n        dateFormatOrOptions?: string | null | TOptions\n    ): string {\n        // Preserve spaces\n        template = template.replace(spaceReplacementRegex, '\\u00a0');\n        if (formatter instanceof Formatter) return Strings.interpolate(template, formatter);\n\n        let options: TOptions | undefined = undefined;\n        if (dateFormatOrOptions == null || typeof dateFormatOrOptions === 'string') {\n            options = {\n                dateFormat: dateFormatOrOptions\n            } as TOptions;\n        }\n        else {\n            options = dateFormatOrOptions;\n        }\n\n        if (options.tokenOptions == null) {\n            const tokenOptions = Strings.getTokensFromTemplate(template).reduce(\n                (map, token) => {\n                    map[token.key] = token.options;\n                    return map;\n                },\n                {} as { [token: string]: Strings.ITokenOptions | undefined }\n            );\n\n            options.tokenOptions = tokenOptions;\n        }\n\n        if (this._formatter === undefined) {\n            this._formatter = new formatter(item, options);\n        }\n        else {\n            this._formatter.reset(item, options);\n        }\n\n        return Strings.interpolate(template, this._formatter);\n    }\n}\n","'use strict';\nimport { DateStyle } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { Strings } from '../../system';\nimport { GitCommit, GitCommitType } from '../models/commit';\nimport { GitLogCommit } from '../models/models';\nimport { Formatter, IFormatOptions } from './formatter';\n\nconst emojiMap: { [key: string]: string } = require('../../../emoji/emojis.json');\nconst emojiRegex = /:([-+_a-z0-9]+):/g;\n\nexport interface ICommitFormatOptions extends IFormatOptions {\n    dateStyle?: DateStyle;\n    truncateMessageAtNewLine?: boolean;\n\n    tokenOptions?: {\n        ago?: Strings.ITokenOptions;\n        agoOrDate?: Strings.ITokenOptions;\n        author?: Strings.ITokenOptions;\n        authorAgo?: Strings.ITokenOptions;\n        authorAgoOrDate?: Strings.ITokenOptions;\n        changes?: Strings.ITokenOptions;\n        changesShort?: Strings.ITokenOptions;\n        date?: Strings.ITokenOptions;\n        id?: Strings.ITokenOptions;\n        message?: Strings.ITokenOptions;\n    };\n}\n\nexport class CommitFormatter extends Formatter<GitCommit, ICommitFormatOptions> {\n    private get _ago() {\n        return this._item.fromNow();\n    }\n\n    private get _date() {\n        return this._item.formatDate(this._options.dateFormat!);\n    }\n\n    private get _agoOrDate() {\n        const dateStyle =\n            this._options.dateStyle !== undefined ? this._options.dateStyle : Container.config.defaultDateStyle;\n        return dateStyle === DateStyle.Absolute ? this._date : this._ago;\n    }\n\n    get ago() {\n        return this._padOrTruncate(this._ago, this._options.tokenOptions!.ago);\n    }\n\n    get agoOrDate() {\n        return this._padOrTruncate(this._agoOrDate, this._options.tokenOptions!.agoOrDate);\n    }\n\n    get author() {\n        const author = this._item.author;\n        return this._padOrTruncate(author, this._options.tokenOptions!.author);\n    }\n\n    get authorAgo() {\n        const authorAgo = `${this._item.author}, ${this._ago}`;\n        return this._padOrTruncate(authorAgo, this._options.tokenOptions!.authorAgo);\n    }\n\n    get authorAgoOrDate() {\n        const authorAgo = `${this._item.author}, ${this._agoOrDate}`;\n        return this._padOrTruncate(authorAgo, this._options.tokenOptions!.authorAgoOrDate);\n    }\n\n    get changes() {\n        if (!(this._item instanceof GitLogCommit) || this._item.type === GitCommitType.File) {\n            return this._padOrTruncate('', this._options.tokenOptions!.changes);\n        }\n\n        return this._padOrTruncate(this._item.getFormattedDiffStatus(), this._options.tokenOptions!.changes);\n    }\n\n    get changesShort() {\n        if (!(this._item instanceof GitLogCommit) || this._item.type === GitCommitType.File) {\n            return this._padOrTruncate('', this._options.tokenOptions!.changesShort);\n        }\n\n        return this._padOrTruncate(\n            this._item.getFormattedDiffStatus({ compact: true, separator: '' }),\n            this._options.tokenOptions!.changesShort\n        );\n    }\n\n    get date() {\n        return this._padOrTruncate(this._date, this._options.tokenOptions!.date);\n    }\n\n    get id() {\n        return this._padOrTruncate(this._item.shortSha || '', this._options.tokenOptions!.id);\n    }\n\n    get message() {\n        let message: string;\n        if (this._item.isStagedUncommitted) {\n            message = 'Staged changes';\n        }\n        else if (this._item.isUncommitted) {\n            message = 'Uncommitted changes';\n        }\n        else {\n            if (this._options.truncateMessageAtNewLine) {\n                const index = this._item.message.indexOf('\\n');\n                message =\n                    index === -1\n                        ? this._item.message\n                        : `${this._item.message.substring(0, index)}${GlyphChars.Space}${GlyphChars.Ellipsis}`;\n            }\n            else {\n                message = this._item.message;\n            }\n\n            message = message.replace(emojiRegex, (s, code) => emojiMap[code] || s);\n        }\n\n        return this._padOrTruncate(message, this._options.tokenOptions!.message);\n    }\n\n    get sha() {\n        return this.id;\n    }\n\n    static fromTemplate(template: string, commit: GitCommit, dateFormat: string | null): string;\n    static fromTemplate(template: string, commit: GitCommit, options?: ICommitFormatOptions): string;\n    static fromTemplate(\n        template: string,\n        commit: GitCommit,\n        dateFormatOrOptions?: string | null | ICommitFormatOptions\n    ): string;\n    static fromTemplate(\n        template: string,\n        commit: GitCommit,\n        dateFormatOrOptions?: string | null | ICommitFormatOptions\n    ): string {\n        return super.fromTemplateCore(this, template, commit, dateFormatOrOptions);\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Uri } from 'vscode';\nimport { UriComparer } from '../comparers';\nimport { DocumentSchemes, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitFile, GitService } from '../git/gitService';\nimport { Strings } from '../system';\n\nconst empty = '';\nconst slash = '/';\n\nexport interface GitCommitish {\n    fileName?: string;\n    repoPath: string;\n    sha?: string;\n    versionedPath?: string;\n}\n\n// Taken from https://github.com/Microsoft/vscode/blob/master/src/vs/base/common/uri.ts#L331-L337\ninterface UriComponents {\n    scheme: string;\n    authority: string;\n    path: string;\n    query: string;\n    fragment: string;\n}\n\ninterface UriEx {\n    new (): Uri;\n    new (scheme: string, authority: string, path: string, query: string, fragment: string): Uri;\n    // Use this ctor, because vscode doesn't validate it\n    new (components: UriComponents): Uri;\n}\n\nexport class GitUri extends ((Uri as any) as UriEx) {\n    repoPath?: string;\n    sha?: string;\n    versionedPath?: string;\n\n    constructor(uri?: Uri);\n    constructor(uri: Uri, commit: GitCommitish);\n    constructor(uri: Uri, repoPath: string | undefined);\n    constructor(uri?: Uri, commitOrRepoPath?: GitCommitish | string) {\n        if (uri == null) {\n            super();\n\n            return;\n        }\n\n        if (uri.scheme === DocumentSchemes.GitLens) {\n            const data = JSON.parse(uri.query) as IUriRevisionData;\n\n            // When Uri's come from the FileSystemProvider, the uri.query only contains the root repo info (not the actual file path), so fix that here\n            const index = uri.path.indexOf(data.path);\n            if (index + data.path.length < uri.path.length) {\n                data.path = uri.path.substr(index);\n            }\n\n            super({\n                scheme: uri.scheme,\n                authority: uri.authority,\n                path: data.path,\n                query: JSON.stringify(data),\n                fragment: uri.fragment\n            });\n\n            this.repoPath = data.repoPath;\n            if (GitService.isStagedUncommitted(data.ref) || !GitService.isUncommitted(data.ref)) {\n                this.sha = data.ref;\n            }\n\n            return;\n        }\n\n        if (commitOrRepoPath === undefined) {\n            super(uri);\n\n            return;\n        }\n\n        if (typeof commitOrRepoPath === 'string') {\n            super(uri);\n\n            this.repoPath = commitOrRepoPath;\n\n            return;\n        }\n\n        const [authority, fsPath] = GitUri.ensureValidUNCPath(\n            uri.authority,\n            GitUri.resolve(commitOrRepoPath.fileName || uri.fsPath, commitOrRepoPath.repoPath)\n        );\n\n        let path;\n        switch (uri.scheme) {\n            case 'https':\n            case 'http':\n            case 'file':\n                if (!fsPath) {\n                    path = slash;\n                }\n                else if (fsPath[0] !== slash) {\n                    path = `/${fsPath}`;\n                }\n                else {\n                    path = fsPath;\n                }\n                break;\n            default:\n                path = fsPath;\n                break;\n        }\n\n        super({\n            scheme: uri.scheme,\n            authority: authority,\n            path: path,\n            query: uri.query,\n            fragment: uri.fragment\n        });\n        this.repoPath = commitOrRepoPath.repoPath;\n        this.versionedPath = commitOrRepoPath.versionedPath;\n        if (GitService.isStagedUncommitted(commitOrRepoPath.sha) || !GitService.isUncommitted(commitOrRepoPath.sha)) {\n            this.sha = commitOrRepoPath.sha;\n        }\n    }\n\n    get shortSha() {\n        return this.sha && GitService.shortenSha(this.sha);\n    }\n\n    documentUri(options: { useVersionedPath?: boolean } = {}) {\n        if (options.useVersionedPath && this.versionedPath !== undefined) return GitUri.file(this.versionedPath);\n        if (this.scheme !== 'file') return this;\n\n        return GitUri.file(this.fsPath);\n    }\n\n    equals(uri: Uri | undefined) {\n        if (!UriComparer.equals(this, uri)) return false;\n\n        return this.sha === (uri instanceof GitUri ? uri.sha : undefined);\n    }\n\n    getDirectory(relativeTo?: string): string {\n        return GitUri.getDirectory(\n            this.repoPath ? paths.relative(this.repoPath, this.fsPath) : this.fsPath,\n            relativeTo\n        );\n    }\n\n    getFilename(relativeTo?: string): string {\n        return paths.basename(this.repoPath ? paths.relative(this.repoPath, this.fsPath) : this.fsPath, relativeTo);\n    }\n\n    getFormattedPath(options: { relativeTo?: string; separator?: string; suffix?: string } = {}): string {\n        const { relativeTo = this.repoPath, separator = Strings.pad(GlyphChars.Dot, 2, 2), suffix = empty } = options;\n\n        const directory = GitUri.getDirectory(this.fsPath, relativeTo);\n        return `${paths.basename(this.fsPath)}${suffix}${directory ? `${separator}${directory}` : empty}`;\n    }\n\n    getRelativePath(relativeTo?: string): string {\n        let relativePath = this.repoPath ? paths.relative(this.repoPath, this.fsPath) : this.fsPath;\n        if (relativeTo !== undefined) {\n            relativePath = paths.relative(relativeTo, relativePath);\n        }\n        return Strings.normalizePath(relativePath);\n    }\n\n    toFileUri() {\n        return GitUri.file(this.fsPath);\n    }\n\n    private static ensureValidUNCPath(authority: string, fsPath: string): [string, string] {\n        // Taken from https://github.com/Microsoft/vscode/blob/e444eaa768a1e8bd8315f2cee265d725e96a8162/src/vs/base/common/uri.ts#L300-L325\n        // check for authority as used in UNC shares or use the path as given\n        if (fsPath[0] === slash && fsPath[1] === slash) {\n            const index = fsPath.indexOf(slash, 2);\n            if (index === -1) {\n                authority = fsPath.substring(2);\n                fsPath = slash;\n            }\n            else {\n                authority = fsPath.substring(2, index);\n                fsPath = fsPath.substring(index) || slash;\n            }\n        }\n\n        return [authority, fsPath];\n    }\n\n    static file(path: string, useVslsScheme?: boolean) {\n        const uri = Uri.file(path);\n        if (Container.vsls.isMaybeGuest && useVslsScheme !== false) {\n            return uri.with({ scheme: DocumentSchemes.Vsls });\n        }\n\n        return uri;\n    }\n\n    static fromCommit(commit: GitCommit, previous: boolean = false) {\n        if (!previous) return new GitUri(commit.uri, commit);\n\n        return new GitUri(commit.previousUri, {\n            repoPath: commit.repoPath,\n            sha: commit.previousSha\n        });\n    }\n\n    static fromFile(fileName: string, repoPath: string, ref?: string): GitUri;\n    static fromFile(file: GitFile, repoPath: string, ref?: string, original?: boolean): GitUri;\n    static fromFile(fileOrName: GitFile | string, repoPath: string, ref?: string, original: boolean = false): GitUri {\n        const uri = GitUri.resolveToUri(\n            typeof fileOrName === 'string'\n                ? fileOrName\n                : (original && fileOrName.originalFileName) || fileOrName.fileName,\n            repoPath\n        );\n        return ref === undefined ? new GitUri(uri, repoPath) : new GitUri(uri, { repoPath: repoPath, sha: ref });\n    }\n\n    static fromRepoPath(repoPath: string, ref?: string) {\n        return ref === undefined\n            ? new GitUri(GitUri.file(repoPath), repoPath)\n            : new GitUri(GitUri.file(repoPath), { repoPath: repoPath, sha: ref });\n    }\n\n    static fromRevisionUri(uri: Uri): GitUri {\n        return new GitUri(uri);\n    }\n\n    static async fromUri(uri: Uri) {\n        if (uri instanceof GitUri) return uri;\n\n        if (!Container.git.isTrackable(uri)) return new GitUri(uri);\n\n        if (uri.scheme === DocumentSchemes.GitLens) return new GitUri(uri);\n\n        // If this is a git uri, find its repoPath\n        if (uri.scheme === DocumentSchemes.Git) {\n            const data: { path: string; ref: string } = JSON.parse(uri.query);\n\n            const repoPath = await Container.git.getRepoPath(data.path);\n\n            let ref;\n            switch (data.ref) {\n                case empty:\n                case '~':\n                    ref = GitService.stagedUncommittedSha;\n                    break;\n\n                case null:\n                    ref = undefined;\n                    break;\n\n                default:\n                    ref = data.ref;\n                    break;\n            }\n\n            return new GitUri(uri, {\n                fileName: data.path,\n                repoPath: repoPath,\n                sha: ref\n            } as GitCommitish);\n        }\n\n        return new GitUri(uri, await Container.git.getRepoPath(uri));\n    }\n\n    static getDirectory(fileName: string, relativeTo?: string): string {\n        let directory: string | undefined = paths.dirname(fileName);\n        if (relativeTo !== undefined) {\n            directory = paths.relative(relativeTo, directory);\n        }\n        directory = Strings.normalizePath(directory);\n        return !directory || directory === '.' ? empty : directory;\n    }\n\n    static getFormattedPath(\n        fileNameOrUri: string | Uri,\n        options: { relativeTo?: string; separator?: string; suffix?: string } = {}\n    ): string {\n        const { relativeTo, separator = Strings.pad(GlyphChars.Dot, 2, 2), suffix = empty } = options;\n\n        let fileName: string;\n        if (fileNameOrUri instanceof Uri) {\n            if (fileNameOrUri instanceof GitUri) return fileNameOrUri.getFormattedPath(options);\n\n            fileName = fileNameOrUri.fsPath;\n        }\n        else {\n            fileName = fileNameOrUri;\n        }\n\n        const directory = GitUri.getDirectory(fileName, relativeTo);\n        return !directory\n            ? `${paths.basename(fileName)}${suffix}`\n            : `${paths.basename(fileName)}${suffix}${separator}${directory}`;\n    }\n\n    static getRelativePath(fileNameOrUri: string | Uri, relativeTo?: string, repoPath?: string): string {\n        let fileName: string;\n        if (fileNameOrUri instanceof Uri) {\n            if (fileNameOrUri instanceof GitUri) return fileNameOrUri.getRelativePath(relativeTo);\n\n            fileName = fileNameOrUri.fsPath;\n        }\n        else {\n            fileName = fileNameOrUri;\n        }\n\n        let relativePath = repoPath ? paths.relative(repoPath, fileName) : fileName;\n        if (relativeTo !== undefined) {\n            relativePath = paths.relative(relativeTo, relativePath);\n        }\n        return Strings.normalizePath(relativePath);\n    }\n\n    static git(fileName: string, repoPath?: string) {\n        const path = GitUri.resolve(fileName, repoPath);\n        return Uri.parse(\n            `git:${path}?${JSON.stringify({\n                // Ensure we use the fsPath here, otherwise the url won't open properly\n                path: Uri.file(path).fsPath,\n                ref: '~'\n            })}`\n        );\n    }\n\n    static resolve(fileName: string, repoPath?: string) {\n        const normalizedFileName = Strings.normalizePath(fileName);\n        if (repoPath === undefined) return normalizedFileName;\n\n        const normalizedRepoPath = Strings.normalizePath(repoPath);\n        if (normalizedFileName == null || normalizedFileName.length === 0) return normalizedRepoPath;\n\n        if (normalizedFileName.startsWith(normalizedRepoPath)) return normalizedFileName;\n\n        return Strings.normalizePath(paths.join(normalizedRepoPath, normalizedFileName));\n    }\n\n    static resolveToUri(fileName: string, repoPath?: string) {\n        return GitUri.file(this.resolve(fileName, repoPath));\n    }\n\n    static toKey(fileName: string): string;\n    static toKey(uri: Uri): string;\n    static toKey(fileNameOrUri: string | Uri): string;\n    static toKey(fileNameOrUri: string | Uri): string {\n        return Strings.normalizePath(typeof fileNameOrUri === 'string' ? fileNameOrUri : fileNameOrUri.fsPath);\n\n        // return typeof fileNameOrUri === 'string'\n        //     ? GitUri.file(fileNameOrUri).toString(true)\n        //     : fileNameOrUri.toString(true);\n    }\n\n    static toRevisionUri(uri: GitUri): Uri;\n    static toRevisionUri(ref: string, fileName: string, repoPath: string): Uri;\n    static toRevisionUri(ref: string, file: GitFile, repoPath: string): Uri;\n    static toRevisionUri(uriOrRef: string | GitUri, fileNameOrFile?: string | GitFile, repoPath?: string): Uri {\n        let fileName: string;\n        let ref: string | undefined;\n        let shortSha: string | undefined;\n\n        if (typeof uriOrRef === 'string') {\n            if (typeof fileNameOrFile === 'string') {\n                fileName = fileNameOrFile;\n            }\n            else {\n                fileName = GitUri.resolve(fileNameOrFile!.fileName, repoPath);\n            }\n\n            ref = uriOrRef;\n            shortSha = GitService.shortenSha(ref);\n        }\n        else {\n            fileName = uriOrRef.fsPath!;\n            repoPath = uriOrRef.repoPath!;\n            ref = uriOrRef.sha;\n            shortSha = uriOrRef.shortSha;\n        }\n\n        repoPath = Strings.normalizePath(repoPath!);\n        const repoName = paths.basename(repoPath);\n\n        const filePath = Strings.normalizePath(fileName, { addLeadingSlash: true });\n        const data: IUriRevisionData = {\n            path: filePath,\n            ref: ref,\n            repoPath: repoPath\n        };\n\n        const uri = Uri.parse(\n            `${DocumentSchemes.GitLens}:///${repoName}@${shortSha}${\n                filePath === slash ? empty : filePath\n            }?${JSON.stringify(data)}`\n        );\n        return uri;\n    }\n}\n\ninterface IUriRevisionData {\n    path: string;\n    ref?: string;\n    repoPath: string;\n}\n","'use strict';\nimport { GlyphChars } from '../../constants';\nimport { Strings } from '../../system';\nimport { GitUri } from '../gitUri';\nimport { GitLogCommit } from './logCommit';\n\nexport declare type GitFileStatus = '!' | '?' | 'A' | 'C' | 'D' | 'M' | 'R' | 'T' | 'U' | 'X' | 'B';\n\nexport interface GitFile {\n    status: GitFileStatus;\n    readonly repoPath?: string;\n    readonly indexStatus?: GitFileStatus;\n    readonly workingTreeStatus?: GitFileStatus;\n    readonly fileName: string;\n    readonly originalFileName?: string;\n}\n\nexport interface GitFileWithCommit extends GitFile {\n    readonly commit: GitLogCommit;\n}\n\nexport namespace GitFile {\n    export function getFormattedDirectory(\n        file: GitFile,\n        includeOriginal: boolean = false,\n        relativeTo?: string\n    ): string {\n        const directory = GitUri.getDirectory(file.fileName, relativeTo);\n        return includeOriginal && file.status === 'R' && file.originalFileName\n            ? `${directory} ${Strings.pad(GlyphChars.ArrowLeft, 1, 1)} ${file.originalFileName}`\n            : directory;\n    }\n\n    export function getFormattedPath(\n        file: GitFile,\n        options: { relativeTo?: string; separator?: string; suffix?: string } = {}\n    ): string {\n        return GitUri.getFormattedPath(file.fileName, options);\n    }\n\n    export function getRelativePath(file: GitFile, relativeTo?: string): string {\n        return GitUri.getRelativePath(file.fileName, relativeTo);\n    }\n\n    const statusIconsMap = {\n        '!': 'icon-status-ignored.svg',\n        '?': 'icon-status-untracked.svg',\n        A: 'icon-status-added.svg',\n        C: 'icon-status-copied.svg',\n        D: 'icon-status-deleted.svg',\n        M: 'icon-status-modified.svg',\n        R: 'icon-status-renamed.svg',\n        T: 'icon-status-modified.svg',\n        U: 'icon-status-conflict.svg',\n        X: 'icon-status-unknown.svg',\n        B: 'icon-status-unknown.svg'\n    };\n\n    export function getStatusIcon(status: GitFileStatus): string {\n        return statusIconsMap[status] || statusIconsMap['X'];\n    }\n\n    const statusOcticonsMap = {\n        '!': '$(diff-ignored)',\n        '?': '$(diff-added)',\n        A: '$(diff-added)',\n        C: '$(diff-added)',\n        D: '$(diff-removed)',\n        M: '$(diff-modified)',\n        R: '$(diff-renamed)',\n        T: '$(diff-modified)',\n        U: '$(alert)',\n        X: '$(question)',\n        B: '$(question)'\n    };\n\n    export function getStatusOcticon(status: GitFileStatus, missing: string = GlyphChars.Space.repeat(4)): string {\n        return statusOcticonsMap[status] || missing;\n    }\n\n    const statusTextMap = {\n        '!': 'Ignored',\n        '?': 'Untracked',\n        A: 'Added',\n        C: 'Copied',\n        D: 'Deleted',\n        M: 'Modified',\n        R: 'Renamed',\n        T: 'Modified',\n        U: 'Conflict',\n        X: 'Unknown',\n        B: 'Unknown'\n    };\n\n    export function getStatusText(status: GitFileStatus): string {\n        return statusTextMap[status] || statusTextMap['X'];\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { GlyphChars } from '../../constants';\nimport { Strings } from '../../system';\nimport { GitFile, GitFileWithCommit } from '../models/file';\nimport { Formatter, IFormatOptions } from './formatter';\n\nexport interface IStatusFormatOptions extends IFormatOptions {\n    relativePath?: string;\n\n    tokenOptions?: {\n        directory?: Strings.ITokenOptions;\n        file?: Strings.ITokenOptions;\n        filePath?: Strings.ITokenOptions;\n        path?: Strings.ITokenOptions;\n        status?: Strings.ITokenOptions;\n        working?: Strings.ITokenOptions;\n    };\n}\n\nexport class StatusFileFormatter extends Formatter<GitFile, IStatusFormatOptions> {\n    get directory() {\n        const directory = GitFile.getFormattedDirectory(this._item, false, this._options.relativePath);\n        return this._padOrTruncate(directory, this._options.tokenOptions!.directory);\n    }\n\n    get file() {\n        const file = paths.basename(this._item.fileName);\n        return this._padOrTruncate(file, this._options.tokenOptions!.file);\n    }\n\n    get filePath() {\n        const filePath = GitFile.getFormattedPath(this._item, { relativeTo: this._options.relativePath });\n        return this._padOrTruncate(filePath, this._options.tokenOptions!.filePath);\n    }\n\n    get path() {\n        const directory = GitFile.getRelativePath(this._item, this._options.relativePath);\n        return this._padOrTruncate(directory, this._options.tokenOptions!.path);\n    }\n\n    get status() {\n        const status = GitFile.getStatusText(this._item.status);\n        return this._padOrTruncate(status, this._options.tokenOptions!.status);\n    }\n\n    get working() {\n        const commit = (this._item as GitFileWithCommit).commit;\n        const statusFile = commit === undefined ? this._item : commit.files[0];\n\n        let icon = '';\n        if (statusFile.workingTreeStatus !== undefined && statusFile.indexStatus !== undefined) {\n            icon = `${GlyphChars.Pencil}${GlyphChars.Space}${GlyphChars.SpaceThinnest}${GlyphChars.Check}`;\n        }\n        else if (statusFile.workingTreeStatus !== undefined) {\n            icon = `${GlyphChars.Pencil}${GlyphChars.SpaceThin}${GlyphChars.SpaceThinnest}${GlyphChars.EnDash}${\n                GlyphChars.Space\n            }`;\n        }\n        else if (statusFile.indexStatus !== undefined) {\n            icon = `${GlyphChars.Space}${GlyphChars.EnDash}${GlyphChars.Space.repeat(2)}${GlyphChars.Check}`;\n        }\n        else {\n            icon = '';\n        }\n        return this._padOrTruncate(icon, this._options.tokenOptions!.working);\n    }\n\n    static fromTemplate(template: string, file: GitFile, dateFormat: string | null): string;\n    static fromTemplate(template: string, file: GitFile, options?: IStatusFormatOptions): string;\n    static fromTemplate(\n        template: string,\n        file: GitFile,\n        dateFormatOrOptions?: string | null | IStatusFormatOptions\n    ): string;\n    static fromTemplate(\n        template: string,\n        file: GitFile,\n        dateFormatOrOptions?: string | null | IStatusFormatOptions\n    ): string {\n        return super.fromTemplateCore(this, template, file, dateFormatOrOptions);\n    }\n}\n","'use strict';\nimport { Uri } from 'vscode';\nimport { configuration, DateStyle, GravatarDefaultStyle } from '../../configuration';\nimport { Container } from '../../container';\nimport { Dates, Strings } from '../../system';\nimport { CommitFormatter } from '../formatters/formatters';\nimport { Git } from '../git';\nimport { GitUri } from '../gitUri';\n\nconst gravatarCache: Map<string, Uri> = new Map();\nconst missingGravatarHash = '00000000000000000000000000000000';\n\nexport function clearGravatarCache() {\n    gravatarCache.clear();\n}\n\nexport interface GitAuthor {\n    name: string;\n    lineCount: number;\n}\n\nexport interface GitCommitLine {\n    sha: string;\n    previousSha?: string;\n    line: number;\n    originalLine: number;\n    code?: string;\n}\n\nexport enum GitCommitType {\n    Blame = 'blame',\n    Branch = 'branch',\n    File = 'file',\n    Stash = 'stash',\n    StashFile = 'stash-file'\n}\n\nexport const CommitFormatting = {\n    dateFormat: undefined! as string | null,\n    dateStyle: undefined! as DateStyle,\n\n    reset: () => {\n        CommitFormatting.dateStyle = configuration.get<DateStyle>(configuration.name('defaultDateStyle').value);\n        CommitFormatting.dateFormat = configuration.get<string | null>(configuration.name('defaultDateFormat').value);\n    }\n};\n\nexport abstract class GitCommit {\n    readonly type: GitCommitType;\n    readonly originalFileName: string | undefined;\n    previousFileName: string | undefined;\n    workingFileName?: string;\n\n    protected readonly _fileName: string;\n    protected _previousSha: string | undefined;\n\n    private _isStagedUncommitted: boolean | undefined;\n    private _isUncommitted: boolean | undefined;\n    private _shortSha: string | undefined;\n\n    constructor(\n        type: GitCommitType,\n        public readonly repoPath: string,\n        public readonly sha: string,\n        public readonly author: string,\n        public readonly email: string | undefined,\n        public readonly date: Date,\n        public readonly message: string,\n        fileName: string,\n        originalFileName?: string,\n        previousSha?: string,\n        previousFileName?: string\n    ) {\n        this.type = type;\n        this._fileName = fileName || '';\n        this.originalFileName = originalFileName;\n        this._previousSha = previousSha;\n        this.previousFileName = previousFileName;\n    }\n\n    get fileName() {\n        // If we aren't a single-file commit, return an empty file name (makes it default to the repoPath)\n        return this.isFile ? this._fileName : '';\n    }\n\n    get formattedDate(): string {\n        return CommitFormatting.dateStyle === DateStyle.Absolute\n            ? this.formatDate(CommitFormatting.dateFormat)\n            : this.fromNow();\n    }\n\n    get shortSha() {\n        if (this._shortSha === undefined) {\n            this._shortSha = Git.shortenSha(this.sha);\n        }\n        return this._shortSha;\n    }\n\n    get isFile() {\n        return (\n            this.type === GitCommitType.Blame ||\n            this.type === GitCommitType.File ||\n            this.type === GitCommitType.StashFile\n        );\n    }\n\n    get isStash() {\n        return this.type === GitCommitType.Stash || this.type === GitCommitType.StashFile;\n    }\n\n    get isStagedUncommitted(): boolean {\n        if (this._isStagedUncommitted === undefined) {\n            this._isStagedUncommitted = Git.isStagedUncommitted(this.sha);\n        }\n        return this._isStagedUncommitted;\n    }\n\n    get isUncommitted(): boolean {\n        if (this._isUncommitted === undefined) {\n            this._isUncommitted = Git.isUncommitted(this.sha);\n        }\n        return this._isUncommitted;\n    }\n\n    abstract get previousFileSha(): string;\n    protected _resolvedPreviousFileSha: string | undefined;\n\n    get previousFileShortSha(): string {\n        return Git.shortenSha(this.previousFileSha)!;\n    }\n\n    get previousSha(): string | undefined {\n        return this._previousSha;\n    }\n    set previousSha(value: string | undefined) {\n        if (value === this._previousSha) return;\n\n        this._previousSha = value;\n        this._resolvedPreviousFileSha = undefined;\n    }\n\n    get previousShortSha() {\n        return this.previousSha && Git.shortenSha(this.previousSha);\n    }\n\n    get previousUri(): Uri {\n        return this.previousFileName ? GitUri.resolveToUri(this.previousFileName, this.repoPath) : this.uri;\n    }\n\n    get uri(): Uri {\n        return GitUri.resolveToUri(this.fileName, this.repoPath);\n    }\n\n    get workingUri(): Uri {\n        return this.workingFileName ? GitUri.resolveToUri(this.workingFileName, this.repoPath) : this.uri;\n    }\n\n    private _dateFormatter?: Dates.IDateFormatter;\n\n    formatDate(format?: string | null) {\n        if (format == null) {\n            format = 'MMMM Do, YYYY h:mma';\n        }\n\n        if (this._dateFormatter === undefined) {\n            this._dateFormatter = Dates.toFormatter(this.date);\n        }\n        return this._dateFormatter.format(format);\n    }\n\n    fromNow() {\n        if (this._dateFormatter === undefined) {\n            this._dateFormatter = Dates.toFormatter(this.date);\n        }\n        return this._dateFormatter.fromNow();\n    }\n\n    getFormattedPath(options: { relativeTo?: string; separator?: string; suffix?: string } = {}): string {\n        return GitUri.getFormattedPath(this.fileName, options);\n    }\n\n    getGravatarUri(fallback: GravatarDefaultStyle, size: number = 16): Uri {\n        const hash =\n            this.email != null && this.email.length !== 0\n                ? Strings.md5(this.email.trim().toLowerCase(), 'hex')\n                : missingGravatarHash;\n\n        const key = `${hash}:${size}`;\n        let gravatar = gravatarCache.get(key);\n        if (gravatar !== undefined) return gravatar;\n\n        gravatar = Uri.parse(`https://www.gravatar.com/avatar/${hash}.jpg?s=${size}&d=${fallback}`);\n        gravatarCache.set(key, gravatar);\n\n        return gravatar;\n    }\n\n    getShortMessage() {\n        return CommitFormatter.fromTemplate('${message}', this, { truncateMessageAtNewLine: true });\n    }\n\n    async resolvePreviousFileSha(): Promise<void> {\n        if (this._resolvedPreviousFileSha !== undefined) return;\n\n        this._resolvedPreviousFileSha = await Container.git.resolveReference(\n            this.repoPath,\n            this.previousFileSha,\n            this.fileName ? this.previousUri : undefined\n        );\n    }\n\n    toGitUri(previous: boolean = false): GitUri {\n        return GitUri.fromCommit(this, previous);\n    }\n\n    abstract with(changes: {\n        type?: GitCommitType;\n        sha?: string;\n        fileName?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n    }): GitCommit;\n\n    protected getChangedValue<T>(change: T | null | undefined, original: T | undefined): T | undefined {\n        if (change === undefined) return original;\n        return change !== null ? change : undefined;\n    }\n}\n","'use strict';\nimport { GitCommit, GitCommitLine, GitCommitType } from './commit';\n\nexport class GitBlameCommit extends GitCommit {\n    constructor(\n        repoPath: string,\n        sha: string,\n        author: string,\n        email: string | undefined,\n        date: Date,\n        message: string,\n        fileName: string,\n        originalFileName: string | undefined,\n        previousSha: string | undefined,\n        previousFileName: string | undefined,\n        public readonly lines: GitCommitLine[]\n    ) {\n        super(\n            GitCommitType.Blame,\n            repoPath,\n            sha,\n            author,\n            email,\n            date,\n            message,\n            fileName,\n            originalFileName,\n            previousSha,\n            previousFileName\n        );\n    }\n\n    get previousFileSha(): string {\n        if (this._resolvedPreviousFileSha !== undefined) return this._resolvedPreviousFileSha;\n\n        return `${this.sha}^`;\n    }\n\n    with(changes: {\n        sha?: string;\n        fileName?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n        lines?: GitCommitLine[] | null;\n    }): GitBlameCommit {\n        return new GitBlameCommit(\n            this.repoPath,\n            changes.sha || this.sha,\n            this.author,\n            this.email,\n            this.date,\n            this.message,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.originalFileName, this.originalFileName),\n            this.getChangedValue(changes.previousSha, this.previousSha),\n            this.getChangedValue(changes.previousFileName, this.previousFileName),\n            this.getChangedValue(changes.lines, changes.sha || changes.fileName ? [] : this.lines) || []\n        );\n    }\n}\n","'use strict';\nimport { Uri } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Strings } from '../../system';\nimport { GitUri } from '../gitUri';\nimport { GitBranch, GitTrackingState } from './branch';\nimport { GitFile, GitFileStatus } from './file';\n\nexport class GitStatus {\n    readonly detached: boolean;\n\n    constructor(\n        public readonly repoPath: string,\n        public readonly branch: string,\n        public readonly sha: string,\n        public readonly files: GitStatusFile[],\n        public readonly state: GitTrackingState,\n        public readonly upstream?: string\n    ) {\n        this.detached = GitBranch.isDetached(branch);\n        if (this.detached) {\n            this.branch = GitBranch.formatDetached(this.sha);\n        }\n    }\n\n    get ref() {\n        return this.detached ? this.sha : this.branch;\n    }\n\n    private _diff?: {\n        added: number;\n        deleted: number;\n        changed: number;\n    };\n\n    getDiffStatus() {\n        if (this._diff === undefined) {\n            this._diff = {\n                added: 0,\n                deleted: 0,\n                changed: 0\n            };\n\n            if (this.files.length !== 0) {\n                for (const f of this.files) {\n                    switch (f.status) {\n                        case 'A':\n                        case '?':\n                            this._diff.added++;\n                            break;\n                        case 'D':\n                            this._diff.deleted++;\n                            break;\n                        default:\n                            this._diff.changed++;\n                            break;\n                    }\n                }\n            }\n        }\n\n        return this._diff;\n    }\n\n    getFormattedDiffStatus(\n        options: {\n            compact?: boolean;\n            empty?: string;\n            expand?: boolean;\n            prefix?: string;\n            separator?: string;\n            suffix?: string;\n        } = {}\n    ): string {\n        const { added, changed, deleted } = this.getDiffStatus();\n        if (added === 0 && changed === 0 && deleted === 0) return options.empty || '';\n\n        const { compact, expand, prefix = '', separator = ' ', suffix = '' } = options;\n        if (expand) {\n            let status = '';\n            if (added) {\n                status += `${Strings.pluralize('file', added)} added`;\n            }\n            if (changed) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', changed)} changed`;\n            }\n            if (deleted) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', deleted)} deleted`;\n            }\n            return `${prefix}${status}${suffix}`;\n        }\n\n        let status = '';\n        if (compact) {\n            if (added !== 0) {\n                status += `+${added}`;\n            }\n            if (changed !== 0) {\n                status += `${status.length === 0 ? '' : separator}~${changed}`;\n            }\n            if (deleted !== 0) {\n                status += `${status.length === 0 ? '' : separator}-${deleted}`;\n            }\n        }\n        else {\n            status += `+${added}${separator}~${changed}${separator}-${deleted}`;\n        }\n\n        return `${prefix}${status}${suffix}`;\n    }\n\n    getUpstreamStatus(options: {\n        empty?: string;\n        expand?: boolean;\n        prefix?: string;\n        separator?: string;\n        suffix?: string;\n    }): string {\n        return GitStatus.getUpstreamStatus(this.upstream, this.state, options);\n    }\n\n    static getUpstreamStatus(\n        upstream: string | undefined,\n        state: { ahead: number; behind: number },\n        options: { empty?: string; expand?: boolean; prefix?: string; separator?: string; suffix?: string } = {}\n    ): string {\n        if (upstream === undefined || (state.behind === 0 && state.ahead === 0)) return options.empty || '';\n\n        const { expand, prefix = '', separator = ' ', suffix = '' } = options;\n        if (expand) {\n            let status = '';\n            if (state.behind) {\n                status += `${Strings.pluralize('commit', state.behind)} behind`;\n            }\n            if (state.ahead) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('commit', state.ahead)} ahead`;\n            }\n            return `${prefix}${status}${suffix}`;\n        }\n\n        return `${prefix}${state.behind}${GlyphChars.ArrowDown}${separator}${state.ahead}${\n            GlyphChars.ArrowUp\n        }${suffix}`;\n    }\n}\n\nexport class GitStatusFile implements GitFile {\n    constructor(\n        public readonly repoPath: string,\n        public readonly indexStatus: GitFileStatus | undefined,\n        public readonly workingTreeStatus: GitFileStatus | undefined,\n        public readonly fileName: string,\n        public readonly originalFileName?: string\n    ) {}\n\n    get status(): GitFileStatus {\n        return (this.indexStatus || this.workingTreeStatus || '?') as GitFileStatus;\n    }\n\n    get staged() {\n        return this.indexStatus !== undefined;\n    }\n\n    get uri(): Uri {\n        return GitUri.resolveToUri(this.fileName, this.repoPath);\n    }\n\n    getFormattedDirectory(includeOriginal: boolean = false): string {\n        return GitFile.getFormattedDirectory(this, includeOriginal);\n    }\n\n    getFormattedPath(options: { relativeTo?: string; separator?: string; suffix?: string } = {}): string {\n        return GitFile.getFormattedPath(this, options);\n    }\n\n    getOcticon() {\n        return GitFile.getStatusOcticon(this.status);\n    }\n\n    getStatusText(file: GitFile): string {\n        return GitFile.getStatusText(this.status);\n    }\n\n    with(changes: {\n        indexStatus?: GitFileStatus | null;\n        workTreeStatus?: GitFileStatus | null;\n        fileName?: string;\n        originalFileName?: string | null;\n    }): GitStatusFile {\n        return new GitStatusFile(\n            this.repoPath,\n            this.getChangedValue(changes.indexStatus, this.indexStatus) as GitFileStatus,\n            this.getChangedValue(changes.workTreeStatus, this.workingTreeStatus) as GitFileStatus,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.originalFileName, this.originalFileName)\n        );\n    }\n\n    protected getChangedValue<T>(change: T | null | undefined, original: T | undefined): T | undefined {\n        if (change === undefined) return original;\n        return change !== null ? change : undefined;\n    }\n}\n","'use strict';\nimport { Git } from '../git';\nimport { GitStatus } from './status';\n\nexport interface GitTrackingState {\n    ahead: number;\n    behind: number;\n}\n\nexport class GitBranch {\n    readonly detached: boolean;\n    readonly name: string;\n    readonly remote: boolean;\n    readonly tracking?: string;\n    readonly state: GitTrackingState;\n\n    constructor(\n        public readonly repoPath: string,\n        name: string,\n        public readonly current: boolean = false,\n        public readonly sha?: string,\n        tracking?: string,\n        ahead: number = 0,\n        behind: number = 0,\n        detached: boolean = false\n    ) {\n        if (name.startsWith('remotes/')) {\n            name = name.substring(8);\n            this.remote = true;\n        }\n        else {\n            this.remote = false;\n        }\n\n        this.detached = detached || (this.current ? GitBranch.isDetached(name) : false);\n        if (this.detached) {\n            this.name = GitBranch.formatDetached(this.sha!);\n        }\n        else {\n            this.name = name;\n        }\n\n        this.tracking = tracking == null || tracking.length === 0 ? undefined : tracking;\n        this.state = {\n            ahead: ahead,\n            behind: behind\n        };\n    }\n\n    get ref() {\n        return this.detached ? this.sha! : this.name;\n    }\n\n    private _basename: string | undefined;\n    getBasename(): string {\n        if (this._basename === undefined) {\n            const name = this.getName();\n            const index = name.lastIndexOf('/');\n            this._basename = index !== -1 ? name.substring(index + 1) : name;\n        }\n\n        return this._basename;\n    }\n\n    private _name: string | undefined;\n    getName(): string {\n        if (this._name === undefined) {\n            this._name = this.remote ? this.name.substring(this.name.indexOf('/') + 1) : this.name;\n        }\n\n        return this._name;\n    }\n\n    getRemote(): string | undefined {\n        if (this.remote) return GitBranch.getRemote(this.name);\n        if (this.tracking !== undefined) return GitBranch.getRemote(this.tracking);\n\n        return undefined;\n    }\n\n    getTrackingStatus(options?: {\n        empty?: string;\n        expand?: boolean;\n        prefix?: string;\n        separator?: string;\n        suffix?: string;\n    }): string {\n        return GitStatus.getUpstreamStatus(this.tracking, this.state, options);\n    }\n\n    static getRemote(branch: string): string {\n        return branch.substring(0, branch.indexOf('/'));\n    }\n\n    static formatDetached(sha: string): string {\n        return `(${Git.shortenSha(sha)}...)`;\n    }\n\n    static isDetached(name: string): boolean {\n        // If there is whitespace in the name assume this is not a valid branch name\n        // Deals with detached HEAD states\n        return name.match(/\\s/) !== null || name.match(/\\(detached\\)/) !== null;\n    }\n}\n","'use strict';\nimport { Iterables, Strings } from '../../system';\nimport {\n    GitDiff,\n    GitDiffChunk,\n    GitDiffChunkLine,\n    GitDiffLine,\n    GitDiffShortStat,\n    GitFile,\n    GitFileStatus\n} from './../git';\n\nconst nameStatusDiffRegex = /^(.*?)\\t(.*?)(?:\\t(.*?))?$/gm;\nconst shortStatDiffRegex = /^\\s*(\\d+)\\sfiles? changed(?:,\\s+(\\d+)\\s+insertions?\\(\\+\\))?(?:,\\s+(\\d+)\\s+deletions?\\(-\\))?/;\nconst unifiedDiffRegex = /^@@ -([\\d]+),([\\d]+) [+]([\\d]+),([\\d]+) @@([\\s\\S]*?)(?=^@@)/gm;\n\nexport class GitDiffParser {\n    static parse(data: string, debug: boolean = false): GitDiff | undefined {\n        if (!data) return undefined;\n\n        const chunks: GitDiffChunk[] = [];\n\n        let match: RegExpExecArray | null = null;\n\n        let chunk: string;\n        let currentStart: number;\n        let previousStart: number;\n\n        do {\n            match = unifiedDiffRegex.exec(`${data}\\n@@`);\n            if (match == null) break;\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            chunk = (' ' + match[5]).substr(1);\n            currentStart = parseInt(match[3], 10);\n            previousStart = parseInt(match[1], 10);\n\n            chunks.push(\n                new GitDiffChunk(\n                    chunk,\n                    {\n                        start: currentStart,\n                        end: currentStart + parseInt(match[4], 10)\n                    },\n                    {\n                        start: previousStart,\n                        end: previousStart + parseInt(match[2], 10)\n                    }\n                )\n            );\n        } while (match != null);\n\n        if (!chunks.length) return undefined;\n\n        const diff = {\n            diff: debug ? data : undefined,\n            chunks: chunks\n        } as GitDiff;\n        return diff;\n    }\n\n    static parseChunk(chunk: string): GitDiffChunkLine[] {\n        const lines = Iterables.skip(Strings.lines(chunk), 1);\n\n        const currentLines: (GitDiffLine | undefined)[] = [];\n        const previousLines: (GitDiffLine | undefined)[] = [];\n\n        let removed = 0;\n        for (const l of lines) {\n            switch (l[0]) {\n                case '+':\n                    currentLines.push({\n                        line: ` ${l.substring(1)}`,\n                        state: 'added'\n                    });\n\n                    if (removed > 0) {\n                        removed--;\n                    }\n                    else {\n                        previousLines.push(undefined);\n                    }\n\n                    break;\n\n                case '-':\n                    removed++;\n\n                    previousLines.push({\n                        line: ` ${l.substring(1)}`,\n                        state: 'removed'\n                    });\n\n                    break;\n\n                default:\n                    while (removed > 0) {\n                        removed--;\n                        currentLines.push(undefined);\n                    }\n\n                    currentLines.push({ line: l, state: 'unchanged' });\n                    previousLines.push({ line: l, state: 'unchanged' });\n\n                    break;\n            }\n        }\n\n        const chunkLines: GitDiffChunkLine[] = [];\n\n        let chunkLine: GitDiffChunkLine | undefined = undefined;\n        let current: GitDiffLine | undefined = undefined;\n\n        for (let i = 0; i < currentLines.length; i++) {\n            current = currentLines[i];\n            if (current === undefined) {\n                // Don't think we need to worry about this case because the diff will always have \"padding\" (i.e. unchanged lines) around each chunk\n                if (chunkLine === undefined) continue;\n\n                if (chunkLine.previous === undefined) {\n                    chunkLine.previous = [previousLines[i]];\n                    continue;\n                }\n\n                chunkLine.previous.push(previousLines[i]);\n                continue;\n            }\n\n            chunkLine = {\n                line: current.line,\n                state: current.state,\n                previous: [previousLines[i]]\n            };\n            chunkLines.push(chunkLine);\n        }\n\n        return chunkLines;\n    }\n\n    static parseNameStatus(data: string, repoPath: string): GitFile[] | undefined {\n        if (!data) return undefined;\n\n        const files: GitFile[] = [];\n\n        let match: RegExpExecArray | null = null;\n        do {\n            match = nameStatusDiffRegex.exec(data);\n            if (match == null) break;\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            const status = (' ' + match[1]).substr(1);\n            files.push({\n                repoPath,\n                status: (status[0] !== '.' ? status[0].trim() : '?') as GitFileStatus,\n                indexStatus: undefined,\n                workingTreeStatus: undefined,\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                fileName: (' ' + match[2]).substr(1),\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                originalFileName: match[3] === undefined ? undefined : (' ' + match[3]).substr(1)\n            });\n        } while (match != null);\n\n        if (!files.length) return undefined;\n\n        return files;\n    }\n\n    static parseShortStat(data: string): GitDiffShortStat | undefined {\n        if (!data) return undefined;\n\n        const match = shortStatDiffRegex.exec(data);\n        if (match == null) return undefined;\n\n        const files = match[1];\n        const insertions = match[2];\n        const deletions = match[3];\n        return {\n            files: files == null ? 0 : parseInt(files, 10),\n            insertions: insertions == null ? 0 : parseInt(insertions, 10),\n            deletions: deletions == null ? 0 : parseInt(deletions, 10)\n        } as GitDiffShortStat;\n    }\n}\n","'use strict';\nimport { GitDiffParser } from '../parsers/diffParser';\n\nexport interface GitDiffLine {\n    line: string;\n    state: 'added' | 'removed' | 'unchanged';\n}\n\nexport interface GitDiffChunkLine extends GitDiffLine {\n    previous?: (GitDiffLine | undefined)[];\n}\n\nexport class GitDiffChunk {\n    private _chunk: string | undefined;\n    private _lines: GitDiffChunkLine[] | undefined;\n\n    constructor(\n        chunk: string,\n        public currentPosition: { start: number; end: number },\n        public previousPosition: { start: number; end: number }\n    ) {\n        this._chunk = chunk;\n    }\n\n    get lines(): GitDiffChunkLine[] {\n        if (this._lines === undefined) {\n            this._lines = GitDiffParser.parseChunk(this._chunk!);\n            this._chunk = undefined;\n        }\n\n        return this._lines;\n    }\n}\n\nexport interface GitDiff {\n    readonly chunks: GitDiffChunk[];\n\n    readonly diff?: string;\n}\n\nexport interface GitDiffShortStat {\n    readonly files: number;\n    readonly insertions: number;\n    readonly deletions: number;\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Uri } from 'vscode';\nimport { Strings } from '../../system';\nimport { Git } from '../git';\nimport { GitUri } from '../gitUri';\nimport { GitCommit, GitCommitType } from './commit';\nimport { GitFile, GitFileStatus } from './file';\n\nexport class GitLogCommit extends GitCommit {\n    nextSha?: string;\n    nextFileName?: string;\n\n    constructor(\n        type: GitCommitType,\n        repoPath: string,\n        sha: string,\n        author: string,\n        email: string | undefined,\n        date: Date,\n        public readonly committedDate: Date,\n        message: string,\n        fileName: string,\n        public readonly files: GitFile[],\n        public readonly status: GitFileStatus | undefined,\n        originalFileName: string | undefined,\n        previousSha: string | undefined,\n        previousFileName: string | undefined,\n        public readonly parentShas?: string[]\n    ) {\n        super(\n            type,\n            repoPath,\n            sha,\n            author,\n            email,\n            date,\n            message,\n            fileName,\n            originalFileName,\n            previousSha,\n            previousFileName\n        );\n    }\n\n    get isMerge() {\n        return this.parentShas && this.parentShas.length > 1;\n    }\n\n    get nextShortSha() {\n        return this.nextSha && Git.shortenSha(this.nextSha);\n    }\n\n    get nextUri(): Uri {\n        return this.nextFileName ? GitUri.resolveToUri(this.nextFileName, this.repoPath) : this.uri;\n    }\n\n    get previousFileSha(): string {\n        if (this._resolvedPreviousFileSha !== undefined) return this._resolvedPreviousFileSha;\n\n        return this.isFile && this.previousSha ? this.previousSha : `${this.sha}^`;\n    }\n\n    private _diff?: {\n        added: number;\n        deleted: number;\n        changed: number;\n    };\n\n    getDiffStatus() {\n        if (this._diff === undefined) {\n            this._diff = {\n                added: 0,\n                deleted: 0,\n                changed: 0\n            };\n\n            if (this.files.length !== 0) {\n                for (const f of this.files) {\n                    switch (f.status) {\n                        case 'A':\n                        case '?':\n                            this._diff.added++;\n                            break;\n                        case 'D':\n                            this._diff.deleted++;\n                            break;\n                        default:\n                            this._diff.changed++;\n                            break;\n                    }\n                }\n            }\n        }\n\n        return this._diff;\n    }\n\n    getFormattedDiffStatus(\n        options: {\n            compact?: boolean;\n            empty?: string;\n            expand?: boolean;\n            prefix?: string;\n            separator?: string;\n            suffix?: string;\n        } = {}\n    ): string {\n        const { added, changed, deleted } = this.getDiffStatus();\n        if (added === 0 && changed === 0 && deleted === 0) return options.empty || '';\n\n        const { compact, expand, prefix = '', separator = ' ', suffix = '' } = options;\n        if (expand) {\n            let status = '';\n            if (added) {\n                status += `${Strings.pluralize('file', added)} added`;\n            }\n            if (changed) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', changed)} changed`;\n            }\n            if (deleted) {\n                status += `${status.length === 0 ? '' : separator}${Strings.pluralize('file', deleted)} deleted`;\n            }\n            return `${prefix}${status}${suffix}`;\n        }\n\n        return `${prefix}${compact && added === 0 ? '' : `+${added}${separator}`}${\n            compact && changed === 0 ? '' : `~${changed}${separator}`\n        }${compact && deleted === 0 ? '' : `-${deleted}`}${suffix}`;\n    }\n\n    toFileCommit(fileName: string): GitLogCommit | undefined;\n    toFileCommit(file: GitFile): GitLogCommit;\n    toFileCommit(fileNameOrFile: string | GitFile): GitLogCommit | undefined {\n        let file: GitFile | undefined;\n        if (typeof fileNameOrFile === 'string') {\n            const fileName = Strings.normalizePath(paths.relative(this.repoPath, fileNameOrFile));\n            file = this.files.find(f => f.fileName === fileName);\n            if (file === undefined) return undefined;\n        }\n        else {\n            file = fileNameOrFile;\n        }\n\n        let sha;\n        // If this is a stash commit with an untracked file\n        if (this.type === GitCommitType.Stash && file.status === '?') {\n            sha = `${this.sha}^3`;\n        }\n\n        // If this isn't a single-file commit, we can't trust the previousSha\n        const previousSha = this.isFile ? this.previousSha : `${this.sha}^`;\n\n        return this.with({\n            type: this.isStash ? GitCommitType.StashFile : GitCommitType.File,\n            sha: sha,\n            fileName: file.fileName,\n            originalFileName: file.originalFileName,\n            previousSha: previousSha,\n            previousFileName: file.originalFileName || file.fileName,\n            status: file.status,\n            files: [file]\n        });\n    }\n\n    with(changes: {\n        type?: GitCommitType;\n        sha?: string | null;\n        fileName?: string;\n        author?: string;\n        email?: string;\n        date?: Date;\n        committedDate?: Date;\n        message?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n        status?: GitFileStatus;\n        files?: GitFile[] | null;\n    }): GitLogCommit {\n        return new GitLogCommit(\n            changes.type || this.type,\n            this.repoPath,\n            this.getChangedValue(changes.sha, this.sha)!,\n            changes.author || this.author,\n            changes.email || this.email,\n            changes.date || this.date,\n            changes.committedDate || this.committedDate,\n            changes.message || this.message,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.files, this.files) || [],\n            changes.status || this.status,\n            this.getChangedValue(changes.originalFileName, this.originalFileName),\n            this.getChangedValue(changes.previousSha, this.previousSha),\n            this.getChangedValue(changes.previousFileName, this.previousFileName),\n            undefined\n        );\n    }\n}\n","'use strict';\nimport { RemoteProvider } from '../remotes/factory';\n\nexport enum GitRemoteType {\n    Fetch = 'fetch',\n    Push = 'push'\n}\n\nexport class GitRemote {\n    constructor(\n        public readonly repoPath: string,\n        public readonly name: string,\n        public readonly scheme: string,\n        public readonly domain: string,\n        public readonly path: string,\n        public readonly provider: RemoteProvider | undefined,\n        public readonly types: { type: GitRemoteType; url: string }[]\n    ) {}\n}\n","'use strict';\nimport { commands, env, Range, Uri, window } from 'vscode';\nimport { BuiltInCommands } from '../../constants';\nimport { Logger } from '../../logger';\nimport { Messages } from '../../messages';\nimport { GitLogCommit } from '../models/logCommit';\n\nexport enum RemoteResourceType {\n    Branch = 'branch',\n    Branches = 'branches',\n    Commit = 'commit',\n    File = 'file',\n    Repo = 'repo',\n    Revision = 'revision'\n}\n\nexport type RemoteResource =\n    | {\n          type: RemoteResourceType.Branch;\n          branch: string;\n      }\n    | {\n          type: RemoteResourceType.Branches;\n      }\n    | {\n          type: RemoteResourceType.Commit;\n          sha: string;\n      }\n    | {\n          type: RemoteResourceType.File;\n          branch?: string;\n          fileName: string;\n          range?: Range;\n      }\n    | {\n          type: RemoteResourceType.Repo;\n      }\n    | {\n          type: RemoteResourceType.Revision;\n          branch?: string;\n          commit?: GitLogCommit;\n          fileName: string;\n          range?: Range;\n          sha?: string;\n      };\n\nexport function getNameFromRemoteResource(resource: RemoteResource) {\n    switch (resource.type) {\n        case RemoteResourceType.Branch:\n            return 'Branch';\n        case RemoteResourceType.Branches:\n            return 'Branches';\n        case RemoteResourceType.Commit:\n            return 'Commit';\n        case RemoteResourceType.File:\n            return 'File';\n        case RemoteResourceType.Repo:\n            return 'Repository';\n        case RemoteResourceType.Revision:\n            return 'Revision';\n        default:\n            return '';\n    }\n}\n\nexport abstract class RemoteProvider {\n    private _name: string | undefined;\n\n    constructor(\n        public readonly domain: string,\n        public readonly path: string,\n        public readonly protocol: string = 'https',\n        name?: string,\n        public readonly custom: boolean = false\n    ) {\n        this._name = name;\n    }\n\n    get icon(): string {\n        return 'remote';\n    }\n\n    abstract get name(): string;\n\n    protected get baseUrl() {\n        return `${this.protocol}://${this.domain}/${this.path}`;\n    }\n\n    enrichMessage(message: string): string {\n        return message;\n    }\n\n    protected formatName(name: string) {\n        if (this._name !== undefined) return this._name;\n        return `${name}${this.custom ? ` (${this.domain})` : ''}`;\n    }\n\n    protected splitPath(): [string, string] {\n        const index = this.path.indexOf('/');\n        return [this.path.substring(0, index), this.path.substring(index + 1)];\n    }\n\n    protected getUrlForRepository(): string {\n        return this.baseUrl;\n    }\n    protected abstract getUrlForBranches(): string;\n    protected abstract getUrlForBranch(branch: string): string;\n    protected abstract getUrlForCommit(sha: string): string;\n    protected abstract getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string;\n\n    private async openUrl(url?: string): Promise<{} | undefined> {\n        if (url === undefined) return undefined;\n\n        return commands.executeCommand(BuiltInCommands.Open, Uri.parse(url));\n    }\n\n    async copy(resource: RemoteResource): Promise<{} | undefined> {\n        const url = this.url(resource);\n        if (url === undefined) return undefined;\n\n        try {\n            void (await env.clipboard.writeText(url));\n\n            return undefined;\n        }\n        catch (ex) {\n            if (ex.message.includes(\"Couldn't find the required `xsel` binary\")) {\n                window.showErrorMessage(\n                    `Unable to copy remote url, xsel is not installed. Please install it via your package manager, e.g. \\`sudo apt install xsel\\``\n                );\n                return;\n            }\n\n            Logger.error(ex, 'CopyRemoteUrlToClipboardCommand');\n            return Messages.showGenericErrorMessage('Unable to copy remote url');\n        }\n    }\n\n    open(resource: RemoteResource): Promise<{} | undefined> {\n        return this.openUrl(this.url(resource));\n    }\n\n    url(resource: RemoteResource): string | undefined {\n        switch (resource.type) {\n            case RemoteResourceType.Branch:\n                return this.getUrlForBranch(resource.branch);\n            case RemoteResourceType.Branches:\n                return this.getUrlForBranches();\n            case RemoteResourceType.Commit:\n                return this.getUrlForCommit(resource.sha);\n            case RemoteResourceType.File:\n                return this.getUrlForFile(resource.fileName, resource.branch, undefined, resource.range);\n            case RemoteResourceType.Repo:\n                return this.getUrlForRepository();\n            case RemoteResourceType.Revision:\n                return this.getUrlForFile(resource.fileName, resource.branch, resource.sha, resource.range);\n        }\n\n        return undefined;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(#([0-9]+))\\b/gi;\nconst stripGitRegex = /\\/_git\\/?/i;\n\nconst sshDomainRegex = /^ssh\\./i;\nconst sshPathRegex = /^\\/?v\\d\\//i;\n\nexport class AzureDevOpsRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string) {\n        domain = domain.replace(sshDomainRegex, '');\n        path = path.replace(sshPathRegex, '');\n\n        super(domain, path, protocol, name);\n    }\n\n    get icon() {\n        return 'vsts';\n    }\n\n    get name() {\n        return 'Azure DevOps';\n    }\n\n    enrichMessage(message: string): string {\n        // Strip off any `_git` part from the repo url\n        const baseUrl = this.baseUrl.replace(stripGitRegex, '/');\n        // Matches #123\n        return message.replace(issueEnricherRegex, `$1[$2](${baseUrl}/_workitems/edit/$3 \"Open Work Item $2\")`);\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/?version=GB${branch}&_a=history`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commit/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `&line=${range.start.line}`;\n            }\n            else {\n                line = `&line=${range.start.line}&lineEnd=${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/commit/${sha}/?_a=contents&path=%2F${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/?path=%2F${fileName}&version=GB${branch}&_a=contents${line}`;\n        return `${this.baseUrl}?path=%2F${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(issue #([0-9]+))\\b/gi;\nconst prEnricherRegex = /(^|\\s)(pull request #([0-9]+))\\b/gi;\n\nexport class BitbucketRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    get icon() {\n        return 'bitbucket';\n    }\n\n    get name() {\n        return this.formatName('Bitbucket');\n    }\n\n    enrichMessage(message: string): string {\n        return (\n            message\n                // Matches issue #123\n                .replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`)\n                // Matches pull request #123\n                .replace(prEnricherRegex, `$1[$2](${this.baseUrl}/pull-requests/$3 \"Open PR $2\")`)\n        );\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits/branch/${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commits/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#${fileName}-${range.start.line}`;\n            }\n            else {\n                line = `#${fileName}-${range.start.line}:${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/src/${sha}/${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/src/${branch}/${fileName}${line}`;\n        return `${this.baseUrl}?path=${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(issue #([0-9]+))\\b/gi;\nconst prEnricherRegex = /(^|\\s)(pull request #([0-9]+))\\b/gi;\n\nexport class BitbucketServerRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    protected get baseUrl() {\n        const [project, repo] = this.splitPath();\n        return `https://${this.domain}/projects/${project}/repos/${repo}`;\n    }\n\n    get icon() {\n        return 'bitbucket';\n    }\n\n    get name() {\n        return this.formatName('Bitbucket Server');\n    }\n\n    enrichMessage(message: string): string {\n        return (\n            message\n                // Matches issue #123\n                .replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`)\n                // Matches pull request #123\n                .replace(prEnricherRegex, `$1[$2](${this.baseUrl}/pull-requests/$3 \"Open PR $2\")`)\n        );\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits?until=${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commits/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#${range.start.line}`;\n            }\n            else {\n                line = `#${range.start.line}-${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/browse/${fileName}?at=${sha}${line}`;\n        if (branch) return `${this.baseUrl}/browse/${fileName}?at=${branch}${line}`;\n        return `${this.baseUrl}/browse/${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemotesUrlsConfig } from '../../configuration';\nimport { Strings } from '../../system';\nimport { RemoteProvider } from './provider';\n\nexport class CustomRemote extends RemoteProvider {\n    private readonly urls: RemotesUrlsConfig;\n\n    constructor(domain: string, path: string, urls: RemotesUrlsConfig, protocol?: string, name?: string) {\n        super(domain, path, protocol, name, true);\n        this.urls = urls;\n    }\n\n    get name() {\n        return this.formatName('Custom');\n    }\n\n    protected getUrlForRepository(): string {\n        return Strings.interpolate(this.urls.repository, this.getContext());\n    }\n\n    protected getUrlForBranches(): string {\n        return Strings.interpolate(this.urls.branches, this.getContext());\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return Strings.interpolate(this.urls.branch, this.getContext({ branch: branch }));\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return Strings.interpolate(this.urls.commit, this.getContext({ id: sha }));\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = Strings.interpolate(this.urls.fileLine, { line: range.start.line });\n            }\n            else {\n                line = Strings.interpolate(this.urls.fileRange, { start: range.start.line, end: range.end.line });\n            }\n        }\n\n        if (sha) {\n            return Strings.interpolate(\n                this.urls.fileInCommit,\n                this.getContext({ id: sha, file: fileName, line: line })\n            );\n        }\n        if (branch) {\n            return Strings.interpolate(\n                this.urls.fileInBranch,\n                this.getContext({ branch: branch, file: fileName, line: line })\n            );\n        }\n        return Strings.interpolate(this.urls.file, this.getContext({ file: fileName, line: line }));\n    }\n\n    private getContext(context?: {}) {\n        const [repoBase, repoPath] = this.splitPath();\n        return {\n            repo: this.path,\n            repoBase: repoBase,\n            repoPath: repoPath,\n            ...(context || {})\n        };\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)((?:#|gh-)([0-9]+))\\b/gi;\nconst issueEnricher3rdParyRegex = /\\b((\\w+-?\\w+(?!-)\\/\\w+-?\\w+(?!-))#([0-9]+))\\b/g;\n\nexport class GitHubRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    get icon() {\n        return 'github';\n    }\n\n    get name() {\n        return this.formatName('GitHub');\n    }\n\n    enrichMessage(message: string): string {\n        return (\n            message\n                // Matches #123 or gh-123 or GH-123\n                .replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`)\n                // Matches eamodio/vscode-gitlens#123\n                .replace(\n                    issueEnricher3rdParyRegex,\n                    `[$1](${this.protocol}://${this.domain}/$2/issues/$3 \"Open Issue #$3 from $2\")`\n                )\n        );\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits/${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commit/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#L${range.start.line}`;\n            }\n            else {\n                line = `#L${range.start.line}-L${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/blob/${sha}/${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/blob/${branch}/${fileName}${line}`;\n        return `${this.baseUrl}?path=${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { Range } from 'vscode';\nimport { RemoteProvider } from './provider';\n\nconst issueEnricherRegex = /(^|\\s)(#([0-9]+))\\b/gi;\n\nexport class GitLabRemote extends RemoteProvider {\n    constructor(domain: string, path: string, protocol?: string, name?: string, custom: boolean = false) {\n        super(domain, path, protocol, name, custom);\n    }\n\n    get icon() {\n        return 'gitlab';\n    }\n\n    get name() {\n        return this.formatName('GitLab');\n    }\n\n    enrichMessage(message: string): string {\n        // Matches #123\n        return message.replace(issueEnricherRegex, `$1[$2](${this.baseUrl}/issues/$3 \"Open Issue $2\")`);\n    }\n\n    protected getUrlForBranches(): string {\n        return `${this.baseUrl}/branches`;\n    }\n\n    protected getUrlForBranch(branch: string): string {\n        return `${this.baseUrl}/commits/${branch}`;\n    }\n\n    protected getUrlForCommit(sha: string): string {\n        return `${this.baseUrl}/commit/${sha}`;\n    }\n\n    protected getUrlForFile(fileName: string, branch?: string, sha?: string, range?: Range): string {\n        let line = '';\n        if (range) {\n            if (range.start.line === range.end.line) {\n                line = `#L${range.start.line}`;\n            }\n            else {\n                line = `#L${range.start.line}-${range.end.line}`;\n            }\n        }\n\n        if (sha) return `${this.baseUrl}/blob/${sha}/${fileName}${line}`;\n        if (branch) return `${this.baseUrl}/blob/${branch}/${fileName}${line}`;\n        return `${this.baseUrl}?path=${fileName}${line}`;\n    }\n}\n","'use strict';\nimport { CustomRemoteType, RemotesConfig } from '../../configuration';\nimport { Logger } from '../../logger';\nimport { AzureDevOpsRemote } from './azure-devops';\nimport { BitbucketRemote } from './bitbucket';\nimport { BitbucketServerRemote } from './bitbucket-server';\nimport { CustomRemote } from './custom';\nimport { GitHubRemote } from './github';\nimport { GitLabRemote } from './gitlab';\nimport { RemoteProvider } from './provider';\n\nexport { RemoteProvider };\nexport type RemoteProviders = [string | RegExp, ((domain: string, path: string) => RemoteProvider)][];\n\nconst defaultProviders: RemoteProviders = [\n    ['bitbucket.org', (domain: string, path: string) => new BitbucketRemote(domain, path)],\n    ['github.com', (domain: string, path: string) => new GitHubRemote(domain, path)],\n    ['gitlab.com', (domain: string, path: string) => new GitLabRemote(domain, path)],\n    [/\\bdev\\.azure\\.com$/i, (domain: string, path: string) => new AzureDevOpsRemote(domain, path)],\n    [/\\bbitbucket\\b/i, (domain: string, path: string) => new BitbucketServerRemote(domain, path)],\n    [/\\bgitlab\\b/i, (domain: string, path: string) => new GitLabRemote(domain, path)],\n    [/\\bvisualstudio\\.com$/i, (domain: string, path: string) => new AzureDevOpsRemote(domain, path)]\n];\n\nexport class RemoteProviderFactory {\n    static factory(providers: RemoteProviders): (domain: string, path: string) => RemoteProvider | undefined {\n        return (domain: string, path: string) => this.create(providers, domain, path);\n    }\n\n    static create(providers: RemoteProviders, domain: string, path: string): RemoteProvider | undefined {\n        try {\n            const key = domain.toLowerCase();\n            for (const [matcher, creator] of providers) {\n                if (\n                    (typeof matcher === 'string' && matcher === key) ||\n                    (typeof matcher !== 'string' && matcher.test(key))\n                ) {\n                    return creator(domain, path);\n                }\n            }\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'RemoteProviderFactory');\n            return undefined;\n        }\n    }\n\n    static loadProviders(cfg: RemotesConfig[] | null | undefined): RemoteProviders {\n        const providers: RemoteProviders = [];\n\n        if (cfg != null && cfg.length > 0) {\n            for (const rc of cfg) {\n                const provider = this.getCustomProvider(rc);\n                if (provider === undefined) continue;\n\n                providers.push([rc.domain.toLowerCase(), provider]);\n            }\n        }\n\n        providers.push(...defaultProviders);\n        return providers;\n    }\n\n    private static getCustomProvider(cfg: RemotesConfig) {\n        switch (cfg.type) {\n            case CustomRemoteType.Bitbucket:\n                return (domain: string, path: string) =>\n                    new BitbucketRemote(domain, path, cfg.protocol, cfg.name, true);\n            case CustomRemoteType.BitbucketServer:\n                return (domain: string, path: string) =>\n                    new BitbucketServerRemote(domain, path, cfg.protocol, cfg.name, true);\n            case CustomRemoteType.Custom:\n                return (domain: string, path: string) =>\n                    new CustomRemote(domain, path, cfg.urls!, cfg.protocol, cfg.name);\n            case CustomRemoteType.GitHub:\n                return (domain: string, path: string) => new GitHubRemote(domain, path, cfg.protocol, cfg.name, true);\n            case CustomRemoteType.GitLab:\n                return (domain: string, path: string) => new GitLabRemote(domain, path, cfg.protocol, cfg.name, true);\n        }\n        return undefined;\n    }\n}\n","'use strict';\nimport * as fs from 'fs';\nimport * as paths from 'path';\nimport {\n    commands,\n    ConfigurationChangeEvent,\n    Disposable,\n    Event,\n    EventEmitter,\n    ProgressLocation,\n    RelativePattern,\n    Uri,\n    window,\n    workspace,\n    WorkspaceFolder\n} from 'vscode';\nimport { configuration, RemotesConfig } from '../../configuration';\nimport { Container } from '../../container';\nimport { Functions, gate, log } from '../../system';\nimport { GitBranch, GitDiffShortStat, GitRemote, GitStash, GitStatus, GitTag } from '../git';\nimport { GitUri } from '../gitUri';\nimport { RemoteProviderFactory, RemoteProviders } from '../remotes/factory';\n\nexport enum RepositoryChange {\n    Config = 'config',\n    Closed = 'closed',\n    // FileSystem = 'file-system',\n    Remotes = 'remotes',\n    Repository = 'repository',\n    Stashes = 'stashes',\n    Tags = 'tags'\n}\n\nexport class RepositoryChangeEvent {\n    readonly changes: RepositoryChange[] = [];\n\n    constructor(\n        public readonly repository?: Repository\n    ) {}\n\n    changed(change: RepositoryChange, solely: boolean = false) {\n        if (solely) return this.changes.length === 1 && this.changes[0] === change;\n\n        return this.changes.includes(change);\n\n        // const changed = this.changes.includes(change);\n        // if (changed) return true;\n\n        // if (change === RepositoryChange.Repository) {\n        //     return this.changes.includes(RepositoryChange.Stashes);\n        // }\n\n        // return false;\n    }\n}\n\nexport interface RepositoryFileSystemChangeEvent {\n    readonly repository?: Repository;\n    readonly uris: Uri[];\n}\n\nexport class Repository implements Disposable {\n    private _onDidChange = new EventEmitter<RepositoryChangeEvent>();\n    get onDidChange(): Event<RepositoryChangeEvent> {\n        return this._onDidChange.event;\n    }\n\n    private _onDidChangeFileSystem = new EventEmitter<RepositoryFileSystemChangeEvent>();\n    get onDidChangeFileSystem(): Event<RepositoryFileSystemChangeEvent> {\n        return this._onDidChangeFileSystem.event;\n    }\n\n    readonly formattedName: string;\n    readonly index: number;\n    readonly name: string;\n    readonly normalizedPath: string;\n\n    private _branch: Promise<GitBranch | undefined> | undefined;\n    private readonly _disposable: Disposable;\n    private _fireChangeDebounced: ((e: RepositoryChangeEvent) => void) | undefined = undefined;\n    private _fireFileSystemChangeDebounced: ((e: RepositoryFileSystemChangeEvent) => void) | undefined = undefined;\n    private _fsWatchCounter = 0;\n    private _fsWatcherDisposable: Disposable | undefined;\n    private _pendingChanges: { repo?: RepositoryChangeEvent; fs?: RepositoryFileSystemChangeEvent } = {};\n    private _providers: RemoteProviders | undefined;\n    private _remotes: Promise<GitRemote[]> | undefined;\n    private _suspended: boolean;\n\n    constructor(\n        public readonly folder: WorkspaceFolder,\n        public readonly path: string,\n        public readonly root: boolean,\n        private readonly onAnyRepositoryChanged: (repo: Repository, reason: RepositoryChange) => void,\n        suspended: boolean,\n        closed: boolean = false\n    ) {\n        if (root) {\n            this.formattedName = folder.name;\n        }\n        else {\n            const relativePath = paths.relative(folder.uri.fsPath, path);\n            this.formattedName = relativePath ? `${folder.name} (${relativePath})` : folder.name;\n        }\n        this.index = folder.index;\n        this.name = folder.name;\n\n        this.normalizedPath = (this.path.endsWith('/') ? this.path : `${this.path}/`).toLowerCase();\n\n        this._suspended = suspended;\n        this._closed = closed;\n\n        // TODO: createFileSystemWatcher doesn't work unless the folder is part of the workspaceFolders\n        const watcher = workspace.createFileSystemWatcher(\n            new RelativePattern(\n                folder,\n                '{\\\n**/.git/config,\\\n**/.git/index,\\\n**/.git/HEAD,\\\n**/.git/refs/stash,\\\n**/.git/refs/heads/**,\\\n**/.git/refs/remotes/**,\\\n**/.git/refs/tags/**,\\\n**/.gitignore\\\n}'\n            )\n        );\n        this._disposable = Disposable.from(\n            watcher,\n            watcher.onDidChange(this.onRepositoryChanged, this),\n            watcher.onDidCreate(this.onRepositoryChanged, this),\n            watcher.onDidDelete(this.onRepositoryChanged, this),\n            configuration.onDidChange(this.onConfigurationChanged, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.stopWatchingFileSystem();\n\n        // // Clean up any disposables in storage\n        // for (const item of this.storage.values()) {\n        //     if (item != null && typeof item.dispose === 'function') {\n        //         item.dispose();\n        //     }\n        // }\n\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const section = configuration.name('remotes').value;\n        if (configuration.changed(e, section, this.folder.uri)) {\n            this._providers = RemoteProviderFactory.loadProviders(\n                configuration.get<RemotesConfig[] | null | undefined>(section, this.folder.uri)\n            );\n\n            if (!configuration.initializing(e)) {\n                this._remotes = undefined;\n                this.fireChange(RepositoryChange.Remotes);\n            }\n        }\n    }\n\n    private onFileSystemChanged(uri: Uri) {\n        // Ignore .git changes\n        if (/\\.git(?:\\/|\\\\|$)/.test(uri.fsPath)) return;\n\n        this.fireFileSystemChange(uri);\n    }\n\n    private onRepositoryChanged(uri: Uri) {\n        if (uri !== undefined && uri.path.endsWith('refs/stash')) {\n            this.fireChange(RepositoryChange.Stashes);\n\n            return;\n        }\n\n        this._branch = undefined;\n\n        if (uri !== undefined && uri.path.endsWith('refs/remotes')) {\n            this._remotes = undefined;\n            this.fireChange(RepositoryChange.Remotes);\n\n            return;\n        }\n\n        if (uri !== undefined && uri.path.endsWith('refs/tags')) {\n            this.fireChange(RepositoryChange.Tags);\n\n            return;\n        }\n\n        if (uri !== undefined && uri.path.endsWith('config')) {\n            this._remotes = undefined;\n            this.fireChange(RepositoryChange.Config, RepositoryChange.Remotes);\n\n            return;\n        }\n\n        this.onAnyRepositoryChanged(this, RepositoryChange.Repository);\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    private _closed: boolean = false;\n    get closed(): boolean {\n        return this._closed;\n    }\n    set closed(value: boolean) {\n        const changed = this._closed !== value;\n        this._closed = value;\n        if (changed) {\n            this.onAnyRepositoryChanged(this, RepositoryChange.Closed);\n            this.fireChange(RepositoryChange.Closed);\n        }\n    }\n\n    containsUri(uri: Uri) {\n        if (uri instanceof GitUri) {\n            uri = uri.repoPath !== undefined ? GitUri.file(uri.repoPath) : uri.documentUri();\n        }\n\n        return this.folder === workspace.getWorkspaceFolder(uri);\n    }\n\n    @gate()\n    @log()\n    async fetch(options: { progress?: boolean; remote?: string } = {}) {\n        const { progress, ...opts } = { progress: true, ...options };\n        if (!progress) return this.fetchCore(opts);\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Fetching ${opts.remote ? `${opts.remote} of ` : ''}${this.formattedName}...`,\n                cancellable: false\n            },\n            () => this.fetchCore(opts)\n        );\n    }\n\n    private async fetchCore(options: { remote?: string } = {}) {\n        await Container.git.fetch(this.path, options.remote);\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    getBranch(): Promise<GitBranch | undefined> {\n        if (this._branch === undefined) {\n            this._branch = Container.git.getBranch(this.path);\n        }\n        return this._branch;\n    }\n\n    getBranches(): Promise<GitBranch[]> {\n        return Container.git.getBranches(this.path);\n    }\n\n    getChangedFilesCount(sha?: string): Promise<GitDiffShortStat | undefined> {\n        return Container.git.getChangedFilesCount(this.path, sha);\n    }\n\n    async getLastFetched(): Promise<number> {\n        const hasRemotes = await this.hasRemotes();\n        if (!hasRemotes || Container.vsls.isMaybeGuest) return 0;\n\n        return new Promise<number>((resolve, reject) =>\n            fs.stat(paths.join(this.path, '.git/FETCH_HEAD'), (err, stat) => resolve(err ? 0 : stat.mtime.getTime()))\n        );\n    }\n\n    getRemotes(): Promise<GitRemote[]> {\n        if (this._remotes === undefined) {\n            if (this._providers === undefined) {\n                const remotesCfg = configuration.get<RemotesConfig[] | null | undefined>(\n                    configuration.name('remotes').value,\n                    this.folder.uri\n                );\n                this._providers = RemoteProviderFactory.loadProviders(remotesCfg);\n            }\n\n            this._remotes = Container.git.getRemotesCore(this.path, this._providers);\n        }\n\n        return this._remotes;\n    }\n\n    getStashList(): Promise<GitStash | undefined> {\n        return Container.git.getStashList(this.path);\n    }\n\n    getStatus(): Promise<GitStatus | undefined> {\n        return Container.git.getStatusForRepo(this.path);\n    }\n\n    getTags(options?: { includeRefs?: boolean }): Promise<GitTag[]> {\n        return Container.git.getTags(this.path, options);\n    }\n\n    async hasRemotes(): Promise<boolean> {\n        const remotes = await this.getRemotes();\n        return remotes !== undefined && remotes.length > 0;\n    }\n\n    async hasTrackingBranch(): Promise<boolean> {\n        const branch = await this.getBranch();\n        return branch !== undefined && branch.tracking !== undefined;\n    }\n\n    @gate()\n    @log()\n    async pull(options: { progress?: boolean } = {}) {\n        const { progress } = { progress: true, ...options };\n        if (!progress) return this.pullCore();\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Pulling ${this.formattedName}...`,\n                cancellable: false\n            },\n            () => this.pullCore()\n        );\n    }\n\n    private async pullCore() {\n        await commands.executeCommand('git.pull', this.path);\n\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    @gate()\n    @log()\n    async push(options: { force?: boolean; progress?: boolean } = {}) {\n        const { force, progress } = { progress: true, ...options };\n        if (!progress) return this.pushCore(force);\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Pushing ${this.formattedName}...`,\n                cancellable: false\n            },\n            () => this.pushCore(force)\n        );\n    }\n\n    private async pushCore(force: boolean = false) {\n        await commands.executeCommand(force ? 'git.pushForce' : 'git.push', this.path);\n\n        this.fireChange(RepositoryChange.Repository);\n    }\n\n    resume() {\n        if (!this._suspended) return;\n\n        this._suspended = false;\n\n        // If we've come back into focus and we are dirty, fire the change events\n\n        if (this._pendingChanges.repo !== undefined) {\n            this._fireChangeDebounced!(this._pendingChanges.repo);\n        }\n\n        if (this._pendingChanges.fs !== undefined) {\n            this._fireFileSystemChangeDebounced!(this._pendingChanges.fs);\n        }\n    }\n\n    startWatchingFileSystem() {\n        this._fsWatchCounter++;\n        if (this._fsWatcherDisposable !== undefined) return;\n\n        // TODO: createFileSystemWatcher doesn't work unless the folder is part of the workspaceFolders\n        const watcher = workspace.createFileSystemWatcher(new RelativePattern(this.folder, `**`));\n        this._fsWatcherDisposable = Disposable.from(\n            watcher,\n            watcher.onDidChange(this.onFileSystemChanged, this),\n            watcher.onDidCreate(this.onFileSystemChanged, this),\n            watcher.onDidDelete(this.onFileSystemChanged, this)\n        );\n    }\n\n    stopWatchingFileSystem() {\n        if (this._fsWatcherDisposable === undefined) return;\n        if (--this._fsWatchCounter > 0) return;\n\n        this._fsWatcherDisposable.dispose();\n        this._fsWatcherDisposable = undefined;\n    }\n\n    suspend() {\n        this._suspended = true;\n    }\n\n    private fireChange(...reasons: RepositoryChange[]) {\n        if (this._fireChangeDebounced === undefined) {\n            this._fireChangeDebounced = Functions.debounce(this.fireChangeCore, 250);\n        }\n\n        if (this._pendingChanges.repo === undefined) {\n            this._pendingChanges.repo = new RepositoryChangeEvent(this);\n        }\n\n        const e = this._pendingChanges.repo;\n\n        for (const reason of reasons) {\n            if (!e.changes.includes(reason)) {\n                e.changes.push(reason);\n            }\n        }\n\n        if (this._suspended) return;\n\n        this._fireChangeDebounced(e);\n    }\n\n    private fireChangeCore(e: RepositoryChangeEvent) {\n        this._pendingChanges.repo = undefined;\n\n        this._onDidChange.fire(e);\n    }\n\n    private fireFileSystemChange(uri: Uri) {\n        if (this._fireFileSystemChangeDebounced === undefined) {\n            this._fireFileSystemChangeDebounced = Functions.debounce(this.fireFileSystemChangeCore, 2500);\n        }\n\n        if (this._pendingChanges.fs === undefined) {\n            this._pendingChanges.fs = { repository: this, uris: [] };\n        }\n\n        const e = this._pendingChanges.fs;\n        e.uris.push(uri);\n\n        if (this._suspended) return;\n\n        this._fireFileSystemChangeDebounced(e);\n    }\n\n    private fireFileSystemChangeCore(e: RepositoryFileSystemChangeEvent) {\n        this._pendingChanges.fs = undefined;\n\n        this._onDidChangeFileSystem.fire(e);\n    }\n}\n","'use strict';\nimport { GitCommitType } from './commit';\nimport { GitFile, GitFileStatus } from './file';\nimport { GitLogCommit } from './logCommit';\n\nexport class GitStashCommit extends GitLogCommit {\n    constructor(\n        type: GitCommitType,\n        public readonly stashName: string,\n        repoPath: string,\n        sha: string,\n        date: Date,\n        committedDate: Date,\n        message: string,\n        fileName: string,\n        files: GitFile[],\n        status?: GitFileStatus | undefined,\n        originalFileName?: string | undefined,\n        previousSha?: string | undefined,\n        previousFileName?: string | undefined\n    ) {\n        super(\n            type,\n            repoPath,\n            sha,\n            'You',\n            undefined,\n            date,\n            committedDate,\n            message,\n            fileName,\n            files,\n            status,\n            originalFileName,\n            previousSha === undefined ? `${sha}^` : previousSha,\n            previousFileName\n        );\n    }\n\n    get shortSha() {\n        return this.stashName;\n    }\n\n    with(changes: {\n        type?: GitCommitType;\n        sha?: string | null;\n        fileName?: string;\n        date?: Date;\n        committedDate?: Date;\n        message?: string;\n        originalFileName?: string | null;\n        previousFileName?: string | null;\n        previousSha?: string | null;\n        status?: GitFileStatus;\n        files?: GitFile[] | null;\n    }): GitLogCommit {\n        return new GitStashCommit(\n            changes.type || this.type,\n            this.stashName,\n            this.repoPath,\n            this.getChangedValue(changes.sha, this.sha)!,\n            changes.date || this.date,\n            changes.committedDate || this.committedDate,\n            changes.message || this.message,\n            changes.fileName || this.fileName,\n            this.getChangedValue(changes.files, this.files) || [],\n            changes.status || this.status,\n            this.getChangedValue(changes.originalFileName, this.originalFileName),\n            this.getChangedValue(changes.previousSha, this.previousSha),\n            this.getChangedValue(changes.previousFileName, this.previousFileName)\n        );\n    }\n}\n","'use strict';\n\nexport class GitTag {\n    constructor(\n        public readonly repoPath: string,\n        public readonly name: string,\n        public readonly sha?: string,\n        public readonly annotation?: string\n    ) {}\n\n    get ref() {\n        return this.name;\n    }\n\n    private _basename: string | undefined;\n    getBasename(): string {\n        if (this._basename === undefined) {\n            const index = this.name.lastIndexOf('/');\n            this._basename = index !== -1 ? this.name.substring(index + 1) : this.name;\n        }\n\n        return this._basename;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Strings } from '../../system';\nimport { Git, GitAuthor, GitBlame, GitBlameCommit, GitCommitLine } from './../git';\n\ninterface BlameEntry {\n    sha: string;\n\n    line: number;\n    originalLine: number;\n    lineCount: number;\n\n    author: string;\n    authorDate?: string;\n    authorTimeZone?: string;\n    authorEmail?: string;\n\n    previousSha?: string;\n    previousFileName?: string;\n\n    fileName?: string;\n\n    summary?: string;\n}\n\nexport class GitBlameParser {\n    static parse(\n        data: string,\n        repoPath: string | undefined,\n        fileName: string,\n        currentUser: { name?: string; email?: string } | undefined\n    ): GitBlame | undefined {\n        if (!data) return undefined;\n\n        const authors: Map<string, GitAuthor> = new Map();\n        const commits: Map<string, GitBlameCommit> = new Map();\n        const lines: GitCommitLine[] = [];\n\n        let relativeFileName = repoPath && fileName;\n\n        let entry: BlameEntry | undefined = undefined;\n        let line: string;\n        let lineParts: string[];\n\n        let first = true;\n\n        for (line of Strings.lines(data)) {\n            lineParts = line.split(' ');\n            if (lineParts.length < 2) continue;\n\n            if (entry === undefined) {\n                entry = {\n                    sha: lineParts[0],\n                    originalLine: parseInt(lineParts[1], 10) - 1,\n                    line: parseInt(lineParts[2], 10) - 1,\n                    lineCount: parseInt(lineParts[3], 10)\n                } as BlameEntry;\n\n                continue;\n            }\n\n            switch (lineParts[0]) {\n                case 'author':\n                    if (Git.isUncommitted(entry.sha)) {\n                        entry.author = 'You';\n                    }\n                    else {\n                        entry.author = lineParts\n                            .slice(1)\n                            .join(' ')\n                            .trim();\n                    }\n                    break;\n\n                case 'author-mail':\n                    if (Git.isUncommitted(entry.sha)) {\n                        entry.authorEmail = currentUser !== undefined ? currentUser.email : undefined;\n                        continue;\n                    }\n\n                    entry.authorEmail = lineParts\n                        .slice(1)\n                        .join(' ')\n                        .trim();\n                    const start = entry.authorEmail.indexOf('<');\n                    if (start >= 0) {\n                        const end = entry.authorEmail.indexOf('>', start);\n                        if (end > start) {\n                            entry.authorEmail = entry.authorEmail.substring(start + 1, end);\n                        }\n                        else {\n                            entry.authorEmail = entry.authorEmail.substring(start + 1);\n                        }\n                    }\n\n                    break;\n\n                case 'author-time':\n                    entry.authorDate = lineParts[1];\n                    break;\n\n                case 'author-tz':\n                    entry.authorTimeZone = lineParts[1];\n                    break;\n\n                case 'summary':\n                    entry.summary = lineParts\n                        .slice(1)\n                        .join(' ')\n                        .trim();\n                    break;\n\n                case 'previous':\n                    entry.previousSha = lineParts[1];\n                    entry.previousFileName = lineParts.slice(2).join(' ');\n                    break;\n\n                case 'filename':\n                    entry.fileName = lineParts.slice(1).join(' ');\n\n                    if (first && repoPath === undefined) {\n                        // Try to get the repoPath from the most recent commit\n                        repoPath = Strings.normalizePath(\n                            fileName.replace(fileName.startsWith('/') ? `/${entry.fileName}` : entry.fileName!, '')\n                        );\n                        relativeFileName = Strings.normalizePath(paths.relative(repoPath, fileName));\n                    }\n                    else {\n                        relativeFileName = entry.fileName!;\n                    }\n                    first = false;\n\n                    GitBlameParser.parseEntry(entry, repoPath, relativeFileName, commits, authors, lines, currentUser);\n\n                    entry = undefined;\n                    break;\n\n                default:\n                    break;\n            }\n        }\n\n        for (const [, c] of commits) {\n            if (c.author === undefined) return;\n\n            const author = authors.get(c.author);\n            if (author === undefined) return;\n\n            author.lineCount += c.lines.length;\n        }\n\n        const sortedAuthors = new Map([...authors.entries()].sort((a, b) => b[1].lineCount - a[1].lineCount));\n\n        return {\n            repoPath: repoPath,\n            authors: sortedAuthors,\n            commits: commits,\n            lines: lines\n        } as GitBlame;\n    }\n\n    private static parseEntry(\n        entry: BlameEntry,\n        repoPath: string | undefined,\n        relativeFileName: string,\n        commits: Map<string, GitBlameCommit>,\n        authors: Map<string, GitAuthor>,\n        lines: GitCommitLine[],\n        currentUser: { name?: string; email?: string } | undefined\n    ) {\n        let commit = commits.get(entry.sha);\n        if (commit === undefined) {\n            if (entry.author !== undefined) {\n                if (\n                    currentUser !== undefined &&\n                    // Name or e-mail is configured\n                    (currentUser.name !== undefined || currentUser.email !== undefined) &&\n                    // Match on name if configured\n                    (currentUser.name === undefined || currentUser.name === entry.author) &&\n                    // Match on email if configured\n                    (currentUser.email === undefined || currentUser.email === entry.authorEmail)\n                ) {\n                    entry.author = 'You';\n                }\n\n                let author = authors.get(entry.author);\n                if (author === undefined) {\n                    author = {\n                        name: entry.author,\n                        lineCount: 0\n                    };\n                    authors.set(entry.author, author);\n                }\n            }\n\n            commit = new GitBlameCommit(\n                repoPath!,\n                entry.sha,\n                entry.author,\n                entry.authorEmail,\n                new Date((entry.authorDate as any) * 1000),\n                entry.summary!,\n                relativeFileName,\n                relativeFileName !== entry.fileName ? entry.fileName : undefined,\n                entry.previousSha,\n                entry.previousSha && entry.previousFileName,\n                []\n            );\n\n            commits.set(entry.sha, commit);\n        }\n\n        for (let i = 0, len = entry.lineCount; i < len; i++) {\n            const line: GitCommitLine = {\n                sha: entry.sha,\n                line: entry.line + i,\n                originalLine: entry.originalLine + i\n            };\n\n            if (commit.previousSha) {\n                line.previousSha = commit.previousSha;\n            }\n\n            commit.lines.push(line);\n            lines[line.line] = line;\n        }\n    }\n}\n","'use strict';\nimport { GitBranch } from './../git';\n\nconst branchWithTrackingRegex = /^(\\*?)\\s+(.+?)\\s+([0-9,a-f]+)\\s+(?:\\[(.*?\\/.*?)(?:\\:\\s(.*)\\]|\\]))?/gm;\nconst branchWithTrackingStateRegex = /^(?:ahead\\s([0-9]+))?[,\\s]*(?:behind\\s([0-9]+))?/;\n\nexport class GitBranchParser {\n    static parse(data: string, repoPath: string): GitBranch[] | undefined {\n        if (!data) return undefined;\n\n        const branches: GitBranch[] = [];\n\n        let ahead;\n        let behind;\n        let current;\n        let name;\n        let sha;\n        let state;\n        let tracking;\n        let match: RegExpExecArray | null = null;\n        do {\n            match = branchWithTrackingRegex.exec(data);\n            if (match == null) break;\n\n            [, current, name, sha, tracking, state] = match;\n            [ahead, behind] = this.parseState(state);\n            branches.push(\n                new GitBranch(\n                    repoPath,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + name).substr(1),\n                    current === '*',\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    sha === undefined ? undefined : (' ' + sha).substr(1),\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    tracking === undefined ? undefined : (' ' + tracking).substr(1),\n                    ahead,\n                    behind\n                )\n            );\n        } while (match != null);\n\n        if (!branches.length) return undefined;\n\n        return branches;\n    }\n\n    static parseState(state: string): [number, number] {\n        if (state == null) return [0, 0];\n\n        const match = branchWithTrackingStateRegex.exec(state);\n        if (match == null) return [0, 0];\n\n        const ahead = parseInt(match[1], 10);\n        const behind = parseInt(match[2], 10);\n        return [isNaN(ahead) ? 0 : ahead, isNaN(behind) ? 0 : behind];\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Range } from 'vscode';\nimport { Arrays, Strings } from '../../system';\nimport { Git, GitAuthor, GitCommitType, GitFile, GitFileStatus, GitLog, GitLogCommit } from './../git';\n\ninterface LogEntry {\n    ref?: string;\n\n    author?: string;\n    date?: string;\n    committedDate?: string;\n    email?: string;\n\n    parentShas?: string[];\n\n    fileName?: string;\n    originalFileName?: string;\n    files?: GitFile[];\n\n    status?: GitFileStatus;\n\n    summary?: string;\n}\n\nconst diffRegex = /diff --git a\\/(.*) b\\/(.*)/;\nconst emptyEntry: LogEntry = {};\n\nexport class GitLogParser {\n    static parse(\n        data: string,\n        type: GitCommitType,\n        repoPath: string | undefined,\n        fileName: string | undefined,\n        sha: string | undefined,\n        currentUser: { name?: string; email?: string } | undefined,\n        maxCount: number | undefined,\n        reverse: boolean,\n        range: Range | undefined\n    ): GitLog | undefined {\n        if (!data) return undefined;\n\n        let relativeFileName: string;\n        let recentCommit: GitLogCommit | undefined = undefined;\n\n        let entry: LogEntry = emptyEntry;\n        let line: string | undefined = undefined;\n        let token: number;\n\n        let i = 0;\n        let first = true;\n\n        const lines = Strings.lines(data + '</f>');\n        // Skip the first line since it will always be </f>\n        let next = lines.next();\n        if (next.done) return undefined;\n\n        if (repoPath !== undefined) {\n            repoPath = Strings.normalizePath(repoPath);\n        }\n\n        const authors: Map<string, GitAuthor> = new Map();\n        const commits: Map<string, GitLogCommit> = new Map();\n        let truncationCount = maxCount;\n\n        while (true) {\n            next = lines.next();\n            if (next.done) break;\n\n            line = next.value;\n\n            // Since log --reverse doesn't properly honor a max count -- enforce it here\n            if (reverse && maxCount && i >= maxCount) break;\n\n            // <<1-char token>> <data>\n            // e.g. <r> bd1452a2dc\n            token = line.charCodeAt(1);\n\n            switch (token) {\n                case 114: // 'r': // ref\n                    entry = {\n                        ref: line.substring(4)\n                    };\n                    break;\n\n                case 97: // 'a': // author\n                    if (Git.isUncommitted(entry.ref)) {\n                        entry.author = 'You';\n                    }\n                    else {\n                        entry.author = line.substring(4);\n                    }\n                    break;\n\n                case 101: // 'e': // author-mail\n                    entry.email = line.substring(4);\n                    break;\n\n                case 100: // 'd': // author-date\n                    entry.date = line.substring(4);\n                    break;\n\n                case 99: // 'c': // committer-date\n                    entry.committedDate = line.substring(4);\n                    break;\n\n                case 112: // 'p': // parents\n                    entry.parentShas = line.substring(4).split(' ');\n                    break;\n\n                case 115: // 's': // summary\n                    while (true) {\n                        next = lines.next();\n                        if (next.done) break;\n\n                        line = next.value;\n                        if (line === '</s>') break;\n\n                        if (entry.summary === undefined) {\n                            entry.summary = line;\n                        }\n                        else {\n                            entry.summary += `\\n${line}`;\n                        }\n                    }\n\n                    // Remove the trailing newline\n                    if (entry.summary != null && entry.summary.charCodeAt(entry.summary.length - 1) === 10) {\n                        entry.summary = entry.summary.slice(0, -1);\n                    }\n                    break;\n\n                case 102: // 'f': // files\n                    // Skip the blank line git adds before the files\n                    next = lines.next();\n                    if (next.done || next.value === '</f>') break;\n\n                    while (true) {\n                        next = lines.next();\n                        if (next.done) break;\n\n                        line = next.value;\n                        if (line === '</f>') break;\n\n                        if (line.startsWith('warning:')) continue;\n\n                        if (type === GitCommitType.Branch) {\n                            const status = {\n                                status: line[0] as GitFileStatus,\n                                fileName: line.substring(1),\n                                originalFileName: undefined\n                            };\n                            this.parseFileName(status);\n\n                            if (status.fileName) {\n                                if (entry.files === undefined) {\n                                    entry.files = [];\n                                }\n                                entry.files.push(status);\n                            }\n                        }\n                        else if (line.startsWith('diff')) {\n                            const matches = diffRegex.exec(line);\n                            if (matches != null) {\n                                entry.fileName = matches[1];\n                                const originalFileName = matches[2];\n                                if (entry.fileName !== originalFileName) {\n                                    entry.originalFileName = originalFileName;\n                                    entry.status = 'R';\n                                }\n                                else {\n                                    entry.status = 'M';\n                                }\n                            }\n\n                            while (true) {\n                                next = lines.next();\n                                if (next.done || next.value === '</f>') break;\n                            }\n                            break;\n                        }\n                        else {\n                            entry.status = line[0] as GitFileStatus;\n                            entry.fileName = line.substring(1);\n                            this.parseFileName(entry);\n                        }\n                    }\n\n                    if (entry.files !== undefined) {\n                        entry.fileName = Arrays.filterMap(entry.files, f => (f.fileName ? f.fileName : undefined)).join(\n                            ', '\n                        );\n                    }\n\n                    if (first && repoPath === undefined && type === GitCommitType.File && fileName !== undefined) {\n                        // Try to get the repoPath from the most recent commit\n                        repoPath = Strings.normalizePath(\n                            fileName.replace(fileName.startsWith('/') ? `/${entry.fileName}` : entry.fileName!, '')\n                        );\n                        relativeFileName = Strings.normalizePath(paths.relative(repoPath, fileName));\n                    }\n                    else {\n                        relativeFileName = entry.fileName!;\n                    }\n                    first = false;\n\n                    const commit = commits.get(entry.ref!);\n                    if (commit === undefined) {\n                        i++;\n                    }\n                    else if (truncationCount) {\n                        // Since this matches an existing commit it will be skipped, so reduce our truncationCount to ensure accurate truncation detection\n                        truncationCount--;\n                    }\n\n                    recentCommit = GitLogParser.parseEntry(\n                        entry,\n                        commit,\n                        type,\n                        repoPath,\n                        relativeFileName,\n                        commits,\n                        authors,\n                        recentCommit,\n                        currentUser\n                    );\n\n                    break;\n            }\n        }\n\n        return {\n            repoPath: repoPath,\n            authors: authors,\n            commits: commits,\n            sha: sha,\n            count: i,\n            maxCount: maxCount,\n            range: range,\n            truncated: Boolean(truncationCount && i >= truncationCount && truncationCount !== 1)\n        } as GitLog;\n    }\n\n    private static parseEntry(\n        entry: LogEntry,\n        commit: GitLogCommit | undefined,\n        type: GitCommitType,\n        repoPath: string | undefined,\n        relativeFileName: string,\n        commits: Map<string, GitLogCommit>,\n        authors: Map<string, GitAuthor>,\n        recentCommit: GitLogCommit | undefined,\n        currentUser: { name?: string; email?: string } | undefined\n    ): GitLogCommit | undefined {\n        if (commit === undefined) {\n            if (entry.author !== undefined) {\n                if (\n                    currentUser !== undefined &&\n                    // Name or e-mail is configured\n                    (currentUser.name !== undefined || currentUser.email !== undefined) &&\n                    // Match on name if configured\n                    (currentUser.name === undefined || currentUser.name === entry.author) &&\n                    // Match on email if configured\n                    (currentUser.email === undefined || currentUser.email === entry.email)\n                ) {\n                    entry.author = 'You';\n                }\n\n                let author = authors.get(entry.author);\n                if (author === undefined) {\n                    author = {\n                        name: entry.author,\n                        lineCount: 0\n                    };\n                    authors.set(entry.author, author);\n                }\n            }\n\n            const originalFileName = relativeFileName !== entry.fileName ? entry.fileName : undefined;\n            if (type === GitCommitType.File) {\n                entry.files = [\n                    {\n                        status: entry.status!,\n                        fileName: relativeFileName,\n                        originalFileName: originalFileName\n                    }\n                ];\n            }\n\n            commit = new GitLogCommit(\n                type,\n                repoPath!,\n                entry.ref!,\n                entry.author!,\n                entry.email,\n                new Date((entry.date! as any) * 1000),\n                new Date((entry.committedDate! as any) * 1000),\n                entry.summary === undefined ? '' : entry.summary,\n                relativeFileName,\n                entry.files || [],\n                entry.status,\n                originalFileName,\n                `${entry.ref!}^`,\n                undefined,\n                entry.parentShas!\n            );\n\n            commits.set(entry.ref!, commit);\n        }\n        // else {\n        //     Logger.log(`merge commit? ${entry.sha}`);\n        // }\n\n        if (recentCommit !== undefined) {\n            // If the commit sha's match (merge commit), just forward it along\n            commit.nextSha = commit.sha !== recentCommit.sha ? recentCommit.sha : recentCommit.nextSha;\n\n            // Only add a filename if this is a file log\n            if (type === GitCommitType.File) {\n                recentCommit.previousFileName = commit.originalFileName || commit.fileName;\n                commit.nextFileName = recentCommit.originalFileName || recentCommit.fileName;\n            }\n        }\n        return commit;\n    }\n\n    static parseFileName(entry: { fileName?: string; originalFileName?: string }) {\n        if (entry.fileName === undefined) return;\n\n        const index = entry.fileName.indexOf('\\t') + 1;\n        if (index > 0) {\n            const next = entry.fileName.indexOf('\\t', index) + 1;\n            if (next > 0) {\n                entry.originalFileName = entry.fileName.substring(index, next - 1);\n                entry.fileName = entry.fileName.substring(next);\n            }\n            else {\n                entry.fileName = entry.fileName.substring(index);\n            }\n        }\n    }\n}\n","'use strict';\nimport { GitRemoteType } from '../models/remote';\nimport { RemoteProvider } from '../remotes/factory';\nimport { GitRemote } from './../git';\n\nconst remoteRegex = /^(.*)\\t(.*)\\s\\((.*)\\)$/gm;\nconst urlRegex = /^(?:(git:\\/\\/)(.*?)\\/|(https?:\\/\\/)(?:.*?@)?(.*?)\\/|git@(.*):|(ssh:\\/\\/)(?:.*@)?(.*?)(?::.*?)?(?:\\/|(?=~))|(?:.*?@)(.*?):)(.*)$/;\n\n// Test git urls\n/*\nhttp://host.xz/user/project.git\nhttp://host.xz/path/to/repo.git\nhttp://host.xz/path/to/repo.git/\nhttp://username@host.xz/user/project.git\nhttp://username:password@host.xz/user/project.git\nhttps://host.xz/user/project.git\nhttps://host.xz/path/to/repo.git\nhttps://host.xz/path/to/repo.git/\nhttps://username@host.xz/user/project.git\nhttps://username:password@host.xz/user/project.git\n\ngit@host.xz:user/project.git\ngit://host.xz/path/to/repo.git/\ngit://host.xz/~user/path/to/repo.git/\n\nssh://host.xz/project.git\nssh://host.xz/path/to/repo.git\nssh://host.xz/path/to/repo.git/\nssh://host.xz:~project.git\nssh://host.xz:port/path/to/repo.git/\nssh://user@host.xz/project.git\nssh://user@host.xz/path/to/repo.git\nssh://user@host.xz/path/to/repo.git/\nssh://user@host.xz:port/path/to/repo.git/\nssh://user:password@host.xz/project.git\nssh://user:password@host.xz/path/to/repo.git\nssh://user:password@host.xz/path/to/repo.git/\n\nuser@host.xz:project.git\nuser@host.xz:path/to/repo.git\nuser@host.xz:/path/to/repo.git/\nuser:password@host.xz:project.git\nuser:password@host.xz:/path/to/repo.git\nuser:password@host.xz:/path/to/repo.git/\n*/\n\nexport class GitRemoteParser {\n    static parse(\n        data: string,\n        repoPath: string,\n        providerFactory: (domain: string, path: string) => RemoteProvider | undefined\n    ): GitRemote[] {\n        if (!data) return [];\n\n        const remotes: GitRemote[] = [];\n        const groups = Object.create(null);\n\n        let match: RegExpExecArray | null = null;\n        do {\n            match = remoteRegex.exec(data);\n            if (match == null) break;\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            const url = (' ' + match[2]).substr(1);\n\n            const [scheme, domain, path] = this.parseGitUrl(url);\n\n            const uniqueness = `${domain}/${path}`;\n            let remote: GitRemote | undefined = groups[uniqueness];\n            if (remote === undefined) {\n                remote = new GitRemote(\n                    repoPath,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + match[1]).substr(1),\n                    scheme,\n                    domain,\n                    path,\n                    providerFactory(domain, path),\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    [{ url: url, type: (' ' + match[3]).substr(1) as GitRemoteType }]\n                );\n                remotes.push(remote);\n                groups[uniqueness] = remote;\n            }\n            else {\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                remote.types.push({ url: url, type: (' ' + match[3]).substr(1) as GitRemoteType });\n            }\n        } while (match != null);\n\n        if (!remotes.length) return [];\n\n        return remotes;\n    }\n\n    static parseGitUrl(url: string): [string, string, string] {\n        const match = urlRegex.exec(url);\n        if (match == null) return ['', '', ''];\n\n        return [\n            match[1] || match[3] || match[6],\n            match[2] || match[4] || match[5] || match[7] || match[8],\n            match[9].replace(/\\.git\\/?$/, '')\n        ];\n    }\n}\n","'use strict';\nimport { Arrays, Strings } from '../../system';\nimport { GitCommitType, GitFile, GitFileStatus, GitLogParser, GitStash, GitStashCommit } from './../git';\n// import { Logger } from './logger';\n\ninterface StashEntry {\n    ref?: string;\n    date?: string;\n    committedDate?: string;\n    fileNames?: string;\n    files?: GitFile[];\n    summary?: string;\n    stashName?: string;\n}\n\nconst emptyEntry: StashEntry = {};\n\nexport class GitStashParser {\n    static parse(data: string, repoPath: string): GitStash | undefined {\n        if (!data) return undefined;\n\n        const lines = Strings.lines(data + '</f>');\n        // Skip the first line since it will always be </f>\n        let next = lines.next();\n        if (next.done) return undefined;\n\n        if (repoPath !== undefined) {\n            repoPath = Strings.normalizePath(repoPath);\n        }\n\n        const commits: Map<string, GitStashCommit> = new Map();\n\n        let entry: StashEntry = emptyEntry;\n        let line: string | undefined = undefined;\n        let token: number;\n\n        while (true) {\n            next = lines.next();\n            if (next.done) break;\n\n            line = next.value;\n\n            // <<1-char token>> <data>\n            // e.g. <r> bd1452a2dc\n            token = line.charCodeAt(1);\n\n            switch (token) {\n                case 114: // 'r': // ref\n                    entry = {\n                        ref: line.substring(4)\n                    };\n                    break;\n\n                case 100: // 'd': // author-date\n                    entry.date = line.substring(4);\n                    break;\n\n                case 99: // 'c': // committer-date\n                    entry.committedDate = line.substring(4);\n                    break;\n\n                case 108: // 'l': // reflog-selector\n                    entry.stashName = line.substring(4);\n                    break;\n\n                case 115: // 's': // summary\n                    while (true) {\n                        next = lines.next();\n                        if (next.done) break;\n\n                        line = next.value;\n                        if (line === '</s>') break;\n\n                        if (entry.summary === undefined) {\n                            entry.summary = line;\n                        }\n                        else {\n                            entry.summary += `\\n${line}`;\n                        }\n                    }\n\n                    // Remove the trailing newline\n                    if (entry.summary != null && entry.summary.charCodeAt(entry.summary.length - 1) === 10) {\n                        entry.summary = entry.summary.slice(0, -1);\n                    }\n                    break;\n\n                case 102: // 'f': // files\n                    // Skip the blank line git adds before the files\n                    next = lines.next();\n                    if (!next.done && next.value !== '</f>') {\n                        while (true) {\n                            next = lines.next();\n                            if (next.done) break;\n\n                            line = next.value;\n                            if (line === '</f>') break;\n\n                            if (line.startsWith('warning:')) continue;\n\n                            const status = {\n                                status: line[0] as GitFileStatus,\n                                fileName: line.substring(1),\n                                originalFileName: undefined\n                            };\n                            GitLogParser.parseFileName(status);\n\n                            if (status.fileName) {\n                                if (entry.files === undefined) {\n                                    entry.files = [];\n                                }\n                                entry.files.push(status);\n                            }\n                        }\n\n                        if (entry.files !== undefined) {\n                            entry.fileNames = Arrays.filterMap(entry.files, f =>\n                                f.fileName ? f.fileName : undefined\n                            ).join(', ');\n                        }\n                    }\n\n                    GitStashParser.parseEntry(entry, repoPath, commits);\n            }\n        }\n\n        return {\n            repoPath: repoPath,\n            commits: commits\n        } as GitStash;\n    }\n\n    private static parseEntry(entry: StashEntry, repoPath: string, commits: Map<string, GitStashCommit>) {\n        let commit = commits.get(entry.ref!);\n        if (commit === undefined) {\n            commit = new GitStashCommit(\n                GitCommitType.Stash,\n                entry.stashName!,\n                repoPath,\n                entry.ref!,\n                new Date((entry.date! as any) * 1000),\n                new Date((entry.committedDate! as any) * 1000),\n                entry.summary === undefined ? '' : entry.summary,\n                entry.fileNames!,\n                entry.files || []\n            );\n        }\n\n        commits.set(entry.ref!, commit);\n    }\n}\n","'use strict';\nimport { Strings } from '../../system';\nimport { GitFileStatus, GitStatus, GitStatusFile } from './../git';\n\nconst aheadStatusV1Regex = /(?:ahead ([0-9]+))/;\nconst behindStatusV1Regex = /(?:behind ([0-9]+))/;\n\nexport class GitStatusParser {\n    static parse(data: string, repoPath: string, porcelainVersion: number): GitStatus | undefined {\n        if (!data) return undefined;\n\n        const lines = data.split('\\n').filter(Boolean);\n        if (lines.length === 0) return undefined;\n\n        if (porcelainVersion < 2) return this.parseV1(lines, repoPath);\n\n        return this.parseV2(lines, repoPath);\n    }\n\n    private static parseV1(lines: string[], repoPath: string): GitStatus {\n        let branch: string | undefined;\n        const files = [];\n        const state = {\n            ahead: 0,\n            behind: 0\n        };\n        let upstream;\n\n        let position = -1;\n        while (++position < lines.length) {\n            const line = lines[position];\n            // Header\n            if (line.startsWith('##')) {\n                const lineParts = line.split(' ');\n                [branch, upstream] = lineParts[1].split('...');\n                if (lineParts.length > 2) {\n                    const upstreamStatus = lineParts.slice(2).join(' ');\n\n                    const aheadStatus = aheadStatusV1Regex.exec(upstreamStatus);\n                    state.ahead = aheadStatus == null ? 0 : +aheadStatus[1] || 0;\n\n                    const behindStatus = behindStatusV1Regex.exec(upstreamStatus);\n                    state.behind = behindStatus == null ? 0 : +behindStatus[1] || 0;\n                }\n            }\n            else {\n                const rawStatus = line.substring(0, 2);\n                const fileName = line.substring(3);\n                if (rawStatus[0] === 'R') {\n                    const [file1, file2] = fileName.replace(/\\\"/g, '').split('->');\n                    files.push(this.parseStatusFile(repoPath, rawStatus, file2.trim(), file1.trim()));\n                }\n                else {\n                    files.push(this.parseStatusFile(repoPath, rawStatus, fileName));\n                }\n            }\n        }\n\n        return new GitStatus(Strings.normalizePath(repoPath), branch || '', '', files, state, upstream);\n    }\n\n    private static parseV2(lines: string[], repoPath: string): GitStatus {\n        let branch: string | undefined;\n        const files = [];\n        let sha: string | undefined;\n        const state = {\n            ahead: 0,\n            behind: 0\n        };\n        let upstream;\n\n        let position = -1;\n        while (++position < lines.length) {\n            const line = lines[position];\n            // Headers\n            if (line.startsWith('#')) {\n                const lineParts = line.split(' ');\n                switch (lineParts[1]) {\n                    case 'branch.oid':\n                        sha = lineParts[2];\n                        break;\n                    case 'branch.head':\n                        branch = lineParts[2];\n                        break;\n                    case 'branch.upstream':\n                        upstream = lineParts[2];\n                        break;\n                    case 'branch.ab':\n                        state.ahead = +lineParts[2].substring(1);\n                        state.behind = +lineParts[3].substring(1);\n                        break;\n                }\n            }\n            else {\n                const lineParts = line.split(' ');\n                switch (lineParts[0][0]) {\n                    case '1': // normal\n                        files.push(this.parseStatusFile(repoPath, lineParts[1], lineParts.slice(8).join(' ')));\n                        break;\n                    case '2': // rename\n                        const file = lineParts\n                            .slice(9)\n                            .join(' ')\n                            .split('\\t');\n                        files.push(this.parseStatusFile(repoPath, lineParts[1], file[0], file[1]));\n                        break;\n                    case 'u': // unmerged\n                        files.push(this.parseStatusFile(repoPath, lineParts[1], lineParts.slice(10).join(' ')));\n                        break;\n                    case '?': // untracked\n                        files.push(this.parseStatusFile(repoPath, ' ?', lineParts.slice(1).join(' ')));\n                        break;\n                }\n            }\n        }\n\n        return new GitStatus(Strings.normalizePath(repoPath), branch || '', sha || '', files, state, upstream);\n    }\n\n    static parseStatusFile(\n        repoPath: string,\n        rawStatus: string,\n        fileName: string,\n        originalFileName?: string\n    ): GitStatusFile {\n        let indexStatus = rawStatus[0] !== '.' ? rawStatus[0].trim() : undefined;\n        if (indexStatus == null || indexStatus.length === 0) {\n            indexStatus = undefined;\n        }\n\n        let workTreeStatus = undefined;\n        if (rawStatus.length > 1) {\n            workTreeStatus = rawStatus[1] !== '.' ? rawStatus[1].trim() : undefined;\n            if (workTreeStatus == null || workTreeStatus.length === 0) {\n                workTreeStatus = undefined;\n            }\n        }\n\n        return new GitStatusFile(\n            repoPath,\n            indexStatus as GitFileStatus | undefined,\n            workTreeStatus as GitFileStatus | undefined,\n            fileName,\n            originalFileName\n        );\n    }\n}\n","'use strict';\nimport { GitTag } from './../git';\n\nconst tagWithRefRegex = /([0-9,a-f]+)\\srefs\\/tags\\/(.*)/gm;\nconst tagWithAnnotationRegex = /^(.+?)(?:$|(?:\\s+)(.*)$)/gm;\n\nexport class GitTagParser {\n    static parse(data: string, repoPath: string): GitTag[] | undefined {\n        if (!data) return undefined;\n\n        const tags: GitTag[] = [];\n\n        let annotation;\n        let name;\n        let match: RegExpExecArray | null = null;\n        do {\n            match = tagWithAnnotationRegex.exec(data);\n            if (match == null) break;\n\n            [, name, annotation] = match;\n            tags.push(\n                new GitTag(\n                    repoPath,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + name).substr(1),\n                    undefined,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    annotation === undefined ? undefined : (' ' + annotation).substr(1)\n                )\n            );\n        } while (match != null);\n\n        if (!tags.length) return undefined;\n\n        return tags;\n    }\n\n    static parseWithRef(data: string, repoPath: string): GitTag[] | undefined {\n        if (!data) return undefined;\n\n        const tags: GitTag[] = [];\n\n        let name;\n        let sha;\n        let match: RegExpExecArray | null = null;\n        do {\n            match = tagWithRefRegex.exec(data);\n            if (match == null) break;\n\n            [, sha, name] = match;\n            tags.push(\n                new GitTag(\n                    repoPath,\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + name).substr(1),\n                    // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                    (' ' + sha).substr(1)\n                )\n            );\n        } while (match != null);\n\n        if (!tags.length) return undefined;\n\n        return tags;\n    }\n}\n","'use strict';\nimport { GitTree } from './../git';\n\nconst treeRegex = /(?:.+?)\\s+(.+?)\\s+(.+?)\\s+(.+?)\\s+(.+)/gm;\n\nexport class GitTreeParser {\n    static parse(data: string | undefined): GitTree[] | undefined {\n        if (!data) return undefined;\n\n        const trees: GitTree[] = [];\n\n        let match: RegExpExecArray | null = null;\n        do {\n            match = treeRegex.exec(data);\n            if (match == null) break;\n\n            const [, type, commitSha, size, filePath] = match;\n            trees.push({\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                commitSha: commitSha === undefined ? '' : (' ' + commitSha).substr(1),\n                path: filePath === undefined ? '' : filePath,\n                size: size === '-' ? 0 : Number(size || 0),\n                // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                type: (type === undefined ? '' : (' ' + type).substr(1)) as 'blob' | 'tree'\n            });\n        } while (match != null);\n\n        if (!trees.length) return undefined;\n\n        return trees;\n    }\n}\n","'use strict';\nimport * as iconv from 'iconv-lite';\nimport * as paths from 'path';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Objects, Strings } from '../system';\nimport { findGitPath, GitLocation } from './locator';\nimport { run, RunOptions } from './shell';\n\nexport { GitLocation } from './locator';\nexport * from './models/models';\nexport * from './parsers/parsers';\nexport * from './remotes/provider';\n\n// This is a root sha of all git repo's if using sha1\nconst rootSha = '4b825dc642cb6eb9a060e54bf8d69288fbee4904';\n\nconst defaultBlameParams = ['blame', '--root', '--incremental'];\n\n// Using %x00 codes because some shells seem to try to expand things if not\nconst lb = '%x3c'; // `%x${'<'.charCodeAt(0).toString(16)}`;\nconst rb = '%x3e'; // `%x${'>'.charCodeAt(0).toString(16)}`;\nconst sl = '%x2f'; // `%x${'/'.charCodeAt(0).toString(16)}`;\nconst sp = '%x20'; // `%x${' '.charCodeAt(0).toString(16)}`;\n\nconst logFormat = [\n    `${lb}${sl}f${rb}`,\n    `${lb}r${rb}${sp}%H`, // ref\n    `${lb}a${rb}${sp}%aN`, // author\n    `${lb}e${rb}${sp}%aE`, // email\n    `${lb}d${rb}${sp}%at`, // date\n    `${lb}c${rb}${sp}%ct`, // committed date\n    `${lb}p${rb}${sp}%P`, // parents\n    `${lb}s${rb}`,\n    `%B`, // summary\n    `${lb}${sl}s${rb}`,\n    `${lb}f${rb}`\n].join('%n');\n\nconst defaultLogParams = ['log', '--name-status', `--format=${logFormat}`];\n\nconst stashFormat = [\n    `${lb}${sl}f${rb}`,\n    `${lb}r${rb}${sp}%H`, // ref\n    `${lb}d${rb}${sp}%at`, // date\n    `${lb}c${rb}${sp}%ct`, // committed date\n    `${lb}l${rb}${sp}%gd`, // reflog-selector\n    `${lb}s${rb}`,\n    `%B`, // summary\n    `${lb}${sl}s${rb}`,\n    `${lb}f${rb}`\n].join('%n');\n\nconst defaultStashParams = ['stash', 'list', '--name-status', '-M', `--format=${stashFormat}`];\n\nconst GitErrors = {\n    badRevision: /bad revision \\'(.*?)\\'/i,\n    notAValidObjectName: /Not a valid object name/i\n};\n\nconst GitWarnings = {\n    notARepository: /Not a git repository/i,\n    outsideRepository: /is outside repository/i,\n    noPath: /no such path/i,\n    noCommits: /does not have any commits/i,\n    notFound: /Path \\'.*?\\' does not exist in/i,\n    foundButNotInRevision: /Path \\'.*?\\' exists on disk, but not in/i,\n    headNotABranch: /HEAD does not point to a branch/i,\n    noUpstream: /no upstream configured for branch \\'(.*?)\\'/i,\n    unknownRevision: /ambiguous argument \\'.*?\\': unknown revision or path not in the working tree|not stored as a remote-tracking branch/i,\n    mustRunInWorkTree: /this operation must be run in a work tree/i,\n    patchWithConflicts: /Applied patch to \\'.*?\\' with conflicts/i,\n    noRemoteRepositorySpecified: /No remote repository specified\\./i,\n    remoteConnectionError: /Could not read from remote repository/i,\n    notAGitCommand: /\\'.+\\' is not a git command/i\n};\n\nexport enum GitErrorHandling {\n    Ignore = 'ignore',\n    Throw = 'throw'\n}\n\nexport interface GitCommandOptions extends RunOptions {\n    configs?: string[];\n    readonly correlationKey?: string;\n    errors?: GitErrorHandling;\n    // Specifies that this command should always be executed locally if possible\n    local?: boolean;\n}\n\n// A map of running git commands -- avoids running duplicate overlaping commands\nconst pendingCommands: Map<string, Promise<string | Buffer>> = new Map();\n\nconst emptyArray: any = [];\nconst emptyObj = {};\n\nexport async function git<TOut extends string | Buffer>(options: GitCommandOptions, ...args: any[]): Promise<TOut> {\n    if (Container.vsls.isMaybeGuest) {\n        if (options.local !== true) {\n            const guest = await Container.vsls.guest();\n            if (guest !== undefined) {\n                return guest.git<TOut>(options, ...args);\n            }\n        }\n        else {\n            // Since we will have a live share path here, just blank it out\n            options.cwd = '';\n        }\n    }\n\n    const start = process.hrtime();\n\n    const { configs, correlationKey, errors: errorHandling, ...opts } = options;\n\n    const encoding = options.encoding || 'utf8';\n    const runOpts = {\n        ...opts,\n        encoding: encoding === 'utf8' ? 'utf8' : encoding === 'buffer' ? 'buffer' : 'binary',\n        // Adds GCM environment variables to avoid any possible credential issues -- from https://github.com/Microsoft/vscode/issues/26573#issuecomment-338686581\n        // Shouldn't *really* be needed but better safe than sorry\n        env: {\n            ...process.env,\n            ...(options.env || emptyObj),\n            GCM_INTERACTIVE: 'NEVER',\n            GCM_PRESERVE_CREDS: 'TRUE',\n            LC_ALL: 'C'\n        }\n    } as RunOptions;\n\n    const gitCommand = `[${runOpts.cwd}] git ${args.join(' ')}`;\n\n    const command = `${correlationKey !== undefined ? `${correlationKey}:` : ''}${gitCommand}`;\n\n    let waiting;\n    let promise = pendingCommands.get(command);\n    if (promise === undefined) {\n        waiting = false;\n\n        // Fixes https://github.com/eamodio/vscode-gitlens/issues/73 & https://github.com/eamodio/vscode-gitlens/issues/161\n        // See https://stackoverflow.com/questions/4144417/how-to-handle-asian-characters-in-file-names-in-git-on-os-x\n        args.splice(\n            0,\n            0,\n            '-c',\n            'core.quotepath=false',\n            '-c',\n            'color.ui=false',\n            ...(configs !== undefined ? configs : emptyArray)\n        );\n\n        promise = run<TOut>(gitInfo.path, args, encoding, runOpts);\n\n        pendingCommands.set(command, promise);\n    }\n    else {\n        waiting = true;\n    }\n\n    let exception: Error | undefined;\n    try {\n        return (await promise) as TOut;\n    }\n    catch (ex) {\n        exception = ex;\n\n        switch (errorHandling) {\n            case GitErrorHandling.Ignore:\n                exception = undefined;\n                return '' as TOut;\n\n            case GitErrorHandling.Throw:\n                throw ex;\n\n            default:\n                const result = defaultExceptionHandler(ex, options, ...args);\n                exception = undefined;\n                return result as TOut;\n        }\n    }\n    finally {\n        pendingCommands.delete(command);\n\n        const duration = `${Strings.getDurationMilliseconds(start)} ms ${waiting ? '(await) ' : ''}`;\n        Logger.log(\n            `${gitCommand} ${GlyphChars.Dot} ${\n                exception !== undefined ? `FAILED(${(exception.message || '').trim().split('\\n', 1)[0]}) ` : ''\n            }${duration}`\n        );\n        Logger.logGitCommand(\n            `${gitCommand} ${GlyphChars.Dot} ${exception !== undefined ? 'FAILED ' : ''}${duration}`,\n            exception\n        );\n    }\n}\n\nfunction defaultExceptionHandler(ex: Error, options: GitCommandOptions, ...args: any[]): string {\n    const msg = ex && ex.toString();\n    if (msg) {\n        for (const warning of Objects.values(GitWarnings)) {\n            if (warning.test(msg)) {\n                Logger.warn('git', ...args, `  cwd='${options.cwd}'\\n\\n  `, msg.replace(/\\r?\\n|\\r/g, ' '));\n                return '';\n            }\n        }\n    }\n\n    const match = GitErrors.badRevision.exec(msg);\n    if (match != null && match) {\n        const [, ref] = match;\n\n        // Since looking up a ref with ^3 (e.g. looking for untracked files in a stash) can error on some versions of git just ignore it\n        if (ref != null && ref.endsWith('^3')) return '';\n    }\n\n    Logger.error(ex, 'git', ...args, `  cwd='${options.cwd}'\\n\\n  `);\n    throw ex;\n}\n\nlet gitInfo: GitLocation;\n\nexport class Git {\n    static deletedOrMissingSha = '0000000000000000000000000000000000000000-';\n    static shaLikeRegex = /(^[0-9a-f]{40}([\\^@~:]\\S*)?$)|(^[0]{40}(:|-)$)/;\n    static shaRegex = /(^[0-9a-f]{40}$)|(^[0]{40}(:|-)$)/;\n    static stagedUncommittedRegex = /^[0]{40}([\\^@~]\\S*)?:$/;\n    static stagedUncommittedSha = '0000000000000000000000000000000000000000:';\n    static uncommittedRegex = /^[0]{40}(?:[\\^@~:]\\S*)?:?$/;\n    static uncommittedSha = '0000000000000000000000000000000000000000';\n\n    static getEncoding(encoding: string | undefined) {\n        return encoding !== undefined && iconv.encodingExists(encoding) ? encoding : 'utf8';\n    }\n\n    static getGitPath(): string {\n        return gitInfo.path;\n    }\n\n    static getGitVersion(): string {\n        return gitInfo.version;\n    }\n\n    static async setOrFindGitPath(gitPath?: string): Promise<void> {\n        const start = process.hrtime();\n\n        gitInfo = await findGitPath(gitPath);\n\n        Logger.log(\n            `Git found: ${gitInfo.version} @ ${gitInfo.path === 'git' ? 'PATH' : gitInfo.path} ${\n                GlyphChars.Dot\n            } ${Strings.getDurationMilliseconds(start)} ms`\n        );\n    }\n\n    static isSha(ref: string) {\n        return Git.shaRegex.test(ref);\n    }\n\n    static isShaLike(ref: string) {\n        return Git.shaLikeRegex.test(ref);\n    }\n\n    static isStagedUncommitted(ref: string | undefined): boolean {\n        return ref ? Git.stagedUncommittedRegex.test(ref) : false;\n    }\n\n    static isUncommitted(ref: string | undefined) {\n        return ref ? Git.uncommittedRegex.test(ref) : false;\n    }\n\n    static shortenSha(\n        ref: string,\n        strings: { stagedUncommitted?: string; uncommitted?: string; working?: string } = {}\n    ) {\n        strings = { stagedUncommitted: 'Index', uncommitted: 'Working Tree', working: '', ...strings };\n\n        if (ref == null || ref.length === 0) return strings.working;\n        if (Git.isUncommitted(ref)) {\n            if (Git.isStagedUncommitted(ref)) return strings.stagedUncommitted;\n\n            return strings.uncommitted;\n        }\n\n        const index = ref.indexOf('^');\n        if (index > 5) {\n            // Only grab a max of 5 chars for the suffix\n            const suffix = ref.substring(index).substring(0, 5);\n            return `${ref.substring(0, 7 - suffix.length)}${suffix}`;\n        }\n        return ref.substring(0, 7);\n    }\n\n    static splitPath(fileName: string, repoPath: string | undefined, extract: boolean = true): [string, string] {\n        if (repoPath) {\n            fileName = Strings.normalizePath(fileName);\n            repoPath = Strings.normalizePath(repoPath);\n\n            const normalizedRepoPath = (repoPath.endsWith('/') ? repoPath : `${repoPath}/`).toLowerCase();\n            if (fileName.toLowerCase().startsWith(normalizedRepoPath)) {\n                fileName = fileName.substring(normalizedRepoPath.length);\n            }\n        }\n        else {\n            repoPath = Strings.normalizePath(extract ? paths.dirname(fileName) : repoPath!);\n            fileName = Strings.normalizePath(extract ? paths.basename(fileName) : fileName);\n        }\n\n        return [fileName, repoPath];\n    }\n\n    static validateVersion(major: number, minor: number): boolean {\n        const [gitMajor, gitMinor] = gitInfo.version.split('.');\n        return parseInt(gitMajor, 10) >= major && parseInt(gitMinor, 10) >= minor;\n    }\n\n    // Git commands\n\n    static add(repoPath: string | undefined, fileName: string) {\n        return git<string>({ cwd: repoPath }, 'add', '-A', '--', fileName);\n    }\n\n    static apply(repoPath: string | undefined, patch: string, options: { allowConflicts?: boolean } = {}) {\n        const params = ['apply', '--whitespace=warn'];\n        if (options.allowConflicts) {\n            params.push(`-3`);\n        }\n        return git<string>({ cwd: repoPath, stdin: patch }, ...params);\n    }\n\n    static async blame(\n        repoPath: string | undefined,\n        fileName: string,\n        ref?: string,\n        options: { args?: string[] | null; ignoreWhitespace?: boolean; startLine?: number; endLine?: number } = {}\n    ) {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const params = [...defaultBlameParams];\n\n        if (options.ignoreWhitespace) {\n            params.push('-w');\n        }\n        if (options.startLine != null && options.endLine != null) {\n            params.push(`-L ${options.startLine},${options.endLine}`);\n        }\n        if (options.args != null) {\n            params.push(...options.args);\n        }\n\n        let stdin;\n        if (ref) {\n            if (Git.isStagedUncommitted(ref)) {\n                // Pipe the blame contents to stdin\n                params.push('--contents', '-');\n\n                // Get the file contents for the staged version using `:`\n                stdin = await Git.show<string>(repoPath, fileName, ':');\n            }\n            else {\n                params.push(ref);\n            }\n        }\n\n        return git<string>({ cwd: root, stdin: stdin }, ...params, '--', file);\n    }\n\n    static async blame_contents(\n        repoPath: string | undefined,\n        fileName: string,\n        contents: string,\n        options: {\n            args?: string[] | null;\n            correlationKey?: string;\n            ignoreWhitespace?: boolean;\n            startLine?: number;\n            endLine?: number;\n        } = {}\n    ) {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const params = [...defaultBlameParams];\n\n        if (options.ignoreWhitespace) {\n            params.push('-w');\n        }\n        if (options.startLine != null && options.endLine != null) {\n            params.push(`-L ${options.startLine},${options.endLine}`);\n        }\n        if (options.args != null) {\n            params.push(...options.args);\n        }\n\n        // Pipe the blame contents to stdin\n        params.push('--contents', '-');\n\n        return git<string>(\n            { cwd: root, stdin: contents, correlationKey: options.correlationKey },\n            ...params,\n            '--',\n            file\n        );\n    }\n\n    static branch(repoPath: string, options: { all: boolean } = { all: false }) {\n        const params = ['branch', '-vv', '--abbrev=40'];\n        if (options.all) {\n            params.push('-a');\n        }\n\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.branch=false'] }, ...params);\n    }\n\n    static branch_contains(repoPath: string, ref: string, options: { remote: boolean } = { remote: false }) {\n        const params = ['branch', '--contains'];\n        if (options.remote) {\n            params.push('-r');\n        }\n\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.branch=false'] }, ...params, ref);\n    }\n\n    static async cat_validate(repoPath: string, ref: string) {\n        if (Git.isUncommitted(ref)) return true;\n\n        try {\n            await git<string>({ cwd: repoPath, errors: GitErrorHandling.Throw }, 'cat-file', '-t', ref);\n            return true;\n        }\n        catch (ex) {\n            return false;\n        }\n    }\n\n    static async cat_file_validate(repoPath: string, fileName: string, ref: string) {\n        if (Git.isUncommitted(ref)) return ref;\n\n        try {\n            await git<string>(\n                { cwd: repoPath, errors: GitErrorHandling.Throw },\n                'cat-file',\n                '-e',\n                `${ref}:./${fileName}`\n            );\n            return ref;\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (GitErrors.notAValidObjectName.test(msg)) {\n                return Git.deletedOrMissingSha;\n            }\n\n            return undefined;\n        }\n    }\n\n    static check_mailmap(repoPath: string, author: string) {\n        return git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore, local: true }, 'check-mailmap', author);\n    }\n\n    static checkout(repoPath: string, ref: string, fileName?: string) {\n        const params = ['checkout', ref, '--'];\n        if (fileName) {\n            [fileName, repoPath] = Git.splitPath(fileName, repoPath);\n\n            params.push(fileName);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static async config_get(key: string, repoPath?: string, options: { local?: boolean } = {}) {\n        const data = await git<string>(\n            { cwd: repoPath || '', errors: GitErrorHandling.Ignore, local: options.local },\n            'config',\n            '--get',\n            key\n        );\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async config_getRegex(pattern: string, repoPath?: string, options: { local?: boolean } = {}) {\n        const data = await git<string>(\n            { cwd: repoPath || '', errors: GitErrorHandling.Ignore, local: options.local },\n            'config',\n            '--get-regex',\n            pattern\n        );\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async diff(\n        repoPath: string,\n        fileName: string,\n        ref1?: string,\n        ref2?: string,\n        options: { encoding?: string; filter?: string } = {}\n    ): Promise<string> {\n        const params = ['diff', '-M', '--no-ext-diff', '--minimal'];\n        if (options.filter) {\n            params.push(`--diff-filter=${options.filter}`);\n        }\n\n        if (ref1) {\n            // <sha>^3 signals an untracked file in a stash and if we are trying to find its parent, use the root sha\n            if (ref1.endsWith('^3^')) {\n                ref1 = rootSha;\n            }\n            params.push(Git.isStagedUncommitted(ref1) ? '--staged' : ref1);\n        }\n        if (ref2) {\n            params.push(Git.isStagedUncommitted(ref2) ? '--staged' : ref2);\n        }\n\n        const encoding: BufferEncoding = options.encoding === 'utf8' ? 'utf8' : 'binary';\n\n        try {\n            return await git<string>(\n                { cwd: repoPath, configs: ['-c', 'color.diff=false'], encoding: encoding },\n                ...params,\n                '--',\n                fileName\n            );\n        }\n        catch (ex) {\n            const match = GitErrors.badRevision.exec(ex.message);\n            if (match !== null) {\n                const [, ref] = match;\n\n                // If the bad ref is trying to find a parent ref, assume we hit to the last commit, so try again using the root sha\n                if (ref === ref1 && ref != null && ref.endsWith('^')) {\n                    return Git.diff(repoPath, fileName, rootSha, ref2, options);\n                }\n            }\n\n            throw ex;\n        }\n    }\n\n    static diff_nameStatus(repoPath: string, ref1?: string, ref2?: string, options: { filter?: string } = {}) {\n        const params = ['diff', '--name-status', '-M', '--no-ext-diff'];\n        if (options && options.filter) {\n            params.push(`--diff-filter=${options.filter}`);\n        }\n        if (ref1) {\n            params.push(ref1);\n        }\n        if (ref2) {\n            params.push(ref2);\n        }\n\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.diff=false'] }, ...params);\n    }\n\n    static diff_shortstat(repoPath: string, ref?: string) {\n        const params = ['diff', '--shortstat', '--no-ext-diff'];\n        if (ref) {\n            params.push(ref);\n        }\n        return git<string>({ cwd: repoPath, configs: ['-c', 'color.diff=false'] }, ...params);\n    }\n\n    static difftool_dirDiff(repoPath: string, tool: string, ref1: string, ref2?: string) {\n        const params = ['difftool', '--dir-diff', `--tool=${tool}`, ref1];\n        if (ref2) {\n            params.push(ref2);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static difftool_fileDiff(\n        repoPath: string,\n        fileName: string,\n        tool: string,\n        options: { ref1?: string; ref2?: string; staged?: boolean } = {}\n    ) {\n        const params = ['difftool', '--no-prompt', `--tool=${tool}`];\n        if (options.staged) {\n            params.push('--staged');\n        }\n        if (options.ref1) {\n            params.push(options.ref1);\n        }\n        if (options.ref2) {\n            params.push(options.ref2);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params, '--', fileName);\n    }\n\n    static fetch(repoPath: string, options: { all?: boolean; remote?: string } = {}) {\n        const params = ['fetch'];\n        if (options.remote) {\n            params.push(options.remote);\n        }\n        else if (options.all) {\n            params.push('--all');\n        }\n\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static log(repoPath: string, options: { authors?: string[]; maxCount?: number; ref?: string; reverse?: boolean }) {\n        const params = [...defaultLogParams, '--full-history', '-M', '-m'];\n        if (options.authors) {\n            params.push(...options.authors.map(a => `--author=${a}`));\n        }\n        if (options.maxCount && !options.reverse) {\n            params.push(`-n${options.maxCount}`);\n        }\n        if (options.ref && !Git.isStagedUncommitted(options.ref)) {\n            if (options.reverse) {\n                params.push('--reverse', '--ancestry-path', `${options.ref}..HEAD`);\n            }\n            else {\n                params.push(options.ref);\n            }\n        }\n        return git<string>({ cwd: repoPath, configs: ['-c', 'diff.renameLimit=0'] }, ...params, '--');\n    }\n\n    static log_file(\n        repoPath: string,\n        fileName: string,\n        options: {\n            maxCount?: number;\n            ref?: string;\n            renames?: boolean;\n            reverse?: boolean;\n            startLine?: number;\n            endLine?: number;\n        } = { renames: true, reverse: false }\n    ) {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const params = [...defaultLogParams, '-m'];\n        if (options.maxCount && !options.reverse) {\n            params.push(`-n${options.maxCount}`);\n        }\n\n        if (options.renames) {\n            params.push('--follow');\n        }\n\n        if (options.ref && !Git.isStagedUncommitted(options.ref)) {\n            if (options.reverse) {\n                params.push('--reverse', '--ancestry-path', `${options.ref}..HEAD`);\n            }\n            else {\n                params.push(options.ref);\n            }\n        }\n\n        if (options.startLine != null && options.endLine != null) {\n            params.push(`-L ${options.startLine},${options.endLine}:${file}`);\n        }\n\n        return git<string>({ cwd: root }, ...params, '--', file);\n    }\n\n    static async log_recent(repoPath: string, fileName: string) {\n        const data = await git<string>(\n            { cwd: repoPath, errors: GitErrorHandling.Ignore },\n            'log',\n            '-M',\n            '-n1',\n            '--format=%H',\n            '--',\n            fileName\n        );\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static log_search(repoPath: string, search: string[] = emptyArray, options: { maxCount?: number } = {}) {\n        const params = [...defaultLogParams];\n        if (options.maxCount) {\n            params.push(`-n${options.maxCount}`);\n        }\n\n        return git<string>({ cwd: repoPath }, ...params, ...search);\n    }\n\n    static log_shortstat(repoPath: string, options: { ref?: string }) {\n        const params = ['log', '--shortstat', '--oneline'];\n        if (options.ref && !Git.isStagedUncommitted(options.ref)) {\n            params.push(options.ref);\n        }\n        return git<string>({ cwd: repoPath }, ...params, '--');\n    }\n\n    static async ls_files(\n        repoPath: string,\n        fileName: string,\n        options: { ref?: string } = {}\n    ): Promise<string | undefined> {\n        const params = ['ls-files'];\n        if (options.ref && !Git.isUncommitted(options.ref)) {\n            params.push(`--with-tree=${options.ref}`);\n        }\n\n        const data = await git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, ...params, '--', fileName);\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async ls_tree(repoPath: string, ref: string, options: { fileName?: string } = {}) {\n        const params = ['ls-tree'];\n        if (options.fileName) {\n            params.push('-l', ref, '--', options.fileName);\n        }\n        else {\n            params.push('-lrt', ref, '--');\n        }\n        const data = await git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, ...params);\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static merge_base(repoPath: string, ref1: string, ref2: string, options: { forkPoint?: boolean } = {}) {\n        const params = ['merge-base'];\n        if (options.forkPoint) {\n            params.push('--fork-point');\n        }\n\n        return git<string>({ cwd: repoPath }, ...params, ref1, ref2);\n    }\n\n    static remote(repoPath: string): Promise<string> {\n        return git<string>({ cwd: repoPath }, 'remote', '-v');\n    }\n\n    static remote_url(repoPath: string, remote: string): Promise<string> {\n        return git<string>({ cwd: repoPath }, 'remote', 'get-url', remote);\n    }\n\n    static reset(repoPath: string | undefined, fileName: string) {\n        return git<string>({ cwd: repoPath }, 'reset', '-q', '--', fileName);\n    }\n\n    static async revparse(repoPath: string, ref: string): Promise<string | undefined> {\n        const data = await git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, 'rev-parse', ref);\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async revparse_currentBranch(repoPath: string): Promise<[string, string | undefined] | undefined> {\n        const params = ['rev-parse', '--abbrev-ref', '--symbolic-full-name', '@', '@{u}'];\n\n        const opts: GitCommandOptions = {\n            cwd: repoPath,\n            errors: GitErrorHandling.Throw\n        };\n\n        try {\n            const data = await git<string>(opts, ...params);\n            return [data, undefined];\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (GitWarnings.headNotABranch.test(msg)) {\n                const data = await git<string>(\n                    { ...opts, errors: GitErrorHandling.Ignore },\n                    'log',\n                    '-n1',\n                    '--format=%H',\n                    '--'\n                );\n                if (data.length === 0) return undefined;\n\n                // Matches output of `git branch -vv`\n                const sha = data.trim();\n                return [`(HEAD detached at ${this.shortenSha(sha)})`, sha];\n            }\n\n            const result = GitWarnings.noUpstream.exec(msg);\n            if (result !== null) return [result[1], undefined];\n\n            if (GitWarnings.unknownRevision.test(msg)) {\n                const data = await git<string>(\n                    { ...opts, errors: GitErrorHandling.Ignore },\n                    'symbolic-ref',\n                    '-q',\n                    '--short',\n                    'HEAD'\n                );\n                return data.length === 0 ? undefined : [data.trim(), undefined];\n            }\n\n            defaultExceptionHandler(ex, opts, ...params);\n            return undefined;\n        }\n    }\n\n    static async revparse_toplevel(cwd: string): Promise<string | undefined> {\n        const data = await git<string>({ cwd: cwd, errors: GitErrorHandling.Ignore }, 'rev-parse', '--show-toplevel');\n        return data.length === 0 ? undefined : data.trim();\n    }\n\n    static async show<TOut extends string | Buffer>(\n        repoPath: string | undefined,\n        fileName: string,\n        ref: string,\n        options: {\n            encoding?: 'binary' | 'ascii' | 'utf8' | 'utf16le' | 'ucs2' | 'base64' | 'latin1' | 'hex' | 'buffer';\n        } = {}\n    ): Promise<TOut | undefined> {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        if (Git.isStagedUncommitted(ref)) {\n            ref = ':';\n        }\n        if (Git.isUncommitted(ref)) throw new Error(`ref=${ref} is uncommitted`);\n\n        const opts: GitCommandOptions = {\n            cwd: root,\n            encoding: options.encoding || 'utf8',\n            errors: GitErrorHandling.Throw\n        };\n        const args = ref.endsWith(':') ? `${ref}./${file}` : `${ref}:./${file}`;\n\n        try {\n            const data = await git<TOut>(opts, 'show', args, '--');\n            return data;\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (ref === ':' && GitErrors.badRevision.test(msg)) {\n                return Git.show<TOut>(repoPath, fileName, 'HEAD:', options);\n            }\n\n            if (\n                GitErrors.badRevision.test(msg) ||\n                GitWarnings.notFound.test(msg) ||\n                GitWarnings.foundButNotInRevision.test(msg)\n            ) {\n                return undefined;\n            }\n\n            return defaultExceptionHandler(ex, opts, args) as TOut;\n        }\n    }\n\n    static show_status(repoPath: string, fileName: string, ref: string) {\n        return git<string>({ cwd: repoPath }, 'show', '--name-status', '--format=', ref, '--', fileName);\n    }\n\n    static showref_tag(repoPath: string) {\n        return git<string>({ cwd: repoPath, errors: GitErrorHandling.Ignore }, 'show-ref', '--tags');\n    }\n\n    static stash_apply(repoPath: string, stashName: string, deleteAfter: boolean) {\n        if (!stashName) return undefined;\n        return git<string>({ cwd: repoPath }, 'stash', deleteAfter ? 'pop' : 'apply', stashName);\n    }\n\n    static stash_delete(repoPath: string, stashName: string) {\n        if (!stashName) return undefined;\n        return git<string>({ cwd: repoPath }, 'stash', 'drop', stashName);\n    }\n\n    static stash_list(repoPath: string) {\n        return git<string>({ cwd: repoPath }, ...defaultStashParams);\n    }\n\n    static stash_push(repoPath: string, pathspecs: string[], message?: string) {\n        const params = ['stash', 'push', '-u'];\n        if (message) {\n            params.push('-m', message);\n        }\n        return git<string>({ cwd: repoPath }, ...params, '--', ...pathspecs);\n    }\n\n    static stash_save(repoPath: string, message?: string) {\n        const params = ['stash', 'save', '-u'];\n        if (message) {\n            params.push(message);\n        }\n        return git<string>({ cwd: repoPath }, ...params);\n    }\n\n    static status(repoPath: string, porcelainVersion: number = 1): Promise<string> {\n        const porcelain = porcelainVersion >= 2 ? `--porcelain=v${porcelainVersion}` : '--porcelain';\n        return git<string>(\n            { cwd: repoPath, configs: ['-c', 'color.status=false'], env: { GIT_OPTIONAL_LOCKS: '0' } },\n            'status',\n            porcelain,\n            '--branch',\n            '-u'\n        );\n    }\n\n    static status_file(repoPath: string, fileName: string, porcelainVersion: number = 1): Promise<string> {\n        const [file, root] = Git.splitPath(fileName, repoPath);\n\n        const porcelain = porcelainVersion >= 2 ? `--porcelain=v${porcelainVersion}` : '--porcelain';\n        return git<string>(\n            { cwd: root, configs: ['-c', 'color.status=false'], env: { GIT_OPTIONAL_LOCKS: '0' } },\n            'status',\n            porcelain,\n            '--',\n            file\n        );\n    }\n\n    static tag(repoPath: string) {\n        return git<string>({ cwd: repoPath }, 'tag', '-l', '-n1');\n    }\n}\n","'use strict';\nimport { GitCommandOptions } from '../git/git';\n\nexport class RequestType<TRequest, TResponse> {\n    constructor(\n        public readonly name: string\n    ) {}\n}\n\nexport interface GitCommandRequest {\n    options: GitCommandOptions;\n    args: any[];\n}\n\nexport interface GitCommandResponse {\n    data: string;\n    isBuffer?: boolean;\n}\n\nexport const GitCommandRequestType = new RequestType<GitCommandRequest, GitCommandResponse>('git');\n\nexport interface RepositoryProxy {\n    folderUri: string;\n    path: string;\n    root: boolean;\n    closed: boolean;\n}\n\nexport interface RepositoriesInFolderRequest {\n    folderUri: string;\n}\n\nexport interface RepositoriesInFolderResponse {\n    repositories: RepositoryProxy[];\n}\n\nexport const RepositoriesInFolderRequestType = new RequestType<\n    RepositoriesInFolderRequest,\n    RepositoriesInFolderResponse\n>('repositories/inFolder');\n\nexport interface WorkspaceFileExistsRequest {\n    fileName: string;\n    repoPath: string;\n    options: { ensureCase: boolean };\n}\n\nexport interface WorkspaceFileExistsResponse {\n    exists: boolean;\n}\n\nexport const WorkspaceFileExistsRequestType = new RequestType<WorkspaceFileExistsRequest, WorkspaceFileExistsResponse>(\n    'workspace/fileExists'\n);\n","'use strict';\nimport { CancellationToken, Disposable, Uri, workspace, WorkspaceFoldersChangeEvent } from 'vscode';\nimport { LiveShare, SharedService } from 'vsls';\nimport { Container } from '../container';\nimport { git } from '../git/git';\nimport { GitUri } from '../git/gitUri';\nimport { Logger } from '../logger';\nimport { debug, Iterables, log, Strings } from '../system';\nimport {\n    GitCommandRequest,\n    GitCommandRequestType,\n    GitCommandResponse,\n    RepositoriesInFolderRequest,\n    RepositoriesInFolderRequestType,\n    RepositoriesInFolderResponse,\n    RequestType,\n    WorkspaceFileExistsRequest,\n    WorkspaceFileExistsRequestType,\n    WorkspaceFileExistsResponse\n} from './protocol';\nimport { vslsUriRootRegex } from './vsls';\n\nconst defaultWhitelistFn = () => true;\nconst gitWhitelist = new Map<string, ((args: any[]) => boolean)>([\n    ['blame', defaultWhitelistFn],\n    ['branch', args => args[1] === '-vv' || args[1] === '--contains'],\n    ['cat-file', defaultWhitelistFn],\n    ['config', args => args[1] === '--get' || args[1] === '--get-regex'],\n    ['diff', defaultWhitelistFn],\n    ['difftool', defaultWhitelistFn],\n    ['log', defaultWhitelistFn],\n    ['ls-files', defaultWhitelistFn],\n    ['ls-tree', defaultWhitelistFn],\n    ['merge-base', defaultWhitelistFn],\n    ['remote', args => args[1] === '-v' || args[1] === 'get-url'],\n    ['rev-parse', defaultWhitelistFn],\n    ['show', defaultWhitelistFn],\n    ['show-ref', defaultWhitelistFn],\n    ['stash', args => args[1] === 'list'],\n    ['status', defaultWhitelistFn],\n    ['symbolic-ref', defaultWhitelistFn],\n    ['tag', args => args[1] === '-l']\n]);\n\nconst leadingSlashRegex = /^[\\/|\\\\]/;\n\nexport class VslsHostService implements Disposable {\n    static ServiceId = 'proxy';\n\n    @log()\n    static async share(api: LiveShare) {\n        const service = await api.shareService(this.ServiceId);\n        if (service == null) {\n            throw new Error('Failed to share host service');\n        }\n\n        return new VslsHostService(api, service);\n    }\n\n    private readonly _disposable: Disposable;\n    private _localPathsRegex: RegExp | undefined;\n    private _localToSharedPaths = new Map<string, string>();\n    private _sharedPathsRegex: RegExp | undefined;\n    private _sharedToLocalPaths = new Map<string, string>();\n\n    constructor(\n        private readonly _api: LiveShare,\n        private readonly _service: SharedService\n    ) {\n        _service.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this));\n\n        this._disposable = Disposable.from(workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged, this));\n\n        this.onRequest(GitCommandRequestType, this.onGitCommandRequest.bind(this));\n        this.onRequest(RepositoriesInFolderRequestType, this.onRepositoriesInFolderRequest.bind(this));\n        this.onRequest(WorkspaceFileExistsRequestType, this.onWorkspaceFileExistsRequest.bind(this));\n\n        this.onWorkspaceFoldersChanged();\n    }\n\n    dispose() {\n        this._disposable.dispose();\n        void this._api.unshareService(VslsHostService.ServiceId);\n    }\n\n    private onRequest<TRequest, TResponse>(\n        requestType: RequestType<TRequest, TResponse>,\n        handler: (request: TRequest, cancellation: CancellationToken) => Promise<TResponse>\n    ) {\n        this._service.onRequest(requestType.name, (args: any[], cancellation: CancellationToken) =>\n            handler(args[0], cancellation)\n        );\n    }\n\n    @log()\n    private onAvailabilityChanged(available: boolean) {\n        // TODO\n    }\n\n    @debug()\n    private async onWorkspaceFoldersChanged(e?: WorkspaceFoldersChangeEvent) {\n        if (workspace.workspaceFolders === undefined || workspace.workspaceFolders.length === 0) return;\n\n        const cc = Logger.getCorrelationContext();\n\n        this._localToSharedPaths.clear();\n        this._sharedToLocalPaths.clear();\n\n        let localPath;\n        let sharedPath;\n        for (const f of workspace.workspaceFolders) {\n            localPath = Strings.normalizePath(f.uri.fsPath);\n            sharedPath = Strings.normalizePath(this.convertLocalUriToShared(f.uri).fsPath);\n\n            Logger.debug(cc, `shared='${sharedPath}' \\u2194 local='${localPath}'`);\n            this._localToSharedPaths.set(localPath, sharedPath);\n            this._sharedToLocalPaths.set(sharedPath, localPath);\n        }\n\n        let localPaths = Iterables.join(this._sharedToLocalPaths.values(), '|');\n        localPaths = localPaths.replace(/(\\/|\\\\)/g, '[\\\\\\\\/|\\\\\\\\]');\n        this._localPathsRegex = new RegExp(`(${localPaths})`, 'gi');\n\n        let sharedPaths = Iterables.join(this._localToSharedPaths.values(), '|');\n        sharedPaths = sharedPaths.replace(/(\\/|\\\\)/g, '[\\\\\\\\/|\\\\\\\\]');\n        this._sharedPathsRegex = new RegExp(`^(${sharedPaths})`, 'i');\n    }\n\n    @log()\n    private async onGitCommandRequest(\n        request: GitCommandRequest,\n        cancellation: CancellationToken\n    ): Promise<GitCommandResponse> {\n        const { options, args } = request;\n\n        const fn = gitWhitelist.get(request.args[0]);\n        if (fn === undefined || !fn(request.args)) throw new Error(`Git ${request.args[0]} command is not allowed`);\n\n        let isRootWorkspace = false;\n        if (options.cwd !== undefined && options.cwd.length > 0 && this._sharedToLocalPaths !== undefined) {\n            // This is all so ugly, but basically we are converting shared paths to local paths\n            if (this._sharedPathsRegex !== undefined && this._sharedPathsRegex.test(options.cwd)) {\n                options.cwd = Strings.normalizePath(options.cwd).replace(this._sharedPathsRegex, (match, shared) => {\n                    if (!isRootWorkspace) {\n                        isRootWorkspace = shared === '/~0';\n                    }\n\n                    const local = this._sharedToLocalPaths.get(shared);\n                    return local != null ? local : shared;\n                });\n            }\n            else if (leadingSlashRegex.test(options.cwd)) {\n                const localCwd = this._sharedToLocalPaths.get('/~0');\n                if (localCwd !== undefined) {\n                    isRootWorkspace = true;\n                    options.cwd = GitUri.resolve(options.cwd, localCwd);\n                }\n            }\n        }\n\n        let files = false;\n        let i = -1;\n        for (const arg of args) {\n            i++;\n            if (arg === '--') {\n                files = true;\n                continue;\n            }\n\n            if (!files) continue;\n\n            if (typeof arg === 'string') {\n                // If we are the \"root\" workspace, then we need to remove the leading slash off the path (otherwise it will not be treated as a relative path)\n                if (isRootWorkspace && leadingSlashRegex.test(arg[0])) {\n                    args.splice(i, 1, arg.substr(1));\n                }\n\n                if (this._sharedPathsRegex !== undefined && this._sharedPathsRegex.test(arg)) {\n                    args.splice(\n                        i,\n                        1,\n                        Strings.normalizePath(arg).replace(this._sharedPathsRegex, (match, shared) => {\n                            const local = this._sharedToLocalPaths.get(shared);\n                            return local != null ? local : shared;\n                        })\n                    );\n                }\n            }\n        }\n\n        let data = await git(options, ...args);\n        if (typeof data === 'string') {\n            // And then we convert local paths to shared paths\n            if (this._localPathsRegex !== undefined && data.length > 0) {\n                data = data.replace(this._localPathsRegex, (match, local) => {\n                    const shared = this._localToSharedPaths.get(local);\n                    return shared != null ? shared : local;\n                });\n            }\n\n            return { data: data };\n        }\n\n        return { data: data.toString('binary'), isBuffer: true };\n    }\n\n    @log()\n    private async onRepositoriesInFolderRequest(\n        request: RepositoriesInFolderRequest,\n        cancellation: CancellationToken\n    ): Promise<RepositoriesInFolderResponse> {\n        const uri = this.convertSharedUriToLocal(Uri.parse(request.folderUri));\n        const normalized = Strings.normalizePath(uri.fsPath, { stripTrailingSlash: true }).toLowerCase();\n\n        const repos = [\n            ...Iterables.filterMap(await Container.git.getRepositories(), r => {\n                if (!r.normalizedPath.startsWith(normalized)) return undefined;\n\n                const vslsUri = this.convertLocalUriToShared(r.folder.uri);\n                return {\n                    folderUri: vslsUri.toString(true),\n                    path: vslsUri.path,\n                    root: r.root,\n                    closed: r.closed\n                };\n            })\n        ];\n\n        return {\n            repositories: repos\n        };\n    }\n\n    @log()\n    private async onWorkspaceFileExistsRequest(\n        request: WorkspaceFileExistsRequest,\n        cancellation: CancellationToken\n    ): Promise<WorkspaceFileExistsResponse> {\n        let { repoPath } = request;\n        if (this._sharedPathsRegex !== undefined && this._sharedPathsRegex.test(repoPath)) {\n            repoPath = Strings.normalizePath(repoPath).replace(this._sharedPathsRegex, (match, shared) => {\n                const local = this._sharedToLocalPaths!.get(shared);\n                return local != null ? local : shared;\n            });\n        }\n\n        // TODO: Lock this to be only in the contained workspaces\n\n        return { exists: await Container.git.fileExists(repoPath, request.fileName, request.options) };\n    }\n\n    @debug({\n        exit: result => `returned ${result.toString(true)}`\n    })\n    private convertLocalUriToShared(localUri: Uri) {\n        const cc = Logger.getCorrelationContext();\n\n        let sharedUri = this._api.convertLocalUriToShared(localUri);\n        Logger.debug(\n            cc,\n            `LiveShare.convertLocalUriToShared(${localUri.toString(true)}) returned ${sharedUri.toString(true)}`\n        );\n\n        const localPath = localUri.path;\n        let sharedPath = sharedUri.path;\n        if (sharedUri.authority.length > 0) {\n            sharedPath = `/${sharedUri.authority}${sharedPath}`;\n        }\n\n        if (new RegExp(`${localPath}$`, 'i').test(sharedPath)) {\n            if (sharedPath.length === localPath.length) {\n                const folder = workspace.getWorkspaceFolder(localUri)!;\n                sharedUri = sharedUri.with({ path: `/~${folder.index}` });\n            }\n            else {\n                sharedUri = sharedUri.with({ path: sharedPath.substr(0, sharedPath.length - localPath.length) });\n            }\n        }\n        else if (!sharedPath.startsWith('/~')) {\n            const folder = workspace.getWorkspaceFolder(localUri)!;\n            sharedUri = sharedUri.with({ path: `/~${folder.index}${sharedPath}` });\n        }\n\n        return sharedUri;\n    }\n\n    private convertSharedUriToLocal(sharedUri: Uri) {\n        if (vslsUriRootRegex.test(sharedUri.path)) {\n            sharedUri = sharedUri.with({ path: `${sharedUri.path}/` });\n        }\n\n        const localUri = this._api.convertSharedUriToLocal(sharedUri);\n\n        const localPath = localUri.path;\n        const sharedPath = sharedUri.path;\n        if (localPath.endsWith(sharedPath)) {\n            return localUri.with({ path: localPath.substr(0, localPath.length - sharedPath.length) });\n        }\n        return localUri;\n    }\n}\n","'use strict';\nimport { CancellationToken, Disposable, window, WorkspaceFolder } from 'vscode';\nimport { LiveShare, SharedServiceProxy } from 'vsls';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { GitCommandOptions, Repository, RepositoryChange } from '../git/git';\nimport { Logger } from '../logger';\nimport { debug, log } from '../system';\nimport { VslsHostService } from './host';\nimport {\n    GitCommandRequestType,\n    RepositoriesInFolderRequestType,\n    RepositoryProxy,\n    RequestType,\n    WorkspaceFileExistsRequestType\n} from './protocol';\n\nexport class VslsGuestService implements Disposable {\n    @log()\n    static async connect(api: LiveShare) {\n        const cc = Logger.getCorrelationContext();\n\n        try {\n            const service = await api.getSharedService(VslsHostService.ServiceId);\n            if (service == null) {\n                throw new Error('Failed to connect to host service');\n            }\n\n            return new VslsGuestService(api, service);\n        }\n        catch (ex) {\n            Logger.error(ex, cc);\n            return undefined;\n        }\n    }\n\n    constructor(\n        private readonly _api: LiveShare,\n        private readonly _service: SharedServiceProxy\n    ) {\n        _service.onDidChangeIsServiceAvailable(this.onAvailabilityChanged.bind(this));\n        this.onAvailabilityChanged(_service.isServiceAvailable);\n    }\n\n    dispose() {}\n\n    @log()\n    private onAvailabilityChanged(available: boolean) {\n        if (available) {\n            void setCommandContext(CommandContext.Enabled, true);\n            return;\n        }\n\n        void setCommandContext(CommandContext.Enabled, false);\n        void window.showWarningMessage(\n            `GitLens features will be unavailable. Unable to connect to the host GitLens service. The host may have disabled GitLens guest access or may not have GitLens installed.`\n        );\n    }\n\n    @log()\n    async git<TOut extends string | Buffer>(options: GitCommandOptions, ...args: any[]) {\n        const response = await this.sendRequest(GitCommandRequestType, { options: options, args: args });\n\n        if (response.isBuffer) {\n            return new Buffer(response.data, 'binary') as TOut;\n        }\n        return response.data as TOut;\n    }\n\n    @log()\n    async getRepositoriesInFolder(\n        folder: WorkspaceFolder,\n        onAnyRepositoryChanged: (repo: Repository, reason: RepositoryChange) => void\n    ): Promise<Repository[]> {\n        const response = await this.sendRequest(RepositoriesInFolderRequestType, {\n            folderUri: folder.uri.toString(true)\n        });\n\n        return response.repositories.map(\n            (r: RepositoryProxy) => new Repository(folder, r.path, r.root, onAnyRepositoryChanged, false, r.closed)\n        );\n    }\n\n    @log()\n    async fileExists(\n        repoPath: string,\n        fileName: string,\n        options: { ensureCase: boolean } = { ensureCase: false }\n    ): Promise<boolean> {\n        const response = await this.sendRequest(WorkspaceFileExistsRequestType, {\n            fileName: fileName,\n            repoPath: repoPath,\n            options: options\n        });\n\n        return response.exists;\n    }\n\n    @debug()\n    private sendRequest<TRequest, TResponse>(\n        requestType: RequestType<TRequest, TResponse>,\n        request: TRequest,\n        cancellation?: CancellationToken\n    ): Promise<TResponse> {\n        return this._service.request(requestType.name, [request]);\n    }\n}\n","'use strict';\nimport { Disposable, workspace } from 'vscode';\nimport { getApi, LiveShare, Role, SessionChangeEvent } from 'vsls';\nimport { CommandContext, DocumentSchemes, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from './../logger';\nimport { VslsGuestService } from './guest';\nimport { VslsHostService } from './host';\n\nexport const vslsUriPrefixRegex = /^[\\/|\\\\]~(?:\\d+?|external)(?:[\\/|\\\\]|$)/;\nexport const vslsUriRootRegex = /^[\\/|\\\\]~(?:\\d+?|external)$/;\n\nexport class VslsController implements Disposable {\n    private _disposable: Disposable | undefined;\n    private _guest: VslsGuestService | undefined;\n    private _host: VslsHostService | undefined;\n\n    private _onReady: (() => void) | undefined;\n    private _waitForReady: Promise<void> | undefined;\n\n    constructor() {\n        void this.initialize();\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n        if (this._host !== undefined) {\n            this._host.dispose();\n        }\n\n        if (this._guest !== undefined) {\n            this._guest.dispose();\n        }\n    }\n\n    private async initialize() {\n        try {\n            // If we have a vsls: workspace open, we might be a guest, so wait until live share transitions into a mode\n            if (\n                workspace.workspaceFolders !== undefined &&\n                workspace.workspaceFolders.some(f => f.uri.scheme === DocumentSchemes.Vsls)\n            ) {\n                setCommandContext(CommandContext.Readonly, true);\n                this._waitForReady = new Promise(resolve => (this._onReady = resolve));\n            }\n\n            const api = await getApi();\n            if (api == null) {\n                // Tear it down if we can't talk to live share\n                if (this._onReady !== undefined) {\n                    this._onReady();\n                    this._waitForReady = undefined;\n                }\n                return;\n            }\n\n            this._disposable = Disposable.from(\n                api.onDidChangeSession(e => this.onLiveShareSessionChanged(api, e), this)\n            );\n        }\n        catch (ex) {\n            debugger;\n            Logger.error(ex);\n            return;\n        }\n    }\n\n    get isMaybeGuest() {\n        return this._guest !== undefined || this._waitForReady !== undefined;\n    }\n\n    async guest() {\n        if (this._waitForReady !== undefined) {\n            await this._waitForReady;\n            this._waitForReady = undefined;\n        }\n\n        return this._guest;\n    }\n\n    host() {\n        return this._host;\n    }\n\n    private async onLiveShareSessionChanged(api: LiveShare, e: SessionChangeEvent) {\n        if (this._host !== undefined) {\n            this._host.dispose();\n        }\n\n        if (this._guest !== undefined) {\n            this._guest.dispose();\n        }\n\n        switch (e.session.role) {\n            case Role.Host:\n                setCommandContext(CommandContext.Readonly, undefined);\n                if (Container.config.liveshare.allowGuestAccess) {\n                    this._host = await VslsHostService.share(api);\n                }\n                break;\n            case Role.Guest:\n                setCommandContext(CommandContext.Readonly, true);\n                this._guest = await VslsGuestService.connect(api);\n                break;\n\n            default:\n                setCommandContext(CommandContext.Readonly, undefined);\n                break;\n        }\n\n        if (this._onReady !== undefined) {\n            this._onReady();\n            this._onReady = undefined;\n        }\n    }\n}\n","'use strict';\nimport * as fs from 'fs';\nimport * as paths from 'path';\nimport {\n    ConfigurationChangeEvent,\n    Disposable,\n    Event,\n    EventEmitter,\n    extensions,\n    MessageItem,\n    ProgressLocation,\n    Range,\n    TextEditor,\n    Uri,\n    window,\n    WindowState,\n    workspace,\n    WorkspaceFolder,\n    WorkspaceFoldersChangeEvent\n} from 'vscode';\nimport { GitExtension } from '../@types/git';\nimport { configuration, RemotesConfig } from '../configuration';\nimport { CommandContext, DocumentSchemes, GlyphChars, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { LogCorrelationContext, Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { gate, Iterables, log, Objects, Strings, TernarySearchTree, Versions } from '../system';\nimport { CachedBlame, CachedDiff, CachedLog, GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\nimport { vslsUriPrefixRegex } from '../vsls/vsls';\nimport {\n    CommitFormatting,\n    Git,\n    GitAuthor,\n    GitBlame,\n    GitBlameCommit,\n    GitBlameLine,\n    GitBlameLines,\n    GitBlameParser,\n    GitBranch,\n    GitBranchParser,\n    GitCommit,\n    GitCommitType,\n    GitDiff,\n    GitDiffChunkLine,\n    GitDiffParser,\n    GitDiffShortStat,\n    GitFile,\n    GitLog,\n    GitLogCommit,\n    GitLogParser,\n    GitRemote,\n    GitRemoteParser,\n    GitStash,\n    GitStashParser,\n    GitStatus,\n    GitStatusFile,\n    GitStatusParser,\n    GitTag,\n    GitTagParser,\n    GitTree,\n    GitTreeParser,\n    Repository,\n    RepositoryChange\n} from './git';\nimport { GitUri } from './gitUri';\nimport { RemoteProviderFactory, RemoteProviders } from './remotes/factory';\n\nexport * from './gitUri';\nexport * from './models/models';\nexport * from './formatters/formatters';\nexport { getNameFromRemoteResource, RemoteProvider, RemoteResource, RemoteResourceType } from './remotes/provider';\nexport { RemoteProviderFactory } from './remotes/factory';\n\nconst RepoSearchWarnings = {\n    doesNotExist: /no such file or directory/i\n};\n\nconst userConfigRegex = /^user\\.(name|email) (.*)$/gm;\nconst mappedAuthorRegex = /(.+)\\s<(.+)>/;\n\nexport enum GitRepoSearchBy {\n    Author = 'author',\n    ChangedLines = 'changed-lines',\n    Changes = 'changes',\n    Files = 'files',\n    Message = 'message',\n    Sha = 'sha'\n}\n\nexport class GitService implements Disposable {\n    static emptyPromise: Promise<GitBlame | GitDiff | GitLog | undefined> = Promise.resolve(undefined);\n    static deletedOrMissingSha = Git.deletedOrMissingSha;\n    static stagedUncommittedSha = Git.stagedUncommittedSha;\n    static uncommittedSha = Git.uncommittedSha;\n\n    private _onDidChangeRepositories = new EventEmitter<void>();\n    get onDidChangeRepositories(): Event<void> {\n        return this._onDidChangeRepositories.event;\n    }\n\n    private readonly _disposable: Disposable;\n    private readonly _repositoryTree: TernarySearchTree<Repository>;\n    private _repositoriesLoadingPromise: Promise<void> | undefined;\n    private _suspended: boolean = false;\n\n    private readonly _branchesCache = new Map<string, GitBranch[]>();\n    private readonly _tagsCache = new Map<string, GitTag[]>();\n    private readonly _tagsWithRefsCache = new Map<string, GitTag[]>();\n    private readonly _trackedCache = new Map<string, boolean | Promise<boolean>>();\n    private readonly _userMapCache = new Map<string, { name?: string; email?: string } | null>();\n\n    constructor() {\n        this._repositoryTree = TernarySearchTree.forPaths();\n\n        this._disposable = Disposable.from(\n            window.onDidChangeWindowState(this.onWindowStateChanged, this),\n            workspace.onDidChangeWorkspaceFolders(this.onWorkspaceFoldersChanged, this),\n            configuration.onDidChange(this.onConfigurationChanged, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n\n        this._repositoriesLoadingPromise = this.onWorkspaceFoldersChanged();\n    }\n\n    dispose() {\n        this._repositoryTree.forEach(r => r.dispose());\n        this._branchesCache.clear();\n        this._tagsCache.clear();\n        this._tagsWithRefsCache.clear();\n        this._trackedCache.clear();\n        this._userMapCache.clear();\n\n        this._disposable && this._disposable.dispose();\n    }\n\n    get UseCaching() {\n        return Container.config.advanced.caching.enabled;\n    }\n\n    private onAnyRepositoryChanged(repo: Repository, reason: RepositoryChange) {\n        this._trackedCache.clear();\n\n        this._branchesCache.delete(repo.path);\n        this._tagsCache.delete(repo.path);\n        this._tagsWithRefsCache.clear();\n\n        if (reason === RepositoryChange.Config) {\n            this._userMapCache.delete(repo.path);\n        }\n\n        if (reason === RepositoryChange.Closed) {\n            // Send a notification that the repositories changed\n            setImmediate(async () => {\n                await this.updateContext(this._repositoryTree);\n\n                this.fireRepositoriesChanged();\n            });\n        }\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            configuration.changed(e, configuration.name('defaultDateStyle').value) ||\n            configuration.changed(e, configuration.name('defaultDateFormat').value)\n        ) {\n            CommitFormatting.reset();\n        }\n    }\n\n    private onWindowStateChanged(e: WindowState) {\n        if (e.focused) {\n            this._repositoryTree.forEach(r => r.resume());\n        }\n        else {\n            this._repositoryTree.forEach(r => r.suspend());\n        }\n\n        this._suspended = !e.focused;\n    }\n\n    private async onWorkspaceFoldersChanged(e?: WorkspaceFoldersChangeEvent) {\n        let initializing = false;\n        if (e === undefined) {\n            initializing = true;\n            e = {\n                added: workspace.workspaceFolders || [],\n                removed: []\n            } as WorkspaceFoldersChangeEvent;\n\n            Logger.log(`Starting repository search in ${e.added.length} folders`);\n        }\n\n        for (const f of e.added) {\n            const { scheme } = f.uri;\n            if (scheme !== DocumentSchemes.File && scheme !== DocumentSchemes.Vsls) continue;\n\n            if (scheme === DocumentSchemes.Vsls) {\n                if (Container.vsls.isMaybeGuest) {\n                    const guest = await Container.vsls.guest();\n                    if (guest !== undefined) {\n                        const repositories = await guest.getRepositoriesInFolder(\n                            f,\n                            this.onAnyRepositoryChanged.bind(this)\n                        );\n                        for (const r of repositories) {\n                            this._repositoryTree.set(r.path, r);\n                        }\n                    }\n                }\n            }\n            else {\n                // Search for and add all repositories (nested and/or submodules)\n                const repositories = await this.repositorySearch(f);\n                for (const r of repositories) {\n                    this._repositoryTree.set(r.path, r);\n                }\n            }\n        }\n\n        for (const f of e.removed) {\n            const { fsPath, scheme } = f.uri;\n            if (scheme !== DocumentSchemes.File && scheme !== DocumentSchemes.Vsls) continue;\n\n            const repos = this._repositoryTree.findSuperstr(fsPath);\n            const reposToDelete =\n                repos !== undefined\n                    ? // Since the filtered tree will have keys that are relative to the fsPath, normalize to the full path\n                      [...Iterables.map<Repository, [Repository, string]>(repos, r => [r, r.path])]\n                    : [];\n\n            // const filteredTree = this._repositoryTree.findSuperstr(fsPath);\n            // const reposToDelete =\n            //     filteredTree !== undefined\n            //         ? // Since the filtered tree will have keys that are relative to the fsPath, normalize to the full path\n            //           [\n            //               ...Iterables.map<[Repository, string], [Repository, string]>(\n            //                   filteredTree.entries(),\n            //                   ([r, k]) => [r, path.join(fsPath, k)]\n            //               )\n            //           ]\n            //         : [];\n\n            const repo = this._repositoryTree.get(fsPath);\n            if (repo !== undefined) {\n                reposToDelete.push([repo, fsPath]);\n            }\n\n            for (const [r, k] of reposToDelete) {\n                this._repositoryTree.delete(k);\n                r.dispose();\n            }\n        }\n\n        await this.updateContext(this._repositoryTree);\n\n        if (!initializing) {\n            // Defer the event trigger enough to let everything unwind\n            setImmediate(() => this.fireRepositoriesChanged());\n        }\n    }\n\n    private async repositorySearch(folder: WorkspaceFolder): Promise<Repository[]> {\n        const { uri } = folder;\n        const depth = configuration.get<number>(configuration.name('advanced')('repositorySearchDepth').value, uri);\n\n        Logger.log(`Searching for repositories (depth=${depth}) in '${uri.fsPath}' ...`);\n\n        const start = process.hrtime();\n\n        const repositories: Repository[] = [];\n        const anyRepoChangedFn = this.onAnyRepositoryChanged.bind(this);\n\n        const rootPath = await this.getRepoPathCore(uri.fsPath, true);\n        if (rootPath !== undefined) {\n            Logger.log(`Repository found in '${rootPath}'`);\n            repositories.push(new Repository(folder, rootPath, true, anyRepoChangedFn, this._suspended));\n        }\n\n        if (depth <= 0) {\n            Logger.log(\n                `Completed repository search (depth=${depth}) in '${uri.fsPath}' ${\n                    GlyphChars.Dot\n                } ${Strings.getDurationMilliseconds(start)} ms`\n            );\n\n            return repositories;\n        }\n\n        // Get any specified excludes -- this is a total hack, but works for some simple cases and something is better than nothing :)\n        let excludes = {\n            ...workspace.getConfiguration('files', uri).get<{ [key: string]: boolean }>('exclude', {}),\n            ...workspace.getConfiguration('search', uri).get<{ [key: string]: boolean }>('exclude', {})\n        };\n\n        const excludedPaths = [\n            ...Iterables.filterMap(Objects.entries(excludes), ([key, value]) => {\n                if (!value) return undefined;\n                if (key.startsWith('**/')) return key.substring(3);\n                return key;\n            })\n        ];\n\n        excludes = excludedPaths.reduce(\n            (accumulator, current) => {\n                accumulator[current] = true;\n                return accumulator;\n            },\n            Object.create(null) as any\n        );\n\n        let repoPaths;\n        try {\n            repoPaths = await this.repositorySearchCore(uri.fsPath, depth, excludes);\n        }\n        catch (ex) {\n            if (RepoSearchWarnings.doesNotExist.test(ex.message || '')) {\n                Logger.log(\n                    `Repository search (depth=${depth}) in '${uri.fsPath}' FAILED${ex.message ? `(${ex.message})` : ''}`\n                );\n            }\n            else {\n                Logger.error(ex, `Repository search (depth=${depth}) in '${uri.fsPath}' FAILED`);\n            }\n\n            return repositories;\n        }\n\n        for (let p of repoPaths) {\n            p = paths.dirname(p);\n            // If we are the same as the root, skip it\n            if (Strings.normalizePath(p) === rootPath) continue;\n\n            const rp = await this.getRepoPathCore(p, true);\n            if (rp === undefined) continue;\n\n            Logger.log(`Repository found in '${rp}'`);\n            repositories.push(new Repository(folder, rp, false, anyRepoChangedFn, this._suspended));\n        }\n\n        Logger.log(\n            `Completed repository search (depth=${depth}) in '${uri.fsPath}' ${\n                GlyphChars.Dot\n            } ${Strings.getDurationMilliseconds(start)} ms`\n        );\n\n        return repositories;\n    }\n\n    private async repositorySearchCore(\n        root: string,\n        depth: number,\n        excludes: { [key: string]: boolean },\n        repositories: string[] = []\n    ): Promise<string[]> {\n        return new Promise<string[]>((resolve, reject) => {\n            fs.readdir(root, async (err, files) => {\n                if (err != null) {\n                    reject(err);\n                    return;\n                }\n\n                if (files.length === 0) {\n                    resolve(repositories);\n                    return;\n                }\n\n                const folders: string[] = [];\n\n                const promises = files.map(file => {\n                    const path = paths.resolve(root, file);\n\n                    return new Promise<void>((res, rej) => {\n                        fs.stat(path, (err, stat) => {\n                            if (file === '.git') {\n                                repositories.push(path);\n                            }\n                            else if (err == null && excludes[file] !== true && stat != null && stat.isDirectory()) {\n                                folders.push(path);\n                            }\n\n                            res();\n                        });\n                    });\n                });\n\n                await Promise.all(promises);\n\n                if (depth-- > 0) {\n                    for (const folder of folders) {\n                        await this.repositorySearchCore(folder, depth, excludes, repositories);\n                    }\n                }\n\n                resolve(repositories);\n            });\n        });\n    }\n\n    private async updateContext(repositoryTree: TernarySearchTree<Repository>) {\n        const hasRepository = repositoryTree.any();\n        await setCommandContext(CommandContext.Enabled, hasRepository);\n\n        let hasRemotes = false;\n        if (hasRepository) {\n            for (const repo of repositoryTree.values()) {\n                hasRemotes = await repo.hasRemotes();\n                if (hasRemotes) break;\n            }\n        }\n\n        await setCommandContext(CommandContext.HasRemotes, hasRemotes);\n\n        // If we have no repositories setup a watcher in case one is initialized\n        if (!hasRepository) {\n            const watcher = workspace.createFileSystemWatcher('**/.git', false, true, true);\n            const disposable = Disposable.from(\n                watcher,\n                watcher.onDidCreate(async uri => {\n                    const f = workspace.getWorkspaceFolder(uri);\n                    if (f === undefined) return;\n\n                    // Search for and add all repositories (nested and/or submodules)\n                    const repositories = await this.repositorySearch(f);\n                    if (repositories.length === 0) return;\n\n                    disposable.dispose();\n\n                    for (const r of repositories) {\n                        this._repositoryTree.set(r.path, r);\n                    }\n\n                    await this.updateContext(this._repositoryTree);\n\n                    // Defer the event trigger enough to let everything unwind\n                    setImmediate(() => this.fireRepositoriesChanged());\n                }, this)\n            );\n        }\n    }\n\n    private fireRepositoriesChanged() {\n        this._onDidChangeRepositories.fire();\n    }\n\n    @log()\n    async applyChangesToWorkingFile(uri: GitUri, ref1?: string, ref2?: string) {\n        ref1 = ref1 || uri.sha;\n        if (ref1 === undefined || uri.repoPath === undefined) return;\n\n        if (ref2 === undefined) {\n            ref2 = ref1;\n            ref1 = `${ref1}^`;\n        }\n\n        let patch;\n        try {\n            patch = await Git.diff(uri.repoPath, uri.fsPath, ref1, ref2);\n            void (await Git.apply(uri.repoPath!, patch));\n        }\n        catch (ex) {\n            if (patch && /patch does not apply/i.test(ex.message)) {\n                const result = await window.showWarningMessage(\n                    `Unable to apply changes cleanly. Retry and allow conflicts?`,\n                    { title: 'Yes' } as MessageItem,\n                    { title: 'No', isCloseAffordance: true } as MessageItem\n                );\n\n                if (result === undefined || result.title !== 'Yes') return;\n\n                if (result.title === 'Yes') {\n                    try {\n                        void (await Git.apply(uri.repoPath!, patch, { allowConflicts: true }));\n                        return;\n                    }\n                    catch (e) {\n                        ex = e;\n                    }\n                }\n            }\n\n            Logger.error(ex);\n            void Messages.showGenericErrorMessage(`Unable to apply changes`);\n        }\n    }\n\n    @log()\n    checkout(repoPath: string, ref: string, fileName?: string) {\n        return Git.checkout(repoPath, ref, fileName);\n    }\n\n    @gate()\n    @log()\n    async fetch(repoPath: string, remote?: string) {\n        return Git.fetch(repoPath, { remote: remote });\n    }\n\n    @gate()\n    @log()\n    async fetchAll() {\n        const repositories = await this.getOrderedRepositories();\n        if (repositories.length === 0) return;\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Fetching repositories`,\n                cancellable: true\n            },\n            async (progress, token) => {\n                const total = repositories.length;\n                for (const repo of repositories) {\n                    progress.report({\n                        message: `${repo.formattedName}...`,\n                        increment: 100 / total\n                    });\n\n                    if (token.isCancellationRequested) break;\n\n                    await this.fetch(repo.path);\n                }\n            }\n        );\n    }\n\n    @gate()\n    @log()\n    async pullAll() {\n        const repositories = await this.getOrderedRepositories();\n        if (repositories.length === 0) return;\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Pulling repositories`,\n                cancellable: true\n            },\n            async (progress, token) => {\n                const total = repositories.length;\n                for (const repo of repositories) {\n                    progress.report({\n                        message: `${repo.formattedName}...`,\n                        increment: 100 / total\n                    });\n\n                    if (token.isCancellationRequested) break;\n\n                    await repo.pull({ progress: false });\n                }\n            }\n        );\n    }\n\n    @gate()\n    @log()\n    async pushAll() {\n        const repositories = await this.getOrderedRepositories();\n        if (repositories.length === 0) return;\n\n        await window.withProgress(\n            {\n                location: ProgressLocation.Notification,\n                title: `Pushing repositories`,\n                cancellable: true\n            },\n            async (progress, token) => {\n                const total = repositories.length;\n                for (const repo of repositories) {\n                    progress.report({\n                        message: `${repo.formattedName}...`,\n                        increment: 100 / total\n                    });\n\n                    if (token.isCancellationRequested) break;\n\n                    await repo.push({ progress: false });\n                }\n            }\n        );\n    }\n\n    async fileExists(\n        repoPath: string,\n        fileName: string,\n        options: { ensureCase: boolean } = { ensureCase: false }\n    ): Promise<boolean> {\n        if (Container.vsls.isMaybeGuest) {\n            const guest = await Container.vsls.guest();\n            if (guest !== undefined) {\n                return guest.fileExists(repoPath, fileName, options);\n            }\n        }\n\n        const path = paths.resolve(repoPath, fileName);\n        const exists = await new Promise<boolean>((resolve, reject) => fs.exists(path, resolve));\n        if (!options.ensureCase || !exists) return exists;\n\n        // Deal with renames in case only on case-insensative file systems\n        const normalizedRepoPath = paths.normalize(repoPath);\n        return this.fileExistsWithCase(path, normalizedRepoPath, normalizedRepoPath.length);\n    }\n\n    private async fileExistsWithCase(path: string, repoPath: string, repoPathLength: number): Promise<boolean> {\n        const dir = paths.dirname(path);\n        if (dir.length < repoPathLength) return false;\n        if (dir === repoPath) return true;\n\n        const filenames = await new Promise<string[]>((resolve, reject) =>\n            fs.readdir(dir, (err: NodeJS.ErrnoException, files: string[]) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(files);\n                }\n            })\n        );\n        if (filenames.indexOf(paths.basename(path)) === -1) {\n            return false;\n        }\n        return this.fileExistsWithCase(dir, repoPath, repoPathLength);\n    }\n\n    @log()\n    async findNextCommit(repoPath: string, fileName: string, ref?: string): Promise<GitLogCommit | undefined> {\n        let log = await this.getLogForFile(repoPath, fileName, { maxCount: 1, ref: ref, renames: true, reverse: true });\n        let commit = log && Iterables.first(log.commits.values());\n        if (commit) return commit;\n\n        const nextFileName = await this.findNextFileName(repoPath, fileName, ref);\n        if (nextFileName) {\n            log = await this.getLogForFile(repoPath, nextFileName, {\n                maxCount: 1,\n                ref: ref,\n                renames: true,\n                reverse: true\n            });\n            commit = log && Iterables.first(log.commits.values());\n        }\n\n        return commit;\n    }\n\n    @log()\n    async findNextFileName(repoPath: string | undefined, fileName: string, ref?: string): Promise<string | undefined> {\n        [fileName, repoPath] = Git.splitPath(fileName, repoPath);\n\n        return (await this.fileExists(repoPath, fileName, { ensureCase: true }))\n            ? fileName\n            : await this.findNextFileNameCore(repoPath, fileName, ref);\n    }\n\n    private async findNextFileNameCore(repoPath: string, fileName: string, ref?: string): Promise<string | undefined> {\n        if (ref === undefined) {\n            // Get the most recent commit for this file name\n            ref = await this.getRecentShaForFile(repoPath, fileName);\n            if (ref === undefined) return undefined;\n        }\n\n        // Get the full commit (so we can see if there are any matching renames in the files)\n        const log = await this.getLog(repoPath, { maxCount: 1, ref: ref });\n        if (log === undefined) return undefined;\n\n        const c = Iterables.first(log.commits.values());\n        const file = c.files.find(f => f.originalFileName === fileName);\n        if (file === undefined) return undefined;\n\n        return file.fileName;\n    }\n\n    async findWorkingFileName(commit: GitCommit): Promise<[string | undefined, string | undefined]>;\n    async findWorkingFileName(\n        fileName: string,\n        repoPath?: string,\n        ref?: string\n    ): Promise<[string | undefined, string | undefined]>;\n    @log()\n    async findWorkingFileName(\n        commitOrFileName: GitCommit | string,\n        repoPath?: string,\n        ref?: string\n    ): Promise<[string | undefined, string | undefined]> {\n        let fileName;\n        if (typeof commitOrFileName === 'string') {\n            fileName = commitOrFileName;\n            if (repoPath === undefined) {\n                repoPath = await this.getRepoPath(fileName, { ref: ref });\n                [fileName, repoPath] = Git.splitPath(fileName, repoPath);\n            }\n            else {\n                fileName = Strings.normalizePath(paths.relative(repoPath, fileName));\n            }\n        }\n        else {\n            const c = commitOrFileName;\n            repoPath = c.repoPath;\n            if (c.workingFileName && (await this.fileExists(repoPath, c.workingFileName, { ensureCase: true }))) {\n                return [c.workingFileName, repoPath];\n            }\n            fileName = c.fileName;\n        }\n\n        // Keep walking up to the most recent commit for a given filename, until it exists on disk\n        while (true) {\n            if (await this.fileExists(repoPath, fileName, { ensureCase: true })) return [fileName, repoPath];\n\n            fileName = await this.findNextFileNameCore(repoPath, fileName);\n            if (fileName === undefined) return [undefined, undefined];\n        }\n    }\n\n    @log({\n        args: {\n            0: (editor: TextEditor) =>\n                editor !== undefined ? `TextEditor(${Logger.toLoggable(editor.document.uri)})` : 'undefined'\n        }\n    })\n    async getActiveRepoPath(editor?: TextEditor): Promise<string | undefined> {\n        editor = editor || window.activeTextEditor;\n\n        let repoPath;\n        if (editor != null) {\n            const doc = await Container.tracker.getOrAdd(editor.document.uri);\n            if (doc !== undefined) {\n                repoPath = doc.uri.repoPath;\n            }\n        }\n\n        if (repoPath != null) return repoPath;\n\n        return this.getHighlanderRepoPath();\n    }\n\n    @log()\n    getHighlanderRepoPath(): string | undefined {\n        const entry = this._repositoryTree.highlander();\n        if (entry === undefined) return undefined;\n\n        const [repo] = entry;\n        return repo.path;\n    }\n\n    @log()\n    async getBlameForFile(uri: GitUri): Promise<GitBlame | undefined> {\n        const cc = Logger.getCorrelationContext();\n\n        let key = 'blame';\n        if (uri.sha !== undefined) {\n            key += `:${uri.sha}`;\n        }\n\n        const doc = await Container.tracker.getOrAdd(uri);\n        if (this.UseCaching) {\n            if (doc.state !== undefined) {\n                const cachedBlame = doc.state.get<CachedBlame>(key);\n                if (cachedBlame !== undefined) {\n                    Logger.debug(cc, `Cache hit: '${key}'`);\n                    return cachedBlame.item;\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: '${key}'`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getBlameForFileCore(uri, doc, key, cc);\n\n        if (doc.state !== undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            doc.state.set<CachedBlame>(key, {\n                item: promise\n            } as CachedBlame);\n        }\n\n        return promise;\n    }\n\n    private async getBlameForFileCore(\n        uri: GitUri,\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitBlame | undefined> {\n        if (!(await this.isTracked(uri))) {\n            Logger.log(cc, `Skipping blame; '${uri.fsPath}' is not tracked`);\n            return GitService.emptyPromise as Promise<GitBlame>;\n        }\n\n        const [file, root] = Git.splitPath(uri.fsPath, uri.repoPath, false);\n\n        try {\n            const data = await Git.blame(root, file, uri.sha, {\n                args: Container.config.advanced.blame.customArguments,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace\n            });\n            const blame = GitBlameParser.parse(data, root, file, await this.getCurrentUser(root));\n            return blame;\n        }\n        catch (ex) {\n            // Trap and cache expected blame errors\n            if (document.state !== undefined) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                document.state.set<CachedBlame>(key, {\n                    item: GitService.emptyPromise,\n                    errorMessage: msg\n                } as CachedBlame);\n\n                document.setBlameFailure();\n\n                return GitService.emptyPromise as Promise<GitBlame>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log({\n        args: {\n            1: contents => '<contents>'\n        }\n    })\n    async getBlameForFileContents(uri: GitUri, contents: string): Promise<GitBlame | undefined> {\n        const cc = Logger.getCorrelationContext();\n\n        const key = `blame:${Strings.sha1(contents)}`;\n\n        const doc = await Container.tracker.getOrAdd(uri);\n        if (this.UseCaching) {\n            if (doc.state !== undefined) {\n                const cachedBlame = doc.state.get<CachedBlame>(key);\n                if (cachedBlame !== undefined) {\n                    Logger.debug(cc, `Cache hit: ${key}`);\n                    return cachedBlame.item;\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: ${key}`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getBlameForFileContentsCore(uri, contents, doc, key, cc);\n\n        if (doc.state !== undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            doc.state.set<CachedBlame>(key, {\n                item: promise\n            } as CachedBlame);\n        }\n\n        return promise;\n    }\n\n    async getBlameForFileContentsCore(\n        uri: GitUri,\n        contents: string,\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitBlame | undefined> {\n        if (!(await this.isTracked(uri))) {\n            Logger.log(cc, `Skipping blame; '${uri.fsPath}' is not tracked`);\n            return GitService.emptyPromise as Promise<GitBlame>;\n        }\n\n        const [file, root] = Git.splitPath(uri.fsPath, uri.repoPath, false);\n\n        try {\n            const data = await Git.blame_contents(root, file, contents, {\n                args: Container.config.advanced.blame.customArguments,\n                correlationKey: `:${key}`,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace\n            });\n            const blame = GitBlameParser.parse(data, root, file, await this.getCurrentUser(root));\n            return blame;\n        }\n        catch (ex) {\n            // Trap and cache expected blame errors\n            if (document.state !== undefined) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                document.state.set<CachedBlame>(key, {\n                    item: GitService.emptyPromise,\n                    errorMessage: msg\n                } as CachedBlame);\n\n                document.setBlameFailure();\n                return GitService.emptyPromise as Promise<GitBlame>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log()\n    async getBlameForLine(\n        uri: GitUri,\n        line: number,\n        options: { skipCache?: boolean } = {}\n    ): Promise<GitBlameLine | undefined> {\n        if (!options.skipCache && this.UseCaching) {\n            const blame = await this.getBlameForFile(uri);\n            if (blame === undefined) return undefined;\n\n            let blameLine = blame.lines[line];\n            if (blameLine === undefined) {\n                if (blame.lines.length !== line) return undefined;\n                blameLine = blame.lines[line - 1];\n            }\n\n            const commit = blame.commits.get(blameLine.sha);\n            if (commit === undefined) return undefined;\n\n            return {\n                author: { ...blame.authors.get(commit.author), lineCount: commit.lines.length },\n                commit: commit,\n                line: blameLine\n            } as GitBlameLine;\n        }\n\n        const lineToBlame = line + 1;\n        const fileName = uri.fsPath;\n\n        try {\n            const data = await Git.blame(uri.repoPath, fileName, uri.sha, {\n                args: Container.config.advanced.blame.customArguments,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace,\n                startLine: lineToBlame,\n                endLine: lineToBlame\n            });\n            const blame = GitBlameParser.parse(data, uri.repoPath, fileName, await this.getCurrentUser(uri.repoPath!));\n            if (blame === undefined) return undefined;\n\n            return {\n                author: Iterables.first(blame.authors.values()),\n                commit: Iterables.first(blame.commits.values()),\n                line: blame.lines[line]\n            } as GitBlameLine;\n        }\n        catch {\n            return undefined;\n        }\n    }\n\n    @log({\n        args: {\n            2: contents => '<contents>'\n        }\n    })\n    async getBlameForLineContents(\n        uri: GitUri,\n        line: number,\n        contents: string,\n        options: { skipCache?: boolean } = {}\n    ): Promise<GitBlameLine | undefined> {\n        if (!options.skipCache && this.UseCaching) {\n            const blame = await this.getBlameForFileContents(uri, contents);\n            if (blame === undefined) return undefined;\n\n            let blameLine = blame.lines[line];\n            if (blameLine === undefined) {\n                if (blame.lines.length !== line) return undefined;\n                blameLine = blame.lines[line - 1];\n            }\n\n            const commit = blame.commits.get(blameLine.sha);\n            if (commit === undefined) return undefined;\n\n            return {\n                author: { ...blame.authors.get(commit.author), lineCount: commit.lines.length },\n                commit: commit,\n                line: blameLine\n            } as GitBlameLine;\n        }\n\n        const lineToBlame = line + 1;\n        const fileName = uri.fsPath;\n\n        try {\n            const data = await Git.blame_contents(uri.repoPath, fileName, contents, {\n                args: Container.config.advanced.blame.customArguments,\n                ignoreWhitespace: Container.config.blame.ignoreWhitespace,\n                startLine: lineToBlame,\n                endLine: lineToBlame\n            });\n            const currentUser = await this.getCurrentUser(uri.repoPath!);\n            const blame = GitBlameParser.parse(data, uri.repoPath, fileName, currentUser);\n            if (blame === undefined) return undefined;\n\n            return {\n                author: Iterables.first(blame.authors.values()),\n                commit: Iterables.first(blame.commits.values()),\n                line: blame.lines[line]\n            } as GitBlameLine;\n        }\n        catch {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getBlameForRange(uri: GitUri, range: Range): Promise<GitBlameLines | undefined> {\n        const blame = await this.getBlameForFile(uri);\n        if (blame === undefined) return undefined;\n\n        return this.getBlameForRangeSync(blame, uri, range);\n    }\n\n    @log({\n        args: { 0: blame => '<blame>' }\n    })\n    getBlameForRangeSync(blame: GitBlame, uri: GitUri, range: Range): GitBlameLines | undefined {\n        if (blame.lines.length === 0) return { allLines: blame.lines, ...blame };\n\n        if (range.start.line === 0 && range.end.line === blame.lines.length - 1) {\n            return { allLines: blame.lines, ...blame };\n        }\n\n        const lines = blame.lines.slice(range.start.line, range.end.line + 1);\n        const shas = new Set(lines.map(l => l.sha));\n\n        const authors: Map<string, GitAuthor> = new Map();\n        const commits: Map<string, GitBlameCommit> = new Map();\n        for (const c of blame.commits.values()) {\n            if (!shas.has(c.sha)) continue;\n\n            const commit = c.with({\n                lines: c.lines.filter(l => l.line >= range.start.line && l.line <= range.end.line)\n            });\n            commits.set(c.sha, commit);\n\n            let author = authors.get(commit.author);\n            if (author === undefined) {\n                author = {\n                    name: commit.author,\n                    lineCount: 0\n                };\n                authors.set(author.name, author);\n            }\n\n            author.lineCount += commit.lines.length;\n        }\n\n        const sortedAuthors = new Map([...authors.entries()].sort((a, b) => b[1].lineCount - a[1].lineCount));\n\n        return {\n            authors: sortedAuthors,\n            commits: commits,\n            lines: lines,\n            allLines: blame.lines\n        } as GitBlameLines;\n    }\n\n    @log()\n    async getBranch(repoPath: string | undefined): Promise<GitBranch | undefined> {\n        if (repoPath === undefined) return undefined;\n\n        const data = await Git.revparse_currentBranch(repoPath);\n        if (data === undefined) return undefined;\n\n        const branch = data[0].split('\\n');\n        return new GitBranch(repoPath, branch[0], true, data[1], branch[1]);\n    }\n\n    @log()\n    async getBranches(repoPath: string | undefined): Promise<GitBranch[]> {\n        if (repoPath === undefined) return [];\n\n        let branches = this._branchesCache.get(repoPath);\n        if (branches !== undefined) return branches;\n\n        const data = await Git.branch(repoPath, { all: true });\n        // If we don't get any data, assume the repo doesn't have any commits yet so check if we have a current branch\n        if (data == null || data.length === 0) {\n            const current = await this.getBranch(repoPath);\n            branches = current !== undefined ? [current] : [];\n        }\n        else {\n            branches = GitBranchParser.parse(data, repoPath) || [];\n        }\n\n        this._branchesCache.set(repoPath, branches);\n        return branches;\n    }\n\n    @log()\n    async getChangedFilesCount(repoPath: string, ref?: string): Promise<GitDiffShortStat | undefined> {\n        const data = await Git.diff_shortstat(repoPath, ref);\n        return GitDiffParser.parseShortStat(data);\n    }\n\n    @log()\n    async getConfig(key: string, repoPath?: string): Promise<string | undefined> {\n        return await Git.config_get(key, repoPath);\n    }\n\n    @log()\n    async getCurrentUser(repoPath: string) {\n        let user = this._userMapCache.get(repoPath);\n        if (user != null) return user;\n        // If we found the repo, but no user data was found just return\n        if (user === null) return undefined;\n\n        const data = await Git.config_getRegex('user.(name|email)', repoPath, { local: true });\n        if (!data) {\n            // If we found no user data, mark it so we won't bother trying again\n            this._userMapCache.set(repoPath, null);\n            return undefined;\n        }\n\n        user = { name: undefined, email: undefined };\n\n        let match: RegExpExecArray | null = null;\n        do {\n            match = userConfigRegex.exec(data);\n            if (match == null) break;\n\n            // Stops excessive memory usage -- https://bugs.chromium.org/p/v8/issues/detail?id=2869\n            user[match[1] as 'name' | 'email'] = (' ' + match[2]).substr(1);\n        } while (match != null);\n\n        const author = `${user.name} <${user.email}>`;\n        // Check if there is a mailmap for the current user\n        const mappedAuthor = await Git.check_mailmap(repoPath, author);\n        if (mappedAuthor != null && mappedAuthor.length !== 0 && author !== mappedAuthor) {\n            match = mappedAuthorRegex.exec(mappedAuthor);\n            if (match != null) {\n                [, user.name, user.email] = match;\n            }\n        }\n\n        this._userMapCache.set(repoPath, user);\n        return user;\n    }\n\n    @log()\n    async getDiffForFile(uri: GitUri, ref1?: string, ref2?: string): Promise<GitDiff | undefined> {\n        const cc = Logger.getCorrelationContext();\n\n        if (ref1 !== undefined && ref2 === undefined && uri.sha !== undefined) {\n            ref2 = uri.sha;\n        }\n\n        let key = 'diff';\n        if (ref1 !== undefined) {\n            key += `:${ref1}`;\n        }\n        if (ref2 !== undefined) {\n            key += `:${ref2}`;\n        }\n\n        const doc = await Container.tracker.getOrAdd(uri);\n        if (this.UseCaching) {\n            if (doc.state !== undefined) {\n                const cachedDiff = doc.state.get<CachedDiff>(key);\n                if (cachedDiff !== undefined) {\n                    Logger.debug(cc, `Cache hit: '${key}'`);\n                    return cachedDiff.item;\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: '${key}'`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getDiffForFileCore(\n            uri.repoPath,\n            uri.fsPath,\n            ref1,\n            ref2,\n            { encoding: GitService.getEncoding(uri) },\n            doc,\n            key,\n            cc\n        );\n\n        if (doc.state !== undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            doc.state.set<CachedDiff>(key, {\n                item: promise\n            } as CachedDiff);\n        }\n\n        return promise;\n    }\n\n    private async getDiffForFileCore(\n        repoPath: string | undefined,\n        fileName: string,\n        ref1: string | undefined,\n        ref2: string | undefined,\n        options: { encoding?: string },\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitDiff | undefined> {\n        const [file, root] = Git.splitPath(fileName, repoPath, false);\n\n        try {\n            const data = await Git.diff(root, file, ref1, ref2, { ...options, filter: 'M' });\n            const diff = GitDiffParser.parse(data);\n            return diff;\n        }\n        catch (ex) {\n            // Trap and cache expected diff errors\n            if (document.state !== undefined) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                document.state.set<CachedDiff>(key, {\n                    item: GitService.emptyPromise,\n                    errorMessage: msg\n                } as CachedDiff);\n\n                return GitService.emptyPromise as Promise<GitDiff>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log()\n    async getDiffForLine(\n        uri: GitUri,\n        line: number,\n        ref1?: string,\n        ref2?: string\n    ): Promise<GitDiffChunkLine | undefined> {\n        try {\n            const diff = await this.getDiffForFile(uri, ref1, ref2);\n            if (diff === undefined) return undefined;\n\n            const chunk = diff.chunks.find(c => c.currentPosition.start <= line && c.currentPosition.end >= line);\n            if (chunk === undefined) return undefined;\n\n            return chunk.lines[line - chunk.currentPosition.start + 1];\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getDiffStatus(\n        repoPath: string,\n        ref1?: string,\n        ref2?: string,\n        options: { filter?: string } = {}\n    ): Promise<GitFile[] | undefined> {\n        try {\n            const data = await Git.diff_nameStatus(repoPath, ref1, ref2, options);\n            const diff = GitDiffParser.parseNameStatus(data, repoPath);\n            return diff;\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getFileStatusForCommit(repoPath: string, fileName: string, ref: string): Promise<GitFile | undefined> {\n        if (ref === GitService.deletedOrMissingSha || GitService.isUncommitted(ref)) return undefined;\n\n        const data = await Git.show_status(repoPath, fileName, ref);\n        if (!data) return undefined;\n\n        const files = GitDiffParser.parseNameStatus(data, repoPath);\n        if (files === undefined || files.length === 0) return undefined;\n\n        return files[0];\n    }\n\n    @log()\n    async getRecentLogCommitForFile(repoPath: string | undefined, fileName: string): Promise<GitLogCommit | undefined> {\n        return this.getLogCommitForFile(repoPath, fileName, undefined);\n    }\n\n    @log()\n    async getRecentShaForFile(repoPath: string, fileName: string) {\n        return await Git.log_recent(repoPath, fileName);\n    }\n\n    @log()\n    async getLogCommit(repoPath: string, ref: string): Promise<GitLogCommit | undefined> {\n        const log = await this.getLog(repoPath, { maxCount: 2, ref: ref });\n        if (log === undefined) return undefined;\n\n        return log.commits.get(ref);\n    }\n\n    @log()\n    async getLogCommitForFile(\n        repoPath: string | undefined,\n        fileName: string,\n        options: { ref?: string; firstIfNotFound?: boolean; reverse?: boolean } = {}\n    ): Promise<GitLogCommit | undefined> {\n        const log = await this.getLogForFile(repoPath, fileName, {\n            maxCount: 2,\n            ref: options.ref,\n            reverse: options.reverse\n        });\n        if (log === undefined) return undefined;\n\n        const commit = options.ref && log.commits.get(options.ref);\n        if (commit === undefined && !options.firstIfNotFound && options.ref) {\n            // If the ref isn't a valid sha we will never find it, so let it fall through so we return the first\n            if (!Git.isSha(options.ref) || Git.isUncommitted(options.ref)) return undefined;\n        }\n\n        return commit || Iterables.first(log.commits.values());\n    }\n\n    @log()\n    async getLog(\n        repoPath: string,\n        options: { authors?: string[]; maxCount?: number; ref?: string; reverse?: boolean } = {}\n    ): Promise<GitLog | undefined> {\n        const maxCount = options.maxCount == null ? Container.config.advanced.maxListItems || 0 : options.maxCount;\n\n        try {\n            const data = await Git.log(repoPath, {\n                authors: options.authors,\n                maxCount: maxCount,\n                ref: options.ref,\n                reverse: options.reverse\n            });\n            const log = GitLogParser.parse(\n                data,\n                GitCommitType.Branch,\n                repoPath,\n                undefined,\n                options.ref,\n                await this.getCurrentUser(repoPath),\n                maxCount,\n                options.reverse!,\n                undefined\n            );\n\n            if (log !== undefined) {\n                const opts = { ...options };\n                log.query = (maxCount: number | undefined) => this.getLog(repoPath, { ...opts, maxCount: maxCount });\n            }\n\n            return log;\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getLogForSearch(\n        repoPath: string,\n        search: string,\n        searchBy: GitRepoSearchBy,\n        options: { maxCount?: number } = {}\n    ): Promise<GitLog | undefined> {\n        let maxCount = options.maxCount == null ? Container.config.advanced.maxListItems || 0 : options.maxCount;\n\n        let searchArgs: string[] | undefined = undefined;\n        switch (searchBy) {\n            case GitRepoSearchBy.Author:\n                searchArgs = ['-m', '-M', '--all', '--full-history', '-E', '-i', `--author=${search}`];\n                break;\n            case GitRepoSearchBy.ChangedLines:\n                searchArgs = ['-M', '--all', '--full-history', '-E', '-i', `-G${search}`];\n                break;\n            case GitRepoSearchBy.Changes:\n                searchArgs = ['-M', '--all', '--full-history', '-E', '-i', '--pickaxe-regex', `-S${search}`];\n                break;\n            case GitRepoSearchBy.Files:\n                searchArgs = ['-M', '--all', '--full-history', '-E', '-i', `--`, `${search}`];\n                break;\n            case GitRepoSearchBy.Message:\n                searchArgs = ['-m', '-M', '--all', '--full-history', '-E', '-i'];\n                if (search) {\n                    searchArgs.push(`--grep=${search}`);\n                }\n                break;\n            case GitRepoSearchBy.Sha:\n                searchArgs = [`-m`, '-M', search];\n                maxCount = 1;\n                break;\n        }\n\n        try {\n            const data = await Git.log_search(repoPath, searchArgs, { maxCount: maxCount });\n            const log = GitLogParser.parse(\n                data,\n                GitCommitType.Branch,\n                repoPath,\n                undefined,\n                undefined,\n                await this.getCurrentUser(repoPath),\n                maxCount,\n                false,\n                undefined\n            );\n\n            if (log !== undefined) {\n                const opts = { ...options };\n                log.query = (maxCount: number | undefined) =>\n                    this.getLogForSearch(repoPath, search, searchBy, { ...opts, maxCount: maxCount });\n            }\n\n            return log;\n        }\n        catch (ex) {\n            return undefined;\n        }\n    }\n\n    @log()\n    async getLogForFile(\n        repoPath: string | undefined,\n        fileName: string,\n        options: { maxCount?: number; range?: Range; ref?: string; renames?: boolean; reverse?: boolean } = {}\n    ): Promise<GitLog | undefined> {\n        if (repoPath !== undefined && repoPath === Strings.normalizePath(fileName)) {\n            throw new Error(`File name cannot match the repository path; fileName=${fileName}`);\n        }\n\n        const cc = Logger.getCorrelationContext();\n\n        options = { reverse: false, ...options };\n\n        if (options.renames === undefined) {\n            options.renames = Container.config.advanced.fileHistoryFollowsRenames;\n        }\n\n        let key = 'log';\n        if (options.ref !== undefined) {\n            key += `:${options.ref}`;\n        }\n        if (options.maxCount !== undefined) {\n            key += `:n${options.maxCount}`;\n        }\n        if (options.renames) {\n            key += `:follow`;\n        }\n        if (options.reverse) {\n            key += `:reverse`;\n        }\n\n        const doc = await Container.tracker.getOrAdd(GitUri.fromFile(fileName, repoPath!, options.ref));\n        if (this.UseCaching && options.range === undefined) {\n            if (doc.state !== undefined) {\n                const cachedLog = doc.state.get<CachedLog>(key);\n                if (cachedLog !== undefined) {\n                    Logger.debug(cc, `Cache hit: '${key}'`);\n                    return cachedLog.item;\n                }\n\n                if (options.ref !== undefined || options.maxCount !== undefined) {\n                    // Since we are looking for partial log, see if we have the log of the whole file\n                    const cachedLog = doc.state.get<CachedLog>(\n                        `log${options.renames ? ':follow' : ''}${options.reverse ? ':reverse' : ''}`\n                    );\n                    if (cachedLog !== undefined) {\n                        if (options.ref === undefined) {\n                            Logger.debug(cc, `Cache hit: ~'${key}'`);\n                            return cachedLog.item;\n                        }\n\n                        Logger.debug(cc, `Cache ?: '${key}'`);\n                        let log = await cachedLog.item;\n                        if (log !== undefined && !log.truncated && log.commits.has(options.ref)) {\n                            Logger.debug(cc, `Cache hit: '${key}'`);\n\n                            // Create a copy of the log starting at the requested commit\n                            let skip = true;\n                            let i = 0;\n                            const authors = new Map<string, GitAuthor>();\n                            const commits = new Map(\n                                Iterables.filterMap<[string, GitLogCommit], [string, GitLogCommit]>(\n                                    log.commits.entries(),\n                                    ([ref, c]) => {\n                                        if (skip) {\n                                            if (ref !== options.ref) return undefined;\n                                            skip = false;\n                                        }\n\n                                        i++;\n                                        if (options.maxCount !== undefined && i > options.maxCount) {\n                                            return undefined;\n                                        }\n\n                                        authors.set(c.author, log.authors.get(c.author)!);\n                                        return [ref, c];\n                                    }\n                                )\n                            );\n\n                            const opts = { ...options };\n                            log = {\n                                ...log,\n                                maxCount: options.maxCount,\n                                count: commits.size,\n                                commits: commits,\n                                authors: authors,\n                                query: (maxCount: number | undefined) =>\n                                    this.getLogForFile(repoPath, fileName, { ...opts, maxCount: maxCount })\n                            };\n\n                            return log;\n                        }\n                    }\n                }\n            }\n\n            Logger.debug(cc, `Cache miss: '${key}'`);\n\n            if (doc.state === undefined) {\n                doc.state = new GitDocumentState(doc.key);\n            }\n        }\n\n        const promise = this.getLogForFileCore(repoPath, fileName, options, doc, key, cc);\n\n        if (doc.state !== undefined && options.range === undefined) {\n            Logger.debug(cc, `Cache add: '${key}'`);\n\n            doc.state.set<CachedLog>(key, {\n                item: promise\n            } as CachedLog);\n        }\n\n        return promise;\n    }\n\n    private async getLogForFileCore(\n        repoPath: string | undefined,\n        fileName: string,\n        options: { maxCount?: number; range?: Range; ref?: string; renames?: boolean; reverse?: boolean },\n        document: TrackedDocument<GitDocumentState>,\n        key: string,\n        cc: LogCorrelationContext | undefined\n    ): Promise<GitLog | undefined> {\n        if (!(await this.isTracked(fileName, repoPath, { ref: options.ref }))) {\n            Logger.log(cc, `Skipping log; '${fileName}' is not tracked`);\n            return GitService.emptyPromise as Promise<GitLog>;\n        }\n\n        const [file, root] = Git.splitPath(fileName, repoPath, false);\n\n        try {\n            // tslint:disable-next-line:prefer-const\n            let { range, ...opts } = options;\n            if (range !== undefined && range.start.line > range.end.line) {\n                range = new Range(range.end, range.start);\n            }\n\n            const maxCount = options.maxCount == null ? Container.config.advanced.maxListItems || 0 : options.maxCount;\n\n            const data = await Git.log_file(root, file, {\n                ...opts,\n                maxCount: maxCount,\n                startLine: range === undefined ? undefined : range.start.line + 1,\n                endLine: range === undefined ? undefined : range.end.line + 1\n            });\n            const log = GitLogParser.parse(\n                data,\n                GitCommitType.File,\n                root,\n                file,\n                opts.ref,\n                await this.getCurrentUser(root),\n                maxCount,\n                opts.reverse!,\n                range\n            );\n\n            if (log !== undefined) {\n                const opts = { ...options };\n                log.query = (maxCount: number | undefined) =>\n                    this.getLogForFile(repoPath, fileName, { ...opts, maxCount: maxCount });\n            }\n\n            return log;\n        }\n        catch (ex) {\n            // Trap and cache expected log errors\n            if (document.state !== undefined && options.range === undefined && !options.reverse) {\n                const msg = ex && ex.toString();\n                Logger.debug(cc, `Cache replace (with empty promise): '${key}'`);\n\n                document.state.set<CachedLog>(key, {\n                    item: GitService.emptyPromise,\n                    errorMessage: msg\n                } as CachedLog);\n\n                return GitService.emptyPromise as Promise<GitLog>;\n            }\n\n            return undefined;\n        }\n    }\n\n    @log()\n    async hasRemotes(repoPath: string | undefined): Promise<boolean> {\n        if (repoPath === undefined) return false;\n\n        const repository = await this.getRepository(repoPath);\n        if (repository === undefined) return false;\n\n        return repository.hasRemotes();\n    }\n\n    @log()\n    async hasTrackingBranch(repoPath: string | undefined): Promise<boolean> {\n        if (repoPath === undefined) return false;\n\n        const repository = await this.getRepository(repoPath);\n        if (repository === undefined) return false;\n\n        return repository.hasTrackingBranch();\n    }\n\n    @log()\n    async getMergeBase(repoPath: string, ref1: string, ref2: string, options: { forkPoint?: boolean } = {}) {\n        try {\n            const data = await Git.merge_base(repoPath, ref1, ref2, options);\n            if (data === undefined) return undefined;\n\n            return data.split('\\n')[0];\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return undefined;\n        }\n    }\n\n    @log()\n    async getRemotes(repoPath: string | undefined, options: { includeAll?: boolean } = {}): Promise<GitRemote[]> {\n        if (repoPath === undefined) return [];\n\n        const repository = await this.getRepository(repoPath);\n        const remotes = repository !== undefined ? repository.getRemotes() : this.getRemotesCore(repoPath);\n\n        if (options.includeAll) return remotes;\n\n        return (await remotes).filter(r => r.provider !== undefined);\n    }\n\n    async getRemotesCore(repoPath: string | undefined, providers?: RemoteProviders): Promise<GitRemote[]> {\n        if (repoPath === undefined) return [];\n\n        providers =\n            providers ||\n            RemoteProviderFactory.loadProviders(\n                configuration.get<RemotesConfig[] | null | undefined>(configuration.name('remotes').value, null)\n            );\n\n        try {\n            const data = await Git.remote(repoPath);\n            return GitRemoteParser.parse(data, repoPath, RemoteProviderFactory.factory(providers));\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return [];\n        }\n    }\n\n    async getRepoPath(filePath: string, options?: { ref?: string }): Promise<string | undefined>;\n    async getRepoPath(uri: Uri | undefined, options?: { ref?: string }): Promise<string | undefined>;\n    @log()\n    async getRepoPath(\n        filePathOrUri: string | Uri | undefined,\n        options: { ref?: string } = {}\n    ): Promise<string | undefined> {\n        if (filePathOrUri == null) return this.getHighlanderRepoPath();\n        if (filePathOrUri instanceof GitUri) return filePathOrUri.repoPath;\n\n        const cc = Logger.getCorrelationContext();\n\n        // Don't save the tracking info to the cache, because we could be looking in the wrong place (e.g. looking in the root when the file is in a submodule)\n        let repo = await this.getRepository(filePathOrUri, { ...options, skipCacheUpdate: true });\n        if (repo !== undefined) return repo.path;\n\n        const rp = await this.getRepoPathCore(\n            typeof filePathOrUri === 'string' ? filePathOrUri : filePathOrUri.fsPath,\n            false\n        );\n        if (rp === undefined) return undefined;\n\n        // Recheck this._repositoryTree.get(rp) to make sure we haven't already tried adding this due to awaits\n        if (this._repositoryTree.get(rp) !== undefined) return rp;\n\n        const isVslsScheme =\n            typeof filePathOrUri === 'string' ? undefined : filePathOrUri.scheme === DocumentSchemes.Vsls;\n\n        // If this new repo is inside one of our known roots and we we don't already know about, add it\n        const root = this.findRepositoryForPath(this._repositoryTree, rp, isVslsScheme);\n\n        let folder;\n        if (root !== undefined) {\n            // Not sure why I added this for vsls (I can't see a reason for it anymore), but if it is added it will break submodules\n            // rp = root.path;\n            folder = root.folder;\n        }\n        else {\n            folder = workspace.getWorkspaceFolder(GitUri.file(rp, isVslsScheme));\n            if (folder === undefined) {\n                const parts = rp.split('/');\n                folder = {\n                    uri: GitUri.file(rp, isVslsScheme),\n                    name: parts[parts.length - 1],\n                    index: this._repositoryTree.count()\n                };\n            }\n        }\n\n        Logger.log(cc, `Repository found in '${rp}'`);\n        repo = new Repository(folder, rp, false, this.onAnyRepositoryChanged.bind(this), this._suspended);\n        this._repositoryTree.set(rp, repo);\n\n        // Send a notification that the repositories changed\n        setImmediate(async () => {\n            await this.updateContext(this._repositoryTree);\n\n            this.fireRepositoriesChanged();\n        });\n\n        return rp;\n    }\n\n    private async getRepoPathCore(filePath: string, isDirectory: boolean): Promise<string | undefined> {\n        try {\n            return await Git.revparse_toplevel(isDirectory ? filePath : paths.dirname(filePath));\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return undefined;\n        }\n    }\n\n    @log()\n    async getRepoPathOrActive(uri: Uri | undefined, editor: TextEditor | undefined) {\n        const repoPath = await this.getRepoPath(uri);\n        if (repoPath) return repoPath;\n\n        return this.getActiveRepoPath(editor);\n    }\n\n    @log()\n    async getRepositories(predicate?: (repo: Repository) => boolean): Promise<Iterable<Repository>> {\n        const repositoryTree = await this.getRepositoryTree();\n\n        const values = repositoryTree.values();\n        return predicate !== undefined ? Iterables.filter(values, predicate) : values;\n    }\n\n    @log()\n    async getOrderedRepositories(): Promise<Repository[]> {\n        const repositories = [...(await this.getRepositories())];\n        if (repositories.length === 0) return repositories;\n\n        return repositories.sort((a, b) => a.index - b.index);\n    }\n\n    private async getRepositoryTree(): Promise<TernarySearchTree<Repository>> {\n        if (this._repositoriesLoadingPromise !== undefined) {\n            await this._repositoriesLoadingPromise;\n            this._repositoriesLoadingPromise = undefined;\n        }\n\n        return this._repositoryTree;\n    }\n\n    async getRepository(\n        repoPath: string,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<Repository | undefined>;\n    async getRepository(\n        uri: Uri,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<Repository | undefined>;\n    async getRepository(\n        repoPathOrUri: string | Uri,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<Repository | undefined>;\n    @log()\n    async getRepository(\n        repoPathOrUri: string | Uri,\n        options: { ref?: string; skipCacheUpdate?: boolean } = {}\n    ): Promise<Repository | undefined> {\n        const repositoryTree = await this.getRepositoryTree();\n\n        let isVslsScheme;\n\n        let path: string;\n        if (typeof repoPathOrUri === 'string') {\n            const repo = repositoryTree.get(repoPathOrUri);\n            if (repo !== undefined) return repo;\n\n            path = repoPathOrUri;\n            isVslsScheme = undefined;\n        }\n        else {\n            if (repoPathOrUri instanceof GitUri) {\n                if (repoPathOrUri.repoPath) {\n                    const repo = repositoryTree.get(repoPathOrUri.repoPath);\n                    if (repo !== undefined) return repo;\n                }\n\n                path = repoPathOrUri.fsPath;\n            }\n            else {\n                path = repoPathOrUri.fsPath;\n            }\n\n            isVslsScheme = repoPathOrUri.scheme === DocumentSchemes.Vsls;\n        }\n\n        const repo = this.findRepositoryForPath(repositoryTree, path, isVslsScheme);\n        if (repo === undefined) return undefined;\n\n        // Make sure the file is tracked in this repo before returning -- it could be from a submodule\n        if (!(await this.isTracked(path, repo.path, options))) return undefined;\n        return repo;\n    }\n\n    private findRepositoryForPath(\n        repositoryTree: TernarySearchTree<Repository>,\n        path: string,\n        isVslsScheme: boolean | undefined\n    ): Repository | undefined {\n        let repo = repositoryTree.findSubstr(path);\n        // If we can't find the repo and we are a guest, check if we are a \"root\" workspace\n        if (repo === undefined && isVslsScheme !== false && Container.vsls.isMaybeGuest) {\n            if (!vslsUriPrefixRegex.test(path)) {\n                path = Strings.normalizePath(path);\n                const vslsPath = `/~0${path[0] === '/' ? path : `/${path}`}`;\n                repo = repositoryTree.findSubstr(vslsPath);\n            }\n        }\n        return repo;\n    }\n\n    async getRepositoryCount(): Promise<number> {\n        const repositoryTree = await this.getRepositoryTree();\n        return repositoryTree.count();\n    }\n\n    @log()\n    async getStashList(repoPath: string | undefined): Promise<GitStash | undefined> {\n        if (repoPath === undefined) return undefined;\n\n        const data = await Git.stash_list(repoPath);\n        const stash = GitStashParser.parse(data, repoPath);\n        return stash;\n    }\n\n    @log()\n    async getStatusForFile(repoPath: string, fileName: string): Promise<GitStatusFile | undefined> {\n        const porcelainVersion = Git.validateVersion(2, 11) ? 2 : 1;\n\n        const data = await Git.status_file(repoPath, fileName, porcelainVersion);\n        const status = GitStatusParser.parse(data, repoPath, porcelainVersion);\n        if (status === undefined || !status.files.length) return undefined;\n\n        return status.files[0];\n    }\n\n    @log()\n    async getStatusForRepo(repoPath: string | undefined): Promise<GitStatus | undefined> {\n        if (repoPath === undefined) return undefined;\n\n        const porcelainVersion = Git.validateVersion(2, 11) ? 2 : 1;\n\n        const data = await Git.status(repoPath, porcelainVersion);\n        const status = GitStatusParser.parse(data, repoPath, porcelainVersion);\n        return status;\n    }\n\n    @log()\n    async getTags(repoPath: string | undefined, options: { includeRefs?: boolean } = {}): Promise<GitTag[]> {\n        if (repoPath === undefined) return [];\n\n        let tags;\n        if (options.includeRefs) {\n            tags = this._tagsWithRefsCache.get(repoPath);\n            if (tags !== undefined) return tags;\n\n            const data = await Git.showref_tag(repoPath);\n            tags = GitTagParser.parseWithRef(data, repoPath) || [];\n            this._tagsWithRefsCache.set(repoPath, tags);\n            return tags;\n        }\n\n        tags = this._tagsCache.get(repoPath);\n        if (tags !== undefined) return tags;\n\n        const data = await Git.tag(repoPath);\n        tags = GitTagParser.parse(data, repoPath) || [];\n        this._tagsCache.set(repoPath, tags);\n        return tags;\n    }\n\n    @log()\n    async getTreeFileForRevision(repoPath: string, fileName: string, ref: string): Promise<GitTree | undefined> {\n        if (repoPath === undefined || fileName == null || fileName.length === 0) return undefined;\n\n        const data = await Git.ls_tree(repoPath, ref, { fileName: fileName });\n        const trees = GitTreeParser.parse(data);\n        return trees === undefined || trees.length === 0 ? undefined : trees[0];\n    }\n\n    @log()\n    async getTreeForRevision(repoPath: string, ref: string): Promise<GitTree[]> {\n        if (repoPath === undefined) return [];\n\n        const data = await Git.ls_tree(repoPath, ref);\n        return GitTreeParser.parse(data) || [];\n    }\n\n    @log()\n    getVersionedFileBuffer(repoPath: string, fileName: string, ref: string) {\n        return Git.show<Buffer>(repoPath, fileName, ref, { encoding: 'buffer' });\n    }\n\n    @log()\n    async getVersionedUri(\n        repoPath: string | undefined,\n        fileName: string,\n        ref: string | undefined\n    ): Promise<Uri | undefined> {\n        if (ref === GitService.deletedOrMissingSha) return undefined;\n\n        if (!ref || (Git.isUncommitted(ref) && !Git.isStagedUncommitted(ref))) {\n            if (await this.fileExists(repoPath!, fileName)) return GitUri.file(fileName);\n\n            return undefined;\n        }\n\n        if (Git.isStagedUncommitted(ref)) {\n            return GitUri.git(fileName, repoPath);\n        }\n\n        return GitUri.toRevisionUri(ref, fileName, repoPath!);\n    }\n\n    isTrackable(scheme: string): boolean;\n    isTrackable(uri: Uri): boolean;\n    isTrackable(schemeOruri: string | Uri): boolean {\n        const scheme = typeof schemeOruri === 'string' ? schemeOruri : schemeOruri.scheme;\n        return (\n            scheme === DocumentSchemes.File ||\n            scheme === DocumentSchemes.Vsls ||\n            scheme === DocumentSchemes.Git ||\n            scheme === DocumentSchemes.GitLens\n        );\n    }\n\n    async isTracked(\n        fileName: string,\n        repoPath?: string,\n        options?: { ref?: string; skipCacheUpdate?: boolean }\n    ): Promise<boolean>;\n    async isTracked(uri: GitUri): Promise<boolean>;\n    @log({\n        exit: tracked => tracked.toString(),\n        singleLine: true\n    })\n    async isTracked(\n        fileNameOrUri: string | GitUri,\n        repoPath?: string,\n        options: { ref?: string; skipCacheUpdate?: boolean } = {}\n    ): Promise<boolean> {\n        if (options.ref === GitService.deletedOrMissingSha) return false;\n\n        let ref = options.ref;\n        let cacheKey: string;\n        let fileName: string;\n        if (typeof fileNameOrUri === 'string') {\n            [fileName, repoPath] = Git.splitPath(fileNameOrUri, repoPath);\n            cacheKey = GitUri.toKey(fileNameOrUri);\n        }\n        else {\n            if (!this.isTrackable(fileNameOrUri)) return false;\n\n            fileName = fileNameOrUri.fsPath;\n            repoPath = fileNameOrUri.repoPath;\n            ref = fileNameOrUri.sha;\n            cacheKey = GitUri.toKey(fileName);\n        }\n\n        if (ref !== undefined) {\n            cacheKey += `:${ref}`;\n        }\n\n        let tracked = this._trackedCache.get(cacheKey);\n        if (tracked !== undefined) {\n            tracked = await tracked;\n\n            return tracked;\n        }\n\n        tracked = this.isTrackedCore(fileName, repoPath === undefined ? '' : repoPath, ref);\n        if (options.skipCacheUpdate) {\n            tracked = await tracked;\n\n            return tracked;\n        }\n\n        this._trackedCache.set(cacheKey, tracked);\n        tracked = await tracked;\n        this._trackedCache.set(cacheKey, tracked);\n\n        return tracked;\n    }\n\n    private async isTrackedCore(fileName: string, repoPath: string, ref?: string) {\n        if (ref === GitService.deletedOrMissingSha) return false;\n\n        try {\n            // Even if we have a ref, check first to see if the file exists (that way the cache will be better reused)\n            let tracked = Boolean(await Git.ls_files(repoPath === undefined ? '' : repoPath, fileName));\n            if (!tracked && ref !== undefined) {\n                tracked = Boolean(await Git.ls_files(repoPath === undefined ? '' : repoPath, fileName, { ref: ref }));\n                // If we still haven't found this file, make sure it wasn't deleted in that ref (i.e. check the previous)\n                if (!tracked) {\n                    tracked = Boolean(\n                        await Git.ls_files(repoPath === undefined ? '' : repoPath, fileName, {\n                            ref: `${ref}^`\n                        })\n                    );\n                }\n            }\n            return tracked;\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return false;\n        }\n    }\n\n    @log()\n    async getDiffTool(repoPath?: string) {\n        return (\n            (await Git.config_get('diff.guitool', repoPath, { local: true })) ||\n            (await Git.config_get('diff.tool', repoPath, { local: true }))\n        );\n    }\n\n    @log()\n    async openDiffTool(\n        repoPath: string,\n        uri: Uri,\n        options: { ref1?: string; ref2?: string; staged?: boolean; tool?: string } = {}\n    ) {\n        if (!options.tool) {\n            const cc = Logger.getCorrelationContext();\n\n            options.tool = await this.getDiffTool(repoPath);\n            if (options.tool === undefined) throw new Error('No diff tool found');\n\n            Logger.log(cc, `Using tool=${options.tool}`);\n        }\n\n        const { tool, ...opts } = options;\n        return Git.difftool_fileDiff(repoPath, uri.fsPath, tool, opts);\n    }\n\n    @log()\n    async openDirectoryDiff(repoPath: string, ref1: string, ref2?: string, tool?: string) {\n        if (!tool) {\n            const cc = Logger.getCorrelationContext();\n\n            tool = await this.getDiffTool(repoPath);\n            if (tool === undefined) throw new Error('No diff tool found');\n\n            Logger.log(cc, `Using tool=${tool}`);\n        }\n\n        return Git.difftool_dirDiff(repoPath, tool, ref1, ref2);\n    }\n\n    @log()\n    async resolveReference(repoPath: string, ref: string, uri?: Uri) {\n        const resolved = Git.isSha(ref) || !Git.isShaLike(ref) || ref.endsWith('^3');\n        if (uri == null) return resolved ? ref : (await Git.revparse(repoPath, ref)) || ref;\n\n        const ensuredRef = await Git.cat_file_validate(\n            repoPath,\n            Strings.normalizePath(paths.relative(repoPath, uri.fsPath)),\n            ref\n        );\n        if (ensuredRef === undefined) return ref;\n\n        return ensuredRef;\n    }\n\n    @log()\n    async validateReference(repoPath: string, ref: string) {\n        return await Git.cat_validate(repoPath, ref);\n    }\n\n    stageFile(repoPath: string, fileName: string): Promise<string>;\n    stageFile(repoPath: string, uri: Uri): Promise<string>;\n    @log()\n    stageFile(repoPath: string, fileNameOrUri: string | Uri): Promise<string> {\n        return Git.add(\n            repoPath,\n            typeof fileNameOrUri === 'string' ? fileNameOrUri : Git.splitPath(fileNameOrUri.fsPath, repoPath)[0]\n        );\n    }\n\n    unStageFile(repoPath: string, fileName: string): Promise<string>;\n    unStageFile(repoPath: string, uri: Uri): Promise<string>;\n    @log()\n    unStageFile(repoPath: string, fileNameOrUri: string | Uri): Promise<string> {\n        return Git.reset(\n            repoPath,\n            typeof fileNameOrUri === 'string' ? fileNameOrUri : Git.splitPath(fileNameOrUri.fsPath, repoPath)[0]\n        );\n    }\n\n    @log()\n    stashApply(repoPath: string, stashName: string, deleteAfter: boolean = false) {\n        return Git.stash_apply(repoPath, stashName, deleteAfter);\n    }\n\n    @log()\n    stashDelete(repoPath: string, stashName: string) {\n        return Git.stash_delete(repoPath, stashName);\n    }\n\n    @log()\n    stashSave(repoPath: string, message?: string, uris?: Uri[]) {\n        if (uris === undefined) return Git.stash_save(repoPath, message);\n\n        GitService.ensureGitVersion('2.13.2', 'Stashing individual files');\n\n        const pathspecs = uris.map(u => Git.splitPath(u.fsPath, repoPath)[0]);\n        return Git.stash_push(repoPath, pathspecs, message);\n    }\n\n    static getEncoding(repoPath: string, fileName: string): string;\n    static getEncoding(uri: Uri): string;\n    static getEncoding(repoPathOrUri: string | Uri, fileName?: string): string {\n        const uri = typeof repoPathOrUri === 'string' ? GitUri.resolveToUri(fileName!, repoPathOrUri) : repoPathOrUri;\n        return Git.getEncoding(workspace.getConfiguration('files', uri).get<string>('encoding'));\n    }\n\n    @log()\n    static async initialize(): Promise<void> {\n        // Try to use the same git as the built-in vscode git extension\n        let gitPath;\n        try {\n            const gitExtension = extensions.getExtension('vscode.git');\n            if (gitExtension !== undefined) {\n                const gitApi = ((gitExtension.isActive\n                    ? gitExtension.exports\n                    : await gitExtension.activate()) as GitExtension).getAPI(1);\n                gitPath = gitApi.git.path;\n            }\n        }\n        catch {}\n\n        await Git.setOrFindGitPath(gitPath || workspace.getConfiguration('git').get<string>('path'));\n    }\n\n    static getGitPath(): string {\n        return Git.getGitPath();\n    }\n\n    static getGitVersion(): string {\n        return Git.getGitVersion();\n    }\n\n    static isShaLike(ref: string): boolean {\n        return Git.isShaLike(ref);\n    }\n\n    static isStagedUncommitted(ref: string | undefined): boolean {\n        return Git.isStagedUncommitted(ref);\n    }\n\n    static isUncommitted(ref: string | undefined): boolean {\n        return Git.isUncommitted(ref);\n    }\n\n    static shortenSha(\n        ref: string | undefined,\n        strings: { deletedOrMissing?: string; stagedUncommitted?: string; uncommitted?: string; working?: string } = {}\n    ) {\n        if (ref === undefined) return undefined;\n\n        strings = { deletedOrMissing: '(deleted)', working: '', ...strings };\n\n        if (ref == null || ref.length === 0) return strings.working;\n        if (ref === GitService.deletedOrMissingSha) return strings.deletedOrMissing;\n\n        return Git.isShaLike(ref) || Git.isStagedUncommitted(ref) ? Git.shortenSha(ref, strings) : ref;\n    }\n\n    static compareGitVersion(version: string, throwIfLessThan?: Error) {\n        return Versions.compare(Versions.fromString(this.getGitVersion()), Versions.fromString(version));\n    }\n\n    static ensureGitVersion(version: string, feature: string): void {\n        const gitVersion = this.getGitVersion();\n        if (Versions.compare(Versions.fromString(gitVersion), Versions.fromString(version)) === -1) {\n            throw new Error(\n                `${feature} requires a newer version of Git (>= ${version}) than is currently installed (${gitVersion}). Please install a more recent version of Git to use this GitLens feature.`\n            );\n        }\n    }\n}\n","const cssColorRegex = /^(?:(#?)([0-9a-f]{3}|[0-9a-f]{6})|((?:rgb|hsl)a?)\\((-?\\d+%?)[,\\s]+(-?\\d+%?)[,\\s]+(-?\\d+%?)[,\\s]*(-?[\\d\\.]+%?)?\\))$/i;\n\nfunction adjustLight(color: number, amount: number) {\n    const cc = color + amount;\n    const c = amount < 0 ? (cc < 0 ? 0 : cc) : cc > 255 ? 255 : cc;\n\n    return Math.round(c);\n}\n\nexport function darken(color: string, percentage: number) {\n    return lighten(color, -percentage);\n}\n\nexport function lighten(color: string, percentage: number) {\n    const rgba = toRgba(color);\n    if (rgba == null) return color;\n\n    const [r, g, b, a] = rgba;\n    percentage = (255 * percentage) / 100;\n    return `rgba(${adjustLight(r, percentage)}, ${adjustLight(g, percentage)}, ${adjustLight(b, percentage)}, ${a})`;\n}\n\nexport function opacity(color: string, percentage: number) {\n    const rgba = toRgba(color);\n    if (rgba == null) return color;\n\n    const [r, g, b, a] = rgba;\n    return `rgba(${r}, ${g}, ${b}, ${a * (percentage / 100)})`;\n}\n\nexport function toRgba(color: string) {\n    color = color.trim();\n\n    const result = cssColorRegex.exec(color);\n    if (result == null) return null;\n\n    if (result[1] === '#') {\n        const hex = result[2];\n        switch (hex.length) {\n            case 3:\n                return [parseInt(hex[0] + hex[0], 16), parseInt(hex[1] + hex[1], 16), parseInt(hex[2] + hex[2], 16), 1];\n            case 6:\n                return [\n                    parseInt(hex.substring(0, 2), 16),\n                    parseInt(hex.substring(2, 4), 16),\n                    parseInt(hex.substring(4, 6), 16),\n                    1\n                ];\n        }\n\n        return null;\n    }\n\n    switch (result[3]) {\n        case 'rgb':\n            return [parseInt(result[4], 10), parseInt(result[5], 10), parseInt(result[6], 10), 1];\n        case 'rgba':\n            return [parseInt(result[4], 10), parseInt(result[5], 10), parseInt(result[6], 10), parseFloat(result[7])];\n        default:\n            return null;\n    }\n}\n","import {\n    DecorationInstanceRenderOptions,\n    DecorationOptions,\n    MarkdownString,\n    ThemableDecorationRenderOptions,\n    ThemeColor,\n    workspace\n} from 'vscode';\nimport {\n    DiffWithCommand,\n    OpenCommitInRemoteCommand,\n    OpenFileRevisionCommand,\n    ShowQuickCommitDetailsCommand,\n    ShowQuickCommitFileDetailsCommand\n} from '../commands';\nimport { FileAnnotationType } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport {\n    CommitFormatter,\n    GitCommit,\n    GitDiffChunkLine,\n    GitRemote,\n    GitService,\n    GitUri,\n    ICommitFormatOptions\n} from '../git/gitService';\nimport { Objects, Strings } from '../system';\nimport { toRgba } from '../ui/shared/colors';\n\nexport interface ComputedHeatmap {\n    cold: boolean;\n    colors: { hot: string; cold: string };\n    median: number;\n    newest: number;\n    oldest: number;\n    computeAge(date: Date): number;\n}\n\ninterface IHeatmapConfig {\n    enabled: boolean;\n    location?: 'left' | 'right';\n}\n\ninterface IRenderOptions extends DecorationInstanceRenderOptions, ThemableDecorationRenderOptions {\n    height?: string;\n    uncommittedColor?: string | ThemeColor;\n}\n\nconst defaultHeatmapHotColor = '#f66a0a';\nconst defaultHeatmapColdColor = '#0a60f6';\nconst escapeMarkdownRegex = /[`\\>\\#\\*\\_\\-\\+\\.]/g;\n// const sampleMarkdown = '## message `not code` *not important* _no underline_ \\n> don\\'t quote me \\n- don\\'t list me \\n+ don\\'t list me \\n1. don\\'t list me \\nnot h1 \\n=== \\nnot h2 \\n---\\n***\\n---\\n___';\nconst markdownHeaderReplacement = `${GlyphChars.ZeroWidthSpace}===`;\n\nlet computedHeatmapColor: {\n    color: string;\n    rgb: string;\n};\n\nexport class Annotations {\n    static applyHeatmap(decoration: DecorationOptions, date: Date, heatmap: ComputedHeatmap) {\n        const color = this.getHeatmapColor(date, heatmap);\n        (decoration.renderOptions!.before! as any).borderColor = color;\n    }\n\n    private static getHeatmapColor(date: Date, heatmap: ComputedHeatmap) {\n        const baseColor = heatmap.cold ? heatmap.colors.cold : heatmap.colors.hot;\n\n        const age = heatmap.computeAge(date);\n        if (age === 0) return baseColor;\n\n        if (computedHeatmapColor === undefined || computedHeatmapColor.color !== baseColor) {\n            let rgba = toRgba(baseColor);\n            if (rgba == null) {\n                rgba = toRgba(heatmap.cold ? defaultHeatmapColdColor : defaultHeatmapHotColor)!;\n            }\n\n            const [r, g, b] = rgba;\n            computedHeatmapColor = {\n                color: baseColor,\n                rgb: `${r}, ${g}, ${b}`\n            };\n        }\n\n        return `rgba(${computedHeatmapColor.rgb}, ${(1 - age / 10).toFixed(2)})`;\n    }\n\n    private static getHoverCommandBar(\n        commit: GitCommit,\n        hasRemote: boolean,\n        annotationType?: FileAnnotationType,\n        line: number = 0\n    ) {\n        let commandBar = `[\\`${GlyphChars.MuchGreaterThan}\\`](${DiffWithCommand.getMarkdownCommandArgs(\n            commit\n        )} \"Open Changes\") `;\n\n        if (commit.previousSha !== undefined) {\n            if (annotationType === FileAnnotationType.RecentChanges) {\n                annotationType = FileAnnotationType.Blame;\n            }\n\n            const uri = GitUri.toRevisionUri(commit.previousSha, commit.previousUri.fsPath, commit.repoPath);\n            commandBar += `[\\`${GlyphChars.SquareWithTopShadow}\\`](${OpenFileRevisionCommand.getMarkdownCommandArgs(\n                uri,\n                annotationType || FileAnnotationType.Blame,\n                line\n            )} \"Blame Previous Revision\") `;\n        }\n\n        if (hasRemote) {\n            commandBar += `[\\`${GlyphChars.ArrowUpRight}\\`](${OpenCommitInRemoteCommand.getMarkdownCommandArgs(\n                commit.sha\n            )} \"Open in Remote\") `;\n        }\n\n        commandBar += `[\\`${GlyphChars.MiddleEllipsis}\\`](${ShowQuickCommitFileDetailsCommand.getMarkdownCommandArgs(\n            commit.sha\n        )} \"Show More Actions\")`;\n\n        return commandBar;\n    }\n\n    static getHoverMessage(\n        commit: GitCommit,\n        dateFormat: string | null,\n        remotes: GitRemote[],\n        annotationType?: FileAnnotationType,\n        line: number = 0\n    ): MarkdownString {\n        if (dateFormat === null) {\n            dateFormat = 'MMMM Do, YYYY h:mma';\n        }\n\n        let message = '';\n        let commandBar = '';\n        let showCommitDetailsCommand = '';\n        let avatar = '';\n        if (!commit.isUncommitted) {\n            commandBar = `\\n\\n${this.getHoverCommandBar(commit, remotes.length !== 0, annotationType, line)}`;\n            showCommitDetailsCommand = `[\\`${commit.shortSha}\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                commit.sha\n            )} \"Show Commit Details\")`;\n\n            message = CommitFormatter.fromTemplate('${message}', commit);\n            for (const r of remotes) {\n                if (r.provider === undefined) continue;\n\n                message = r.provider.enrichMessage(message);\n                break;\n            }\n\n            message = `\\n\\n> ${message\n                // Escape markdown\n                .replace(escapeMarkdownRegex, '\\\\$&')\n                // Escape markdown header (since the above regex won't match it)\n                .replace(/^===/gm, markdownHeaderReplacement)\n                // Keep under the same block-quote but with line breaks\n                .replace(/\\n/g, '\\t\\n>  ')}`;\n        }\n        else {\n            showCommitDetailsCommand = `\\`${commit.shortSha === 'Working Tree' ? '00000000' : commit.shortSha}\\``;\n        }\n\n        if (Container.config.hovers.avatars) {\n            avatar = ` &nbsp; ![](${commit.getGravatarUri(Container.config.defaultGravatarsStyle).toString(true)})`;\n        }\n\n        const markdown = new MarkdownString(\n            `${showCommitDetailsCommand}${avatar} &nbsp;__${\n                commit.author\n            }__, ${commit.fromNow()} &nbsp; _(${commit.formatDate(dateFormat)})_ ${message}${commandBar}`\n        );\n        markdown.isTrusted = true;\n        return markdown;\n    }\n\n    static getHoverDiffMessage(\n        commit: GitCommit,\n        uri: GitUri,\n        chunkLine: GitDiffChunkLine | undefined\n    ): MarkdownString | undefined {\n        if (chunkLine === undefined || commit.previousSha === undefined) return undefined;\n\n        const codeDiff = this.getCodeDiff(chunkLine);\n\n        let message: string;\n        if (commit.isUncommitted) {\n            if (uri.sha !== undefined && GitService.isStagedUncommitted(uri.sha)) {\n                message = `[\\`Changes\\`](${DiffWithCommand.getMarkdownCommandArgs(commit)} \"Open Changes\") &nbsp; ${\n                    GlyphChars.Dash\n                } &nbsp; [\\`${commit.previousShortSha}\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                    commit.previousSha!\n                )} \"Show Commit Details\") ${GlyphChars.ArrowLeftRightLong} _${uri.shortSha}_\\n${codeDiff}`;\n            }\n            else {\n                message = `[\\`Changes\\`](${DiffWithCommand.getMarkdownCommandArgs(commit)} \"Open Changes\") &nbsp; ${\n                    GlyphChars.Dash\n                } &nbsp; _uncommitted changes_\\n${codeDiff}`;\n            }\n        }\n        else {\n            message = `[\\`Changes\\`](${DiffWithCommand.getMarkdownCommandArgs(commit)} \"Open Changes\") &nbsp; ${\n                GlyphChars.Dash\n            } &nbsp; [\\`${commit.previousShortSha}\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                commit.previousSha!\n            )} \"Show Commit Details\") ${GlyphChars.ArrowLeftRightLong} [\\`${\n                commit.shortSha\n            }\\`](${ShowQuickCommitDetailsCommand.getMarkdownCommandArgs(\n                commit.sha\n            )} \"Show Commit Details\")\\n${codeDiff}`;\n        }\n\n        const markdown = new MarkdownString(message);\n        markdown.isTrusted = true;\n        return markdown;\n    }\n\n    private static getCodeDiff(chunkLine: GitDiffChunkLine): string {\n        const previous = chunkLine.previous === undefined ? undefined : chunkLine.previous[0];\n        return `\\`\\`\\`\n-  ${previous === undefined || previous.line === undefined ? '' : previous.line.trim()}\n+  ${chunkLine.line === undefined ? '' : chunkLine.line.trim()}\n\\`\\`\\``;\n    }\n\n    static async changesHover(commit: GitCommit, line: number, uri: GitUri): Promise<DecorationOptions> {\n        const sha =\n            !commit.isUncommitted || (uri.sha !== undefined && GitService.isStagedUncommitted(uri.sha))\n                ? commit.previousSha\n                : undefined;\n        const chunkLine = await Container.git.getDiffForLine(uri, line, sha);\n        const message = this.getHoverDiffMessage(commit, uri, chunkLine);\n\n        return {\n            hoverMessage: message\n        } as DecorationOptions;\n    }\n\n    // static detailsHover(commit: GitCommit, dateFormat: string | null, hasRemote: boolean, annotationType?: FileAnnotationType, line: number = 0): DecorationOptions {\n    //     const message = this.getHoverMessage(commit, dateFormat, hasRemote, annotationType);\n    //     return {\n    //         hoverMessage: message\n    //     } as DecorationOptions;\n    // }\n\n    static gutter(\n        commit: GitCommit,\n        format: string,\n        dateFormatOrFormatOptions: string | null | ICommitFormatOptions,\n        renderOptions: IRenderOptions\n    ): DecorationOptions {\n        const decoration = {\n            renderOptions: {\n                before: { ...renderOptions }\n            } as DecorationInstanceRenderOptions\n        } as DecorationOptions;\n\n        if (commit.isUncommitted) {\n            decoration.renderOptions!.before!.color = renderOptions.uncommittedColor;\n        }\n\n        const message = CommitFormatter.fromTemplate(format, commit, dateFormatOrFormatOptions);\n        decoration.renderOptions!.before!.contentText = Strings.pad(message.replace(/ /g, GlyphChars.Space), 1, 1);\n\n        return decoration;\n    }\n\n    static gutterRenderOptions(\n        separateLines: boolean,\n        heatmap: IHeatmapConfig,\n        format: string,\n        options: ICommitFormatOptions\n    ): IRenderOptions {\n        // Get the character count of all the tokens, assuming there there is a cap (bail if not)\n        let chars = 0;\n        for (const token of Objects.values(options.tokenOptions!)) {\n            if (token === undefined) continue;\n\n            // If any token is uncapped, kick out and set no max\n            if (token.truncateTo == null) {\n                chars = -1;\n                break;\n            }\n\n            chars += token.truncateTo;\n        }\n\n        if (chars >= 0) {\n            // Add the chars of the template string (without tokens)\n            chars += Strings.getWidth(Strings.interpolate(format, undefined));\n            // If we have chars, add a bit of padding\n            if (chars > 0) {\n                chars += 3;\n            }\n        }\n\n        let borderStyle = undefined;\n        let borderWidth = undefined;\n        if (heatmap.enabled) {\n            borderStyle = 'solid';\n            borderWidth = heatmap.location === 'left' ? '0 0 0 2px' : '0 2px 0 0';\n        }\n\n        let width;\n        if (chars >= 0) {\n            const spacing = workspace.getConfiguration('editor').get<number>('letterSpacing');\n            if (spacing != null && spacing !== 0) {\n                width = `calc(${chars}ch + ${Math.round(chars * spacing)}px)`;\n            }\n            else {\n                width = `${chars}ch`;\n            }\n        }\n\n        return {\n            backgroundColor: new ThemeColor('gitlens.gutterBackgroundColor'),\n            borderStyle: borderStyle,\n            borderWidth: borderWidth,\n            color: new ThemeColor('gitlens.gutterForegroundColor'),\n            fontWeight: 'normal',\n            fontStyle: 'normal',\n            height: '100%',\n            margin: `0 26px -1px 0`,\n            textDecoration: separateLines ? 'overline solid rgba(0, 0, 0, .2)' : 'none',\n            width: width,\n            uncommittedColor: new ThemeColor('gitlens.gutterUncommittedForegroundColor')\n        } as IRenderOptions;\n    }\n\n    static heatmap(commit: GitCommit, heatmap: ComputedHeatmap, renderOptions: IRenderOptions): DecorationOptions {\n        const decoration = {\n            renderOptions: {\n                before: { ...renderOptions }\n            } as DecorationInstanceRenderOptions\n        } as DecorationOptions;\n\n        Annotations.applyHeatmap(decoration, commit.date, heatmap);\n\n        return decoration;\n    }\n\n    static heatmapRenderOptions(): IRenderOptions {\n        return {\n            borderStyle: 'solid',\n            borderWidth: '0 0 0 2px',\n            contentText: GlyphChars.ZeroWidthSpace,\n            height: '100%',\n            margin: '0 26px -1px 0'\n        } as IRenderOptions;\n    }\n\n    // static hover(commit: GitCommit, renderOptions: IRenderOptions, now: number): DecorationOptions {\n    //     const decoration = {\n    //         renderOptions: { before: { ...renderOptions } }\n    //     } as DecorationOptions;\n\n    //     this.applyHeatmap(decoration, commit.date, now);\n\n    //     return decoration;\n    // }\n\n    // static hoverRenderOptions(heatmap: IHeatmapConfig): IRenderOptions {\n    //     if (!heatmap.enabled) return { before: undefined };\n\n    //     return {\n    //         borderStyle: 'solid',\n    //         borderWidth: '0 0 0 2px',\n    //         contentText: GlyphChars.ZeroWidthSpace,\n    //         height: '100%',\n    //         margin: '0 26px 0 0',\n    //         textDecoration: 'none'\n    //     } as IRenderOptions;\n    // }\n\n    static trailing(\n        commit: GitCommit,\n        format: string,\n        dateFormat: string | null,\n        scrollable: boolean = true\n    ): DecorationOptions {\n        const message = CommitFormatter.fromTemplate(format, commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: dateFormat\n        } as ICommitFormatOptions);\n\n        return {\n            renderOptions: {\n                after: {\n                    backgroundColor: new ThemeColor('gitlens.trailingLineBackgroundColor'),\n                    color: new ThemeColor('gitlens.trailingLineForegroundColor'),\n                    contentText: Strings.pad(message.replace(/ /g, GlyphChars.Space), 1, 1),\n                    fontWeight: 'normal',\n                    fontStyle: 'normal',\n                    // Pull the decoration out of the document flow if we want to be scrollable\n                    textDecoration: `none;${scrollable ? '' : ' position: absolute;'}`\n                }\n            } as DecorationInstanceRenderOptions\n        } as DecorationOptions;\n    }\n\n    // static withRange(decoration: DecorationOptions, start?: number, end?: number): DecorationOptions {\n    //     let range = decoration.range;\n    //     if (start !== undefined) {\n    //         range = range.with({\n    //             start: range.start.with({ character: start })\n    //         });\n    //     }\n\n    //     if (end !== undefined) {\n    //         range = range.with({\n    //             end: range.end.with({ character: end })\n    //         });\n    //     }\n\n    //     return { ...decoration, range: range };\n    // }\n}\n","'use strict';\nimport {\n    CancellationToken,\n    Disposable,\n    Hover,\n    HoverProvider,\n    languages,\n    Position,\n    Range,\n    TextDocument,\n    TextEditor,\n    TextEditorDecorationType\n} from 'vscode';\nimport { Container } from '../container';\nimport { GitBlame, GitCommit, GitUri } from '../git/gitService';\nimport { Arrays, Iterables } from '../system';\nimport { GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\nimport { AnnotationProviderBase } from './annotationProvider';\nimport { Annotations, ComputedHeatmap } from './annotations';\n\nexport abstract class BlameAnnotationProviderBase extends AnnotationProviderBase {\n    protected _blame: Promise<GitBlame | undefined>;\n    protected _hoverProviderDisposable: Disposable | undefined;\n    protected readonly _uri: GitUri;\n\n    constructor(\n        editor: TextEditor,\n        trackedDocument: TrackedDocument<GitDocumentState>,\n        decoration: TextEditorDecorationType,\n        highlightDecoration: TextEditorDecorationType | undefined\n    ) {\n        super(editor, trackedDocument, decoration, highlightDecoration);\n\n        this._uri = trackedDocument.uri;\n        this._blame = editor.document.isDirty\n            ? Container.git.getBlameForFileContents(this._uri, editor.document.getText())\n            : Container.git.getBlameForFile(this._uri);\n\n        if (editor.document.isDirty) {\n            trackedDocument.setForceDirtyStateChangeOnNextDocumentChange();\n        }\n    }\n\n    clear() {\n        this._hoverProviderDisposable && this._hoverProviderDisposable.dispose();\n        super.clear();\n    }\n\n    async onReset(changes?: {\n        decoration: TextEditorDecorationType;\n        highlightDecoration: TextEditorDecorationType | undefined;\n    }) {\n        if (this.editor !== undefined) {\n            this._blame = this.editor.document.isDirty\n                ? Container.git.getBlameForFileContents(this._uri, this.editor.document.getText())\n                : Container.git.getBlameForFile(this._uri);\n        }\n\n        return super.onReset(changes);\n    }\n\n    async selection(shaOrLine?: string | number, blame?: GitBlame) {\n        if (!this.highlightDecoration) return;\n\n        if (blame === undefined) {\n            blame = await this._blame;\n            if (!blame || !blame.lines.length) return;\n        }\n\n        let sha: string | undefined = undefined;\n        if (typeof shaOrLine === 'string') {\n            sha = shaOrLine;\n        }\n        else if (typeof shaOrLine === 'number') {\n            if (shaOrLine >= 0) {\n                const commitLine = blame.lines[shaOrLine];\n                sha = commitLine && commitLine.sha;\n            }\n        }\n        else {\n            sha = Iterables.first(blame.commits.values()).sha;\n        }\n\n        if (!sha) {\n            this.editor.setDecorations(this.highlightDecoration, []);\n            return;\n        }\n\n        const highlightDecorationRanges = Arrays.filterMap(\n            blame.lines,\n            l =>\n                l.sha === sha\n                    ? this.editor.document.validateRange(new Range(l.line, 0, l.line, Number.MAX_SAFE_INTEGER))\n                    : undefined\n        );\n\n        this.editor.setDecorations(this.highlightDecoration, highlightDecorationRanges);\n    }\n\n    async validate(): Promise<boolean> {\n        const blame = await this._blame;\n        return blame !== undefined && blame.lines.length !== 0;\n    }\n\n    protected async getBlame(): Promise<GitBlame | undefined> {\n        const blame = await this._blame;\n        if (blame === undefined || blame.lines.length === 0) return undefined;\n\n        return blame;\n    }\n\n    protected getComputedHeatmap(blame: GitBlame): ComputedHeatmap {\n        const dates = [];\n\n        let commit;\n        let previousSha;\n        for (const l of blame.lines) {\n            if (previousSha === l.sha) continue;\n            previousSha = l.sha;\n\n            commit = blame.commits.get(l.sha);\n            if (commit === undefined) continue;\n\n            dates.push(commit.date);\n        }\n\n        dates.sort((a, b) => a.getTime() - b.getTime());\n\n        const half = Math.floor(dates.length / 2);\n        const median =\n            dates.length % 2 ? dates[half].getTime() : (dates[half - 1].getTime() + dates[half].getTime()) / 2.0;\n\n        const lookup: number[] = [];\n\n        const newest = dates[dates.length - 1].getTime();\n        let step = (newest - median) / 5;\n        for (let i = 5; i > 0; i--) {\n            lookup.push(median + step * i);\n        }\n\n        lookup.push(median);\n\n        const oldest = dates[0].getTime();\n        step = (median - oldest) / 4;\n        for (let i = 1; i <= 4; i++) {\n            lookup.push(median - step * i);\n        }\n\n        const d = new Date();\n        d.setDate(d.getDate() - (Container.config.heatmap.ageThreshold || 90));\n\n        return {\n            cold: newest < d.getTime(),\n            colors: {\n                cold: Container.config.heatmap.coldColor,\n                hot: Container.config.heatmap.hotColor\n            },\n            median: median,\n            newest: newest,\n            oldest: oldest,\n            computeAge: (date: Date) => {\n                const time = date.getTime();\n                let index = 0;\n                for (let i = 0; i < lookup.length; i++) {\n                    index = i;\n                    if (time >= lookup[i]) break;\n                }\n\n                return index;\n            }\n        };\n    }\n\n    registerHoverProviders(providers: { details: boolean; changes: boolean }) {\n        if (\n            !Container.config.hovers.enabled ||\n            !Container.config.hovers.annotations.enabled ||\n            (!providers.details && !providers.changes)\n        ) {\n            return;\n        }\n\n        const subscriptions: Disposable[] = [];\n        if (providers.changes) {\n            subscriptions.push(\n                languages.registerHoverProvider({ pattern: this.document.uri.fsPath }, {\n                    provideHover: this.provideChangesHover.bind(this)\n                } as HoverProvider)\n            );\n        }\n        if (providers.details) {\n            subscriptions.push(\n                languages.registerHoverProvider({ pattern: this.document.uri.fsPath }, {\n                    provideHover: this.provideDetailsHover.bind(this)\n                } as HoverProvider)\n            );\n        }\n\n        this._hoverProviderDisposable = Disposable.from(...subscriptions);\n    }\n\n    async provideDetailsHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        const commit = await this.getCommitForHover(position);\n        if (commit === undefined) return undefined;\n\n        // Get the full commit message -- since blame only returns the summary\n        let logCommit: GitCommit | undefined = undefined;\n        if (!commit.isUncommitted) {\n            logCommit = await Container.git.getLogCommitForFile(commit.repoPath, commit.uri.fsPath, {\n                ref: commit.sha\n            });\n            if (logCommit !== undefined) {\n                // Preserve the previous commit from the blame commit\n                logCommit.previousFileName = commit.previousFileName;\n                logCommit.previousSha = commit.previousSha;\n            }\n        }\n\n        const message = Annotations.getHoverMessage(\n            logCommit || commit,\n            Container.config.defaultDateFormat,\n            await Container.git.getRemotes(commit.repoPath),\n            this.annotationType,\n            this.editor.selection.active.line\n        );\n        return new Hover(\n            message,\n            document.validateRange(new Range(position.line, 0, position.line, Number.MAX_SAFE_INTEGER))\n        );\n    }\n\n    async provideChangesHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        const commit = await this.getCommitForHover(position);\n        if (commit === undefined) return undefined;\n\n        const hover = await Annotations.changesHover(commit, position.line, await GitUri.fromUri(document.uri));\n        if (hover.hoverMessage === undefined) return undefined;\n\n        return new Hover(\n            hover.hoverMessage,\n            document.validateRange(new Range(position.line, 0, position.line, Number.MAX_SAFE_INTEGER))\n        );\n    }\n\n    private async getCommitForHover(position: Position): Promise<GitCommit | undefined> {\n        if (Container.config.hovers.annotations.over !== 'line' && position.character !== 0) return undefined;\n\n        const blame = await this.getBlame();\n        if (blame === undefined) return undefined;\n\n        const line = blame.lines[position.line];\n\n        return blame.commits.get(line.sha);\n    }\n}\n","'use strict';\nimport { DecorationOptions, DecorationRenderOptions, Range, TextEditorDecorationType, window } from 'vscode';\nimport { FileAnnotationType, GravatarDefaultStyle } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBlameCommit, ICommitFormatOptions } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Objects, Strings } from '../system';\nimport { Annotations } from './annotations';\nimport { BlameAnnotationProviderBase } from './blameAnnotationProvider';\n\nexport class GutterBlameAnnotationProvider extends BlameAnnotationProviderBase {\n    async onProvideAnnotation(shaOrLine?: string | number, type?: FileAnnotationType): Promise<boolean> {\n        this.annotationType = FileAnnotationType.Blame;\n\n        const blame = await this.getBlame();\n        if (blame === undefined) return false;\n\n        const start = process.hrtime();\n\n        const cfg = Container.config.blame;\n\n        // Precalculate the formatting options so we don't need to do it on each iteration\n        const tokenOptions = Strings.getTokensFromTemplate(cfg.format).reduce(\n            (map, token) => {\n                map[token.key] = token.options as ICommitFormatOptions;\n                return map;\n            },\n            {} as { [token: string]: ICommitFormatOptions }\n        );\n\n        const options: ICommitFormatOptions = {\n            dateFormat: cfg.dateFormat === null ? Container.config.defaultDateFormat : cfg.dateFormat,\n            tokenOptions: tokenOptions\n        };\n\n        const avatars = cfg.avatars;\n        const gravatarDefault = Container.config.defaultGravatarsStyle;\n        const separateLines = cfg.separateLines;\n        const renderOptions = Annotations.gutterRenderOptions(separateLines, cfg.heatmap, cfg.format, options);\n\n        this.decorations = [];\n        const decorationsMap: { [sha: string]: DecorationOptions | undefined } = Object.create(null);\n        const avatarDecorationsMap:\n            | { [email: string]: { decoration: TextEditorDecorationType; ranges: Range[] } }\n            | undefined = avatars ? Object.create(null) : undefined;\n\n        let commit: GitBlameCommit | undefined;\n        let compacted = false;\n        let gutter: DecorationOptions | undefined;\n        let previousSha: string | undefined;\n\n        let computedHeatmap;\n        if (cfg.heatmap.enabled) {\n            computedHeatmap = this.getComputedHeatmap(blame);\n        }\n\n        for (const l of blame.lines) {\n            const line = l.line;\n\n            if (previousSha === l.sha) {\n                // Use a shallow copy of the previous decoration options\n                gutter = { ...gutter } as DecorationOptions;\n\n                if (cfg.compact && !compacted) {\n                    // Since we are wiping out the contextText make sure to copy the objects\n                    gutter.renderOptions = {\n                        before: {\n                            ...gutter.renderOptions!.before,\n                            contentText: GlyphChars.Space.repeat(\n                                Strings.getWidth(gutter.renderOptions!.before!.contentText!)\n                            )\n                        }\n                    };\n\n                    if (separateLines) {\n                        gutter.renderOptions!.before!.textDecoration = 'none';\n                    }\n\n                    compacted = true;\n                }\n\n                gutter.range = new Range(line, 0, line, 0);\n\n                this.decorations.push(gutter);\n\n                if (avatars && !cfg.compact && commit !== undefined && commit.email !== undefined) {\n                    this.addOrUpdateGravatarDecoration(commit, gutter.range, gravatarDefault, avatarDecorationsMap!);\n                }\n\n                continue;\n            }\n\n            compacted = false;\n            previousSha = l.sha;\n\n            commit = blame.commits.get(l.sha);\n            if (commit === undefined) continue;\n\n            gutter = decorationsMap[l.sha];\n            if (gutter !== undefined) {\n                gutter = {\n                    ...gutter,\n                    range: new Range(line, 0, line, 0)\n                } as DecorationOptions;\n\n                this.decorations.push(gutter);\n\n                if (avatars && commit.email !== undefined) {\n                    this.addOrUpdateGravatarDecoration(commit, gutter.range, gravatarDefault, avatarDecorationsMap!);\n                }\n\n                continue;\n            }\n\n            gutter = Annotations.gutter(commit, cfg.format, options, renderOptions);\n\n            if (computedHeatmap !== undefined) {\n                Annotations.applyHeatmap(gutter, commit.date, computedHeatmap);\n            }\n\n            gutter.range = new Range(line, 0, line, 0);\n\n            this.decorations.push(gutter);\n\n            if (avatars && commit.email !== undefined) {\n                this.addOrUpdateGravatarDecoration(commit, gutter.range, gravatarDefault, avatarDecorationsMap!);\n            }\n\n            decorationsMap[l.sha] = gutter;\n        }\n\n        if (this.decorations.length) {\n            this.editor.setDecorations(this.decoration!, this.decorations);\n\n            if (avatars) {\n                this.additionalDecorations = [];\n                for (const d of Objects.values(avatarDecorationsMap!)) {\n                    this.additionalDecorations.push(d);\n                    this.editor.setDecorations(d.decoration, d.ranges);\n                }\n            }\n        }\n\n        Logger.log(`${Strings.getDurationMilliseconds(start)} ms to compute gutter blame annotations`);\n\n        this.registerHoverProviders(Container.config.hovers.annotations);\n        void this.selection(shaOrLine, blame);\n        return true;\n    }\n\n    addOrUpdateGravatarDecoration(\n        commit: GitBlameCommit,\n        range: Range,\n        gravatarDefault: GravatarDefaultStyle,\n        map: { [email: string]: { decoration: TextEditorDecorationType; ranges: Range[] } }\n    ) {\n        const avatarDecoration = map[commit.email!];\n        if (avatarDecoration !== undefined) {\n            avatarDecoration.ranges.push(range);\n\n            return;\n        }\n\n        map[commit.email!] = {\n            decoration: window.createTextEditorDecorationType({\n                gutterIconPath: commit.getGravatarUri(gravatarDefault),\n                gutterIconSize: '16px 16px'\n            } as DecorationRenderOptions),\n            ranges: [range]\n        };\n    }\n}\n","'use strict';\nimport { DecorationOptions, Range } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { Container } from '../container';\nimport { GitBlameCommit } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Strings } from '../system';\nimport { Annotations } from './annotations';\nimport { BlameAnnotationProviderBase } from './blameAnnotationProvider';\n\nexport class HeatmapBlameAnnotationProvider extends BlameAnnotationProviderBase {\n    async onProvideAnnotation(shaOrLine?: string | number, type?: FileAnnotationType): Promise<boolean> {\n        this.annotationType = FileAnnotationType.Heatmap;\n\n        const blame = await this.getBlame();\n        if (blame === undefined) return false;\n\n        const start = process.hrtime();\n\n        const renderOptions = Annotations.heatmapRenderOptions();\n\n        this.decorations = [];\n        const decorationsMap: { [sha: string]: DecorationOptions | undefined } = Object.create(null);\n\n        let commit: GitBlameCommit | undefined;\n        let heatmap: DecorationOptions | undefined;\n\n        const computedHeatmap = this.getComputedHeatmap(blame);\n\n        for (const l of blame.lines) {\n            const line = l.line;\n\n            heatmap = decorationsMap[l.sha];\n            if (heatmap !== undefined) {\n                heatmap = {\n                    ...heatmap,\n                    range: new Range(line, 0, line, 0)\n                } as DecorationOptions;\n\n                this.decorations.push(heatmap);\n\n                continue;\n            }\n\n            commit = blame.commits.get(l.sha);\n            if (commit === undefined) continue;\n\n            heatmap = Annotations.heatmap(commit, computedHeatmap, renderOptions);\n            heatmap.range = new Range(line, 0, line, 0);\n\n            this.decorations.push(heatmap);\n            decorationsMap[l.sha] = heatmap;\n        }\n\n        if (this.decorations.length) {\n            this.editor.setDecorations(this.decoration!, this.decorations);\n        }\n\n        Logger.log(`${Strings.getDurationMilliseconds(start)} ms to compute heatmap annotations`);\n\n        this.registerHoverProviders(Container.config.hovers.annotations);\n        void this.selection(shaOrLine, blame);\n        return true;\n    }\n}\n","'use strict';\nimport { DecorationOptions, MarkdownString, Position, Range, TextEditor, TextEditorDecorationType } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Strings } from '../system';\nimport { GitDocumentState, TrackedDocument } from '../trackers/gitDocumentTracker';\nimport { AnnotationProviderBase } from './annotationProvider';\nimport { Annotations } from './annotations';\n\nexport class RecentChangesAnnotationProvider extends AnnotationProviderBase {\n    private readonly _uri: GitUri;\n\n    constructor(\n        editor: TextEditor,\n        trackedDocument: TrackedDocument<GitDocumentState>,\n        decoration: TextEditorDecorationType,\n        highlightDecoration: TextEditorDecorationType | undefined\n    ) {\n        super(editor, trackedDocument, decoration, highlightDecoration);\n\n        this._uri = trackedDocument.uri;\n    }\n\n    async onProvideAnnotation(shaOrLine?: string | number): Promise<boolean> {\n        this.annotationType = FileAnnotationType.RecentChanges;\n\n        const commit = await Container.git.getRecentLogCommitForFile(this._uri.repoPath, this._uri.fsPath);\n        if (commit === undefined) return false;\n\n        const diff = await Container.git.getDiffForFile(this._uri, commit.previousSha);\n        if (diff === undefined) return false;\n\n        const start = process.hrtime();\n\n        const cfg = Container.config;\n        const dateFormat = cfg.defaultDateFormat;\n\n        this.decorations = [];\n\n        for (const chunk of diff.chunks) {\n            let count = chunk.currentPosition.start - 2;\n            for (const line of chunk.lines) {\n                if (line.line === undefined) continue;\n\n                count++;\n\n                if (line.state === 'unchanged') continue;\n\n                const range = this.editor.document.validateRange(\n                    new Range(new Position(count, 0), new Position(count, Number.MAX_SAFE_INTEGER))\n                );\n\n                let message: MarkdownString | undefined = undefined;\n\n                if (cfg.hovers.enabled && cfg.hovers.annotations.enabled) {\n                    if (cfg.hovers.annotations.details) {\n                        this.decorations.push({\n                            hoverMessage: Annotations.getHoverMessage(\n                                commit,\n                                dateFormat,\n                                await Container.git.getRemotes(commit.repoPath),\n                                this.annotationType,\n                                this.editor.selection.active.line\n                            ),\n                            range: range\n                        } as DecorationOptions);\n                    }\n\n                    if (cfg.hovers.annotations.changes) {\n                        message = Annotations.getHoverDiffMessage(commit, this._uri, line);\n                        if (message === undefined) continue;\n                    }\n                }\n\n                this.decorations.push({\n                    hoverMessage: message,\n                    range: range\n                } as DecorationOptions);\n            }\n        }\n\n        this.editor.setDecorations(this.decoration, this.decorations);\n\n        Logger.log(`${Strings.getDurationMilliseconds(start)} ms to compute recent changes annotations`);\n\n        return true;\n    }\n\n    async selection(shaOrLine?: string | number): Promise<void> {}\n\n    async validate(): Promise<boolean> {\n        return true;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport {\n    ConfigurationChangeEvent,\n    DecorationRangeBehavior,\n    DecorationRenderOptions,\n    Disposable,\n    Event,\n    EventEmitter,\n    OverviewRulerLane,\n    Progress,\n    ProgressLocation,\n    TextDocument,\n    TextEditor,\n    TextEditorDecorationType,\n    TextEditorViewColumnChangeEvent,\n    ThemeColor,\n    window,\n    workspace\n} from 'vscode';\nimport { AnnotationsToggleMode, configuration, FileAnnotationType, HighlightLocations } from '../configuration';\nimport { CommandContext, isTextEditor, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { KeyboardScope, KeyCommand, Keys } from '../keyboard';\nimport { Logger } from '../logger';\nimport { Functions, Iterables } from '../system';\nimport {\n    DocumentBlameStateChangeEvent,\n    DocumentDirtyStateChangeEvent,\n    GitDocumentState\n} from '../trackers/gitDocumentTracker';\nimport { AnnotationProviderBase, AnnotationStatus, TextEditorCorrelationKey } from './annotationProvider';\nimport { GutterBlameAnnotationProvider } from './gutterBlameAnnotationProvider';\nimport { HeatmapBlameAnnotationProvider } from './heatmapBlameAnnotationProvider';\nimport { RecentChangesAnnotationProvider } from './recentChangesAnnotationProvider';\n\nexport enum AnnotationClearReason {\n    User = 'User',\n    BlameabilityChanged = 'BlameabilityChanged',\n    ColumnChanged = 'ColumnChanged',\n    Disposing = 'Disposing',\n    DocumentChanged = 'DocumentChanged',\n    DocumentClosed = 'DocumentClosed'\n}\n\nexport const Decorations = {\n    blameAnnotation: window.createTextEditorDecorationType({\n        rangeBehavior: DecorationRangeBehavior.ClosedOpen,\n        textDecoration: 'none'\n    } as DecorationRenderOptions),\n    blameHighlight: undefined as TextEditorDecorationType | undefined,\n    heatmapAnnotation: window.createTextEditorDecorationType({} as DecorationRenderOptions),\n    heatmapHighlight: undefined as TextEditorDecorationType | undefined,\n    recentChangesAnnotation: undefined as TextEditorDecorationType | undefined,\n    recentChangesHighlight: undefined as TextEditorDecorationType | undefined\n};\n\nexport class FileAnnotationController implements Disposable {\n    private _onDidToggleAnnotations = new EventEmitter<void>();\n    get onDidToggleAnnotations(): Event<void> {\n        return this._onDidToggleAnnotations.event;\n    }\n\n    private _annotationsDisposable: Disposable | undefined;\n    private _annotationProviders: Map<TextEditorCorrelationKey, AnnotationProviderBase> = new Map();\n    private _disposable: Disposable;\n    private _editor: TextEditor | undefined;\n    private _keyboardScope: KeyboardScope | undefined = undefined;\n    private readonly _toggleModes: Map<FileAnnotationType, AnnotationsToggleMode>;\n    private _annotationType: FileAnnotationType | undefined = undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(configuration.onDidChange(this.onConfigurationChanged, this));\n\n        this._toggleModes = new Map();\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        void this.clearAll();\n\n        Decorations.blameAnnotation && Decorations.blameAnnotation.dispose();\n        Decorations.blameHighlight && Decorations.blameHighlight.dispose();\n\n        this._annotationsDisposable && this._annotationsDisposable.dispose();\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const cfg = Container.config;\n\n        if (configuration.changed(e, configuration.name('blame')('highlight').value)) {\n            Decorations.blameHighlight && Decorations.blameHighlight.dispose();\n\n            const cfgHighlight = cfg.blame.highlight;\n\n            if (cfgHighlight.enabled) {\n                Decorations.blameHighlight = window.createTextEditorDecorationType({\n                    gutterIconSize: 'contain',\n                    isWholeLine: true,\n                    overviewRulerLane: OverviewRulerLane.Right,\n                    backgroundColor: cfgHighlight.locations.includes(HighlightLocations.Line)\n                        ? new ThemeColor('gitlens.lineHighlightBackgroundColor')\n                        : undefined,\n                    overviewRulerColor: cfgHighlight.locations.includes(HighlightLocations.Overview)\n                        ? new ThemeColor('gitlens.lineHighlightOverviewRulerColor')\n                        : undefined,\n                    dark: {\n                        gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                            ? Container.context.asAbsolutePath('images/dark/highlight-gutter.svg')\n                            : undefined\n                    },\n                    light: {\n                        gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                            ? Container.context.asAbsolutePath('images/light/highlight-gutter.svg')\n                            : undefined\n                    }\n                });\n            }\n            else {\n                Decorations.blameHighlight = undefined;\n            }\n        }\n\n        if (configuration.changed(e, configuration.name('recentChanges')('highlight').value)) {\n            Decorations.recentChangesAnnotation && Decorations.recentChangesAnnotation.dispose();\n\n            const cfgHighlight = cfg.recentChanges.highlight;\n\n            Decorations.recentChangesAnnotation = window.createTextEditorDecorationType({\n                gutterIconSize: 'contain',\n                isWholeLine: true,\n                overviewRulerLane: OverviewRulerLane.Right,\n                backgroundColor: cfgHighlight.locations.includes(HighlightLocations.Line)\n                    ? new ThemeColor('gitlens.lineHighlightBackgroundColor')\n                    : undefined,\n                overviewRulerColor: cfgHighlight.locations.includes(HighlightLocations.Overview)\n                    ? new ThemeColor('gitlens.lineHighlightOverviewRulerColor')\n                    : undefined,\n                dark: {\n                    gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                        ? Container.context.asAbsolutePath('images/dark/highlight-gutter.svg')\n                        : undefined\n                },\n                light: {\n                    gutterIconPath: cfgHighlight.locations.includes(HighlightLocations.Gutter)\n                        ? Container.context.asAbsolutePath('images/light/highlight-gutter.svg')\n                        : undefined\n                }\n            });\n        }\n\n        const initializing = configuration.initializing(e);\n\n        if (configuration.changed(e, configuration.name('blame')('toggleMode').value)) {\n            this._toggleModes.set(FileAnnotationType.Blame, cfg.blame.toggleMode);\n            if (!initializing && cfg.blame.toggleMode === AnnotationsToggleMode.File) {\n                void this.clearAll();\n            }\n        }\n\n        if (configuration.changed(e, configuration.name('heatmap')('toggleMode').value)) {\n            this._toggleModes.set(FileAnnotationType.Heatmap, cfg.heatmap.toggleMode);\n            if (!initializing && cfg.heatmap.toggleMode === AnnotationsToggleMode.File) {\n                void this.clearAll();\n            }\n        }\n\n        if (configuration.changed(e, configuration.name('recentChanges')('toggleMode').value)) {\n            this._toggleModes.set(FileAnnotationType.RecentChanges, cfg.recentChanges.toggleMode);\n            if (!initializing && cfg.recentChanges.toggleMode === AnnotationsToggleMode.File) {\n                void this.clearAll();\n            }\n        }\n\n        if (initializing) return;\n\n        if (\n            configuration.changed(e, configuration.name('blame').value) ||\n            configuration.changed(e, configuration.name('recentChanges').value) ||\n            configuration.changed(e, configuration.name('heatmap').value) ||\n            configuration.changed(e, configuration.name('hovers').value)\n        ) {\n            // Since the configuration has changed -- reset any visible annotations\n            for (const provider of this._annotationProviders.values()) {\n                if (provider === undefined) continue;\n\n                if (provider.annotationType === FileAnnotationType.RecentChanges) {\n                    provider.reset({\n                        decoration: Decorations.recentChangesAnnotation!,\n                        highlightDecoration: Decorations.recentChangesHighlight\n                    });\n                }\n                else if (provider.annotationType === FileAnnotationType.Blame) {\n                    provider.reset({\n                        decoration: Decorations.blameAnnotation,\n                        highlightDecoration: Decorations.blameHighlight\n                    });\n                }\n                else {\n                    void this.show(provider.editor, FileAnnotationType.Heatmap);\n                }\n            }\n        }\n    }\n\n    private async onActiveTextEditorChanged(editor: TextEditor | undefined) {\n        if (editor !== undefined && !isTextEditor(editor)) return;\n\n        this._editor = editor;\n        // Logger.log('AnnotationController.onActiveTextEditorChanged', editor && editor.document.uri.fsPath);\n\n        if (this.isInWindowToggle()) {\n            await this.show(editor, this._annotationType!);\n\n            return;\n        }\n\n        const provider = this.getProvider(editor);\n        if (provider === undefined) {\n            setCommandContext(CommandContext.AnnotationStatus, undefined);\n            void this.detachKeyboardHook();\n        }\n        else {\n            setCommandContext(CommandContext.AnnotationStatus, provider.status);\n            void this.attachKeyboardHook();\n        }\n    }\n\n    private onBlameStateChanged(e: DocumentBlameStateChangeEvent<GitDocumentState>) {\n        // Only care if we are becoming un-blameable\n        if (e.blameable) return;\n\n        const editor = window.activeTextEditor;\n        if (editor === undefined) return;\n\n        void this.clear(editor, AnnotationClearReason.BlameabilityChanged);\n    }\n\n    private onDirtyStateChanged(e: DocumentDirtyStateChangeEvent<GitDocumentState>) {\n        for (const [key, p] of this._annotationProviders) {\n            if (!e.document.is(p.document)) continue;\n\n            void this.clearCore(key, AnnotationClearReason.DocumentChanged);\n        }\n    }\n\n    private onTextDocumentClosed(document: TextDocument) {\n        if (!Container.git.isTrackable(document.uri)) return;\n\n        for (const [key, p] of this._annotationProviders) {\n            if (p.document !== document) continue;\n\n            void this.clearCore(key, AnnotationClearReason.DocumentClosed);\n        }\n    }\n\n    private onTextEditorViewColumnChanged(e: TextEditorViewColumnChangeEvent) {\n        // FYI https://github.com/Microsoft/vscode/issues/35602\n        const provider = this.getProvider(e.textEditor);\n        if (provider === undefined) {\n            // If we don't find an exact match, do a fuzzy match (since we can't properly track editors)\n            const fuzzyProvider = Iterables.find(\n                this._annotationProviders.values(),\n                p => p.editor.document === e.textEditor.document\n            );\n            if (fuzzyProvider == null) return;\n\n            void this.clearCore(fuzzyProvider.correlationKey, AnnotationClearReason.ColumnChanged);\n\n            return;\n        }\n\n        void provider.restore(e.textEditor);\n    }\n\n    private onVisibleTextEditorsChanged(editors: TextEditor[]) {\n        let provider: AnnotationProviderBase | undefined;\n        for (const e of editors) {\n            provider = this.getProvider(e);\n            if (provider === undefined) continue;\n\n            void provider.restore(e);\n        }\n    }\n\n    isInWindowToggle(): boolean {\n        return this.getToggleMode(this._annotationType) === AnnotationsToggleMode.Window;\n    }\n\n    private getToggleMode(annotationType: FileAnnotationType | undefined): AnnotationsToggleMode {\n        if (annotationType === undefined) return AnnotationsToggleMode.File;\n\n        return this._toggleModes.get(annotationType) || AnnotationsToggleMode.File;\n    }\n\n    clear(editor: TextEditor, reason: AnnotationClearReason = AnnotationClearReason.User) {\n        if (this.isInWindowToggle()) {\n            return this.clearAll();\n        }\n\n        return this.clearCore(AnnotationProviderBase.getCorrelationKey(editor), reason);\n    }\n\n    async clearAll() {\n        this._annotationType = undefined;\n        for (const [key] of this._annotationProviders) {\n            await this.clearCore(key, AnnotationClearReason.Disposing);\n        }\n    }\n\n    async getAnnotationType(editor: TextEditor | undefined): Promise<FileAnnotationType | undefined> {\n        const provider = this.getProvider(editor);\n        if (provider === undefined) return undefined;\n\n        const trackedDocument = await Container.tracker.get(editor!.document);\n        if (trackedDocument === undefined || !trackedDocument.isBlameable) return undefined;\n\n        return provider.annotationType;\n    }\n\n    getProvider(editor: TextEditor | undefined): AnnotationProviderBase | undefined {\n        if (editor === undefined || editor.document === undefined) return undefined;\n        return this._annotationProviders.get(AnnotationProviderBase.getCorrelationKey(editor));\n    }\n\n    async show(\n        editor: TextEditor | undefined,\n        type: FileAnnotationType,\n        shaOrLine?: string | number\n    ): Promise<boolean> {\n        if (this.getToggleMode(type) === AnnotationsToggleMode.Window) {\n            let first = this._annotationType === undefined;\n            const reset = !first && this._annotationType !== type;\n\n            this._annotationType = type;\n\n            if (reset) {\n                await this.clearAll();\n                first = true;\n            }\n\n            if (first) {\n                for (const e of window.visibleTextEditors) {\n                    if (e === editor) continue;\n\n                    void this.show(e, type);\n                }\n            }\n        }\n\n        if (editor === undefined) return false; // || editor.viewColumn === undefined) return false;\n        this._editor = editor;\n\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n        if (!trackedDocument.isBlameable) return false;\n\n        const currentProvider = this.getProvider(editor);\n        if (currentProvider !== undefined && currentProvider.annotationType === type) {\n            await currentProvider.selection(shaOrLine);\n            return true;\n        }\n\n        const provider = await window.withProgress(\n            { location: ProgressLocation.Window },\n            async (progress: Progress<{ message: string }>) => {\n                await setCommandContext(CommandContext.AnnotationStatus, AnnotationStatus.Computing);\n\n                const computingAnnotations = this.showAnnotationsCore(\n                    currentProvider,\n                    editor,\n                    type,\n                    shaOrLine,\n                    progress\n                );\n                const provider = await computingAnnotations;\n\n                if (editor === this._editor) {\n                    await setCommandContext(CommandContext.AnnotationStatus, provider && provider.status);\n                }\n\n                return computingAnnotations;\n            }\n        );\n\n        return provider !== undefined;\n    }\n\n    async toggle(\n        editor: TextEditor | undefined,\n        type: FileAnnotationType,\n        shaOrLine?: string | number\n    ): Promise<boolean> {\n        if (editor !== undefined) {\n            const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n            if (\n                (type === FileAnnotationType.RecentChanges && !trackedDocument.isTracked) ||\n                !trackedDocument.isBlameable\n            ) {\n                return false;\n            }\n        }\n\n        const provider = this.getProvider(editor);\n        if (provider === undefined) return this.show(editor!, type, shaOrLine);\n\n        const reopen = provider.annotationType !== type;\n\n        if (this.isInWindowToggle()) {\n            await this.clearAll();\n        }\n        else {\n            await this.clearCore(provider.correlationKey, AnnotationClearReason.User);\n        }\n\n        if (!reopen) return false;\n\n        return this.show(editor, type, shaOrLine);\n    }\n\n    private async attachKeyboardHook() {\n        // Allows pressing escape to exit the annotations\n        if (this._keyboardScope === undefined) {\n            this._keyboardScope = await Container.keyboard.beginScope({\n                escape: {\n                    onDidPressKey: async (key: Keys) => {\n                        const e = this._editor;\n                        if (e === undefined) return undefined;\n\n                        await this.clear(e, AnnotationClearReason.User);\n                        return undefined;\n                    }\n                } as KeyCommand\n            });\n        }\n    }\n\n    private async clearCore(key: TextEditorCorrelationKey, reason: AnnotationClearReason) {\n        const provider = this._annotationProviders.get(key);\n        if (provider === undefined) return;\n\n        Logger.log(`${reason}:`, `Clear annotations for ${key}`);\n\n        this._annotationProviders.delete(key);\n        provider.dispose();\n\n        if (this._annotationProviders.size === 0 || key === AnnotationProviderBase.getCorrelationKey(this._editor)) {\n            await setCommandContext(CommandContext.AnnotationStatus, undefined);\n            await this.detachKeyboardHook();\n        }\n\n        if (this._annotationProviders.size === 0) {\n            Logger.log(`Remove all listener registrations for annotations`);\n\n            this._annotationsDisposable && this._annotationsDisposable.dispose();\n            this._annotationsDisposable = undefined;\n        }\n\n        this._onDidToggleAnnotations.fire();\n    }\n\n    private async detachKeyboardHook() {\n        if (this._keyboardScope === undefined) return;\n\n        await this._keyboardScope.dispose();\n        this._keyboardScope = undefined;\n    }\n\n    private async showAnnotationsCore(\n        currentProvider: AnnotationProviderBase | undefined,\n        editor: TextEditor,\n        type: FileAnnotationType,\n        shaOrLine?: string | number,\n        progress?: Progress<{ message: string }>\n    ): Promise<AnnotationProviderBase | undefined> {\n        if (progress !== undefined) {\n            let annotationsLabel = 'annotations';\n            switch (type) {\n                case FileAnnotationType.Blame:\n                    annotationsLabel = 'blame annotations';\n                    break;\n\n                case FileAnnotationType.Heatmap:\n                    annotationsLabel = 'heatmap annotations';\n                    break;\n\n                case FileAnnotationType.RecentChanges:\n                    annotationsLabel = 'recent changes annotations';\n                    break;\n            }\n\n            progress!.report({\n                message: `Computing ${annotationsLabel} for ${paths.basename(editor.document.fileName)}`\n            });\n        }\n\n        // Allows pressing escape to exit the annotations\n        await this.attachKeyboardHook();\n\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n\n        let provider: AnnotationProviderBase | undefined = undefined;\n        switch (type) {\n            case FileAnnotationType.Blame:\n                provider = new GutterBlameAnnotationProvider(\n                    editor,\n                    trackedDocument,\n                    Decorations.blameAnnotation,\n                    Decorations.blameHighlight\n                );\n                break;\n\n            case FileAnnotationType.Heatmap:\n                provider = new HeatmapBlameAnnotationProvider(\n                    editor,\n                    trackedDocument,\n                    Decorations.heatmapAnnotation,\n                    Decorations.heatmapHighlight\n                );\n                break;\n\n            case FileAnnotationType.RecentChanges:\n                provider = new RecentChangesAnnotationProvider(\n                    editor,\n                    trackedDocument,\n                    Decorations.recentChangesAnnotation!,\n                    Decorations.recentChangesHighlight\n                );\n                break;\n        }\n        if (provider === undefined || !(await provider.validate())) return undefined;\n\n        if (currentProvider !== undefined) {\n            await this.clearCore(currentProvider.correlationKey, AnnotationClearReason.User);\n        }\n\n        if (!this._annotationsDisposable && this._annotationProviders.size === 0) {\n            Logger.log(`Add listener registrations for annotations`);\n\n            this._annotationsDisposable = Disposable.from(\n                window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveTextEditorChanged, 50), this),\n                window.onDidChangeTextEditorViewColumn(this.onTextEditorViewColumnChanged, this),\n                window.onDidChangeVisibleTextEditors(Functions.debounce(this.onVisibleTextEditorsChanged, 50), this),\n                workspace.onDidCloseTextDocument(this.onTextDocumentClosed, this),\n                Container.tracker.onDidChangeBlameState(this.onBlameStateChanged, this),\n                Container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged, this)\n            );\n        }\n\n        this._annotationProviders.set(provider.correlationKey, provider);\n        if (await provider.provideAnnotation(shaOrLine)) {\n            this._onDidToggleAnnotations.fire();\n            return provider;\n        }\n\n        return undefined;\n    }\n}\n","'use strict';\nimport {\n    ConfigurationChangeEvent,\n    debug,\n    DecorationRangeBehavior,\n    DecorationRenderOptions,\n    Disposable,\n    Range,\n    TextEditor,\n    TextEditorDecorationType,\n    window\n} from 'vscode';\nimport { configuration } from '../configuration';\nimport { isTextEditor } from '../constants';\nimport { Container } from '../container';\nimport { LinesChangeEvent } from '../trackers/gitLineTracker';\nimport { Annotations } from './annotations';\n\nconst annotationDecoration: TextEditorDecorationType = window.createTextEditorDecorationType({\n    after: {\n        margin: '0 0 0 3em',\n        textDecoration: 'none'\n    },\n    rangeBehavior: DecorationRangeBehavior.ClosedOpen\n} as DecorationRenderOptions);\n\nexport class LineAnnotationController implements Disposable {\n    private _disposable: Disposable;\n    private _debugSessionEndDisposable: Disposable | undefined;\n    private _editor: TextEditor | undefined;\n    private _enabled: boolean = false;\n\n    constructor() {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            Container.fileAnnotations.onDidToggleAnnotations(this.onFileAnnotationsToggled, this),\n            debug.onDidStartDebugSession(this.onDebugSessionStarted, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.clearAnnotations(this._editor);\n\n        this._debugSessionEndDisposable && this._debugSessionEndDisposable.dispose();\n\n        Container.lineTracker.stop(this);\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (!configuration.changed(e, configuration.name('currentLine').value)) return;\n\n        if (configuration.changed(e, configuration.name('currentLine')('enabled').value)) {\n            if (Container.config.currentLine.enabled) {\n                this._enabled = true;\n                this.resume();\n            }\n            else {\n                this._enabled = false;\n                this.setLineTracker(false);\n            }\n        }\n\n        void this.refresh(window.activeTextEditor);\n    }\n\n    private _suspended?: 'debugging' | 'user';\n    get suspended() {\n        return !this._enabled || this._suspended !== undefined;\n    }\n\n    resume(reason: 'debugging' | 'user' = 'user') {\n        this.setLineTracker(true);\n\n        switch (reason) {\n            case 'debugging':\n                if (this._suspended !== 'user') {\n                    this._suspended = undefined;\n                    return true;\n                }\n                break;\n\n            case 'user':\n                if (this._suspended !== undefined) {\n                    this._suspended = undefined;\n                    return true;\n                }\n                break;\n        }\n\n        return false;\n    }\n\n    suspend(reason: 'debugging' | 'user' = 'user') {\n        this.setLineTracker(false);\n\n        if (this._suspended !== 'user') {\n            this._suspended = reason;\n            return true;\n        }\n\n        return false;\n    }\n\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        if (!e.pending && e.lines !== undefined) {\n            void this.refresh(e.editor);\n\n            return;\n        }\n\n        this.clear(e.editor);\n    }\n\n    private onDebugSessionStarted() {\n        if (this._debugSessionEndDisposable === undefined) {\n            this._debugSessionEndDisposable = debug.onDidTerminateDebugSession(this.onDebugSessionEnded, this);\n        }\n\n        if (this.suspend('debugging')) {\n            void this.refresh(window.activeTextEditor);\n        }\n    }\n\n    private onDebugSessionEnded() {\n        if (this._debugSessionEndDisposable !== undefined) {\n            this._debugSessionEndDisposable.dispose();\n            this._debugSessionEndDisposable = undefined;\n        }\n\n        if (this.resume('debugging')) {\n            void this.refresh(window.activeTextEditor);\n        }\n    }\n\n    private onFileAnnotationsToggled() {\n        void this.refresh(window.activeTextEditor);\n    }\n\n    clear(editor: TextEditor | undefined) {\n        if (this._editor !== editor && this._editor !== undefined) {\n            this.clearAnnotations(this._editor);\n        }\n        this.clearAnnotations(editor);\n    }\n\n    async toggle(editor: TextEditor | undefined) {\n        this._enabled = !(this._enabled && !this.suspended);\n\n        if (this._enabled) {\n            if (this.resume('user')) {\n                await this.refresh(editor);\n            }\n        }\n        else {\n            if (this.suspend('user')) {\n                await this.refresh(editor);\n            }\n        }\n    }\n\n    private clearAnnotations(editor: TextEditor | undefined) {\n        if (editor === undefined || (editor as any)._disposed === true) return;\n\n        editor.setDecorations(annotationDecoration, []);\n    }\n\n    private async refresh(editor: TextEditor | undefined) {\n        if (editor === undefined && this._editor === undefined) return;\n\n        const lines = Container.lineTracker.lines;\n        if (editor === undefined || lines === undefined || !isTextEditor(editor)) return this.clear(this._editor);\n\n        if (this._editor !== editor) {\n            // Clear any annotations on the previously active editor\n            this.clear(this._editor);\n\n            this._editor = editor;\n        }\n\n        const cfg = Container.config.currentLine;\n        if (this.suspended) return this.clear(editor);\n\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n        if (!trackedDocument.isBlameable && this.suspended) return this.clear(editor);\n\n        // Make sure the editor hasn't died since the await above and that we are still on the same line(s)\n        if (editor.document === undefined || !Container.lineTracker.includesAll(lines)) return;\n\n        const scrollable = Container.config.currentLine.scrollable;\n\n        const decorations = [];\n        for (const l of lines) {\n            const state = Container.lineTracker.getState(l);\n            if (state === undefined || state.commit === undefined) continue;\n\n            const decoration = Annotations.trailing(\n                state.commit,\n                cfg.format,\n                cfg.dateFormat === null ? Container.config.defaultDateFormat : cfg.dateFormat,\n                scrollable\n            );\n            decoration.range = editor.document.validateRange(\n                new Range(l, Number.MAX_SAFE_INTEGER, l, Number.MAX_SAFE_INTEGER)\n            );\n            decorations.push(decoration);\n        }\n\n        editor.setDecorations(annotationDecoration, decorations);\n    }\n\n    private setLineTracker(enabled: boolean) {\n        if (enabled) {\n            if (!Container.lineTracker.isSubscribed(this)) {\n                Container.lineTracker.start(\n                    this,\n                    Disposable.from(Container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged, this))\n                );\n            }\n\n            return;\n        }\n\n        Container.lineTracker.stop(this);\n    }\n}\n","'use strict';\nimport {\n    CancellationToken,\n    CodeLens,\n    CodeLensProvider,\n    Command,\n    commands,\n    DocumentSelector,\n    DocumentSymbol,\n    Event,\n    EventEmitter,\n    ExtensionContext,\n    Location,\n    Position,\n    Range,\n    SymbolInformation,\n    SymbolKind,\n    TextDocument,\n    Uri\n} from 'vscode';\nimport {\n    Commands,\n    DiffWithPreviousCommandArgs,\n    ShowQuickCommitDetailsCommandArgs,\n    ShowQuickCommitFileDetailsCommandArgs,\n    ShowQuickFileHistoryCommandArgs\n} from '../commands';\nimport {\n    CodeLensCommand,\n    CodeLensConfig,\n    CodeLensLanguageScope,\n    CodeLensScopes,\n    configuration\n} from '../configuration';\nimport { BuiltInCommands, DocumentSchemes } from '../constants';\nimport { Container } from '../container';\nimport { GitBlame, GitBlameCommit, GitBlameLines, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Functions, Iterables } from '../system';\nimport { DocumentTracker, GitDocumentState } from '../trackers/gitDocumentTracker';\n\nexport class GitRecentChangeCodeLens extends CodeLens {\n    constructor(\n        public readonly languageId: string,\n        public readonly symbol: DocumentSymbol | SymbolInformation,\n        public readonly uri: GitUri | undefined,\n        private readonly blame: (() => GitBlameLines | undefined) | undefined,\n        public readonly blameRange: Range,\n        public readonly isFullRange: boolean,\n        range: Range,\n        public readonly desiredCommand: CodeLensCommand,\n        command?: Command | undefined\n    ) {\n        super(range, command);\n    }\n\n    getBlame(): GitBlameLines | undefined {\n        return this.blame && this.blame();\n    }\n}\n\nexport class GitAuthorsCodeLens extends CodeLens {\n    constructor(\n        public readonly languageId: string,\n        public readonly symbol: DocumentSymbol | SymbolInformation,\n        public readonly uri: GitUri | undefined,\n        private readonly blame: () => GitBlameLines | undefined,\n        public readonly blameRange: Range,\n        public readonly isFullRange: boolean,\n        range: Range,\n        public readonly desiredCommand: CodeLensCommand\n    ) {\n        super(range);\n    }\n\n    getBlame(): GitBlameLines | undefined {\n        return this.blame();\n    }\n}\n\nexport class GitCodeLensProvider implements CodeLensProvider {\n    private _onDidChangeCodeLenses = new EventEmitter<void>();\n    public get onDidChangeCodeLenses(): Event<void> {\n        return this._onDidChangeCodeLenses.event;\n    }\n\n    static selector: DocumentSelector = [\n        { scheme: DocumentSchemes.File },\n        { scheme: DocumentSchemes.Vsls },\n        { scheme: DocumentSchemes.Git },\n        { scheme: DocumentSchemes.GitLens }\n    ];\n\n    constructor(\n        context: ExtensionContext,\n        private readonly _git: GitService,\n        private readonly _tracker: DocumentTracker<GitDocumentState>\n    ) {}\n\n    reset(reason?: 'idle' | 'saved') {\n        this._onDidChangeCodeLenses.fire();\n    }\n\n    async provideCodeLenses(document: TextDocument, token: CancellationToken): Promise<CodeLens[]> {\n        const trackedDocument = await this._tracker.getOrAdd(document);\n        if (!trackedDocument.isBlameable) return [];\n\n        let dirty = false;\n        if (document.isDirty) {\n            // Only allow dirty blames if we are idle\n            if (trackedDocument.isDirtyIdle) {\n                const maxLines = Container.config.advanced.blame.sizeThresholdAfterEdit;\n                if (maxLines > 0 && document.lineCount > maxLines) {\n                    dirty = true;\n                }\n            }\n            else {\n                dirty = true;\n            }\n        }\n\n        const cfg = configuration.get<CodeLensConfig>(configuration.name('codeLens').value, document.uri);\n\n        let languageScope =\n            cfg.scopesByLanguage &&\n            cfg.scopesByLanguage.find(\n                ll => ll.language !== undefined && ll.language.toLowerCase() === document.languageId\n            );\n        if (languageScope == null) {\n            languageScope = {\n                language: undefined\n            } as CodeLensLanguageScope;\n        }\n        if (languageScope.scopes == null) {\n            languageScope.scopes = cfg.scopes;\n        }\n        if (languageScope.symbolScopes == null) {\n            languageScope.symbolScopes = cfg.symbolScopes;\n        }\n\n        languageScope.symbolScopes =\n            languageScope.symbolScopes != null\n                ? (languageScope.symbolScopes = languageScope.symbolScopes.map(s => s.toLowerCase()))\n                : [];\n\n        const lenses: CodeLens[] = [];\n\n        const gitUri = trackedDocument.uri;\n        let blame: GitBlame | undefined;\n        let symbols;\n\n        if (!dirty) {\n            if (token.isCancellationRequested) return lenses;\n\n            if (languageScope.scopes.length === 1 && languageScope.scopes.includes(CodeLensScopes.Document)) {\n                blame = document.isDirty\n                    ? await this._git.getBlameForFileContents(gitUri, document.getText())\n                    : await this._git.getBlameForFile(gitUri);\n            }\n            else {\n                [blame, symbols] = await Promise.all([\n                    document.isDirty\n                        ? this._git.getBlameForFileContents(gitUri, document.getText())\n                        : this._git.getBlameForFile(gitUri),\n                    commands.executeCommand(BuiltInCommands.ExecuteDocumentSymbolProvider, document.uri) as Promise<\n                        SymbolInformation[]\n                    >\n                ]);\n            }\n\n            if (blame === undefined || blame.lines.length === 0) return lenses;\n        }\n        else {\n            if (languageScope.scopes.length !== 1 || !languageScope.scopes.includes(CodeLensScopes.Document)) {\n                symbols = (await commands.executeCommand(\n                    BuiltInCommands.ExecuteDocumentSymbolProvider,\n                    document.uri\n                )) as SymbolInformation[];\n            }\n        }\n\n        if (token.isCancellationRequested) return lenses;\n\n        const documentRangeFn = Functions.once(() => document.validateRange(new Range(0, 1000000, 1000000, 1000000)));\n\n        // Since blame information isn't valid when there are unsaved changes -- update the lenses appropriately\n        const dirtyCommand = dirty ? ({ title: this.getDirtyTitle(cfg) } as Command) : undefined;\n\n        if (symbols !== undefined) {\n            Logger.log('GitCodeLensProvider.provideCodeLenses:', `${symbols.length} symbol(s) found`);\n            for (const sym of symbols) {\n                this.provideCodeLens(\n                    lenses,\n                    document,\n                    sym,\n                    languageScope as Required<CodeLensLanguageScope>,\n                    documentRangeFn,\n                    blame,\n                    gitUri,\n                    cfg,\n                    dirty,\n                    dirtyCommand\n                );\n            }\n        }\n\n        if (\n            (languageScope.scopes.includes(CodeLensScopes.Document) || languageScope.symbolScopes.includes('file')) &&\n            !languageScope.symbolScopes.includes('!file')\n        ) {\n            // Check if we have a lens for the whole document -- if not add one\n            if (!lenses.find(l => l.range.start.line === 0 && l.range.end.line === 0)) {\n                const blameRange = documentRangeFn();\n\n                let blameForRangeFn: (() => GitBlameLines | undefined) | undefined = undefined;\n                if (dirty || cfg.recentChange.enabled) {\n                    if (!dirty) {\n                        blameForRangeFn = Functions.once(() =>\n                            this._git.getBlameForRangeSync(blame!, gitUri!, blameRange)\n                        );\n                    }\n\n                    const fileSymbol = new SymbolInformation(\n                        gitUri.getFilename(),\n                        SymbolKind.File,\n                        '',\n                        new Location(gitUri.documentUri(), new Range(0, 0, 0, blameRange.start.character))\n                    );\n                    lenses.push(\n                        new GitRecentChangeCodeLens(\n                            document.languageId,\n                            fileSymbol,\n                            gitUri,\n                            blameForRangeFn,\n                            blameRange,\n                            true,\n                            getRangeFromSymbol(fileSymbol),\n                            cfg.recentChange.command,\n                            dirtyCommand\n                        )\n                    );\n                }\n                if (!dirty && cfg.authors.enabled) {\n                    if (blameForRangeFn === undefined) {\n                        blameForRangeFn = Functions.once(() =>\n                            this._git.getBlameForRangeSync(blame!, gitUri!, blameRange)\n                        );\n                    }\n\n                    const fileSymbol = new SymbolInformation(\n                        gitUri.getFilename(),\n                        SymbolKind.File,\n                        '',\n                        new Location(gitUri.documentUri(), new Range(0, 1, 0, blameRange.start.character))\n                    );\n                    lenses.push(\n                        new GitAuthorsCodeLens(\n                            document.languageId,\n                            fileSymbol,\n                            gitUri,\n                            blameForRangeFn,\n                            blameRange,\n                            true,\n                            getRangeFromSymbol(fileSymbol),\n                            cfg.authors.command\n                        )\n                    );\n                }\n            }\n        }\n\n        return lenses;\n    }\n\n    private getValidateSymbolRange(\n        symbol: SymbolInformation | DocumentSymbol,\n        languageScope: Required<CodeLensLanguageScope>,\n        documentRangeFn: () => Range,\n        includeSingleLineSymbols: boolean\n    ): Range | undefined {\n        let valid = false;\n        let range: Range | undefined;\n\n        const symbolName = SymbolKind[symbol.kind].toLowerCase();\n        switch (symbol.kind) {\n            case SymbolKind.File:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Containers) ||\n                    languageScope.symbolScopes!.includes(symbolName)\n                ) {\n                    valid = !languageScope.symbolScopes!.includes(`!${symbolName}`);\n                }\n\n                if (valid) {\n                    // Adjust the range to be for the whole file\n                    range = documentRangeFn();\n                }\n                break;\n\n            case SymbolKind.Package:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Containers) ||\n                    languageScope.symbolScopes!.includes(symbolName)\n                ) {\n                    valid = !languageScope.symbolScopes!.includes(`!${symbolName}`);\n                }\n\n                if (valid) {\n                    // Adjust the range to be for the whole file\n                    range = getRangeFromSymbol(symbol);\n                    if (range.start.line === 0 && range.end.line === 0) {\n                        range = documentRangeFn();\n                    }\n                }\n                break;\n\n            case SymbolKind.Class:\n            case SymbolKind.Interface:\n            case SymbolKind.Module:\n            case SymbolKind.Namespace:\n            case SymbolKind.Struct:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Containers) ||\n                    languageScope.symbolScopes!.includes(symbolName)\n                ) {\n                    range = getRangeFromSymbol(symbol);\n                    valid =\n                        !languageScope.symbolScopes!.includes(`!${symbolName}`) &&\n                        (includeSingleLineSymbols || !range.isSingleLine);\n                }\n                break;\n\n            case SymbolKind.Constructor:\n            case SymbolKind.Enum:\n            case SymbolKind.Function:\n            case SymbolKind.Method:\n            case SymbolKind.Property:\n                if (\n                    languageScope.scopes.includes(CodeLensScopes.Blocks) ||\n                    languageScope.symbolScopes!.includes(symbolName)\n                ) {\n                    range = getRangeFromSymbol(symbol);\n                    valid =\n                        !languageScope.symbolScopes!.includes(`!${symbolName}`) &&\n                        (includeSingleLineSymbols || !range.isSingleLine);\n                }\n                break;\n\n            default:\n                if (languageScope.symbolScopes!.includes(symbolName)) {\n                    range = getRangeFromSymbol(symbol);\n                    valid =\n                        !languageScope.symbolScopes!.includes(`!${symbolName}`) &&\n                        (includeSingleLineSymbols || !range.isSingleLine);\n                }\n                break;\n        }\n\n        return valid ? range || getRangeFromSymbol(symbol) : undefined;\n    }\n\n    private provideCodeLens(\n        lenses: CodeLens[],\n        document: TextDocument,\n        symbol: SymbolInformation | DocumentSymbol,\n        languageScope: Required<CodeLensLanguageScope>,\n        documentRangeFn: () => Range,\n        blame: GitBlame | undefined,\n        gitUri: GitUri | undefined,\n        cfg: CodeLensConfig,\n        dirty: boolean,\n        dirtyCommand: Command | undefined\n    ): void {\n        try {\n            const blameRange = this.getValidateSymbolRange(\n                symbol,\n                languageScope,\n                documentRangeFn,\n                cfg.includeSingleLineSymbols\n            );\n            if (blameRange === undefined) return;\n\n            const line = document.lineAt(getRangeFromSymbol(symbol).start);\n            // Make sure there is only 1 lens per line\n            if (lenses.length && lenses[lenses.length - 1].range.start.line === line.lineNumber) return;\n\n            // Anchor the code lens to the start of the line -- so that the range won't change with edits (otherwise the code lens will be removed and re-added)\n            let startChar = 0;\n\n            let blameForRangeFn: (() => GitBlameLines | undefined) | undefined;\n            if (dirty || cfg.recentChange.enabled) {\n                if (!dirty) {\n                    blameForRangeFn = Functions.once(() => this._git.getBlameForRangeSync(blame!, gitUri!, blameRange));\n                }\n                lenses.push(\n                    new GitRecentChangeCodeLens(\n                        document.languageId,\n                        symbol,\n                        gitUri,\n                        blameForRangeFn,\n                        blameRange,\n                        false,\n                        line.range.with(new Position(line.range.start.line, startChar)),\n                        cfg.recentChange.command,\n                        dirtyCommand\n                    )\n                );\n                startChar++;\n            }\n\n            if (cfg.authors.enabled) {\n                let multiline = !blameRange.isSingleLine;\n                // HACK for Omnisharp, since it doesn't return full ranges\n                if (!multiline && document.languageId === 'csharp') {\n                    switch (symbol.kind) {\n                        case SymbolKind.File:\n                            break;\n                        case SymbolKind.Package:\n                        case SymbolKind.Module:\n                        case SymbolKind.Namespace:\n                        case SymbolKind.Class:\n                        case SymbolKind.Interface:\n                        case SymbolKind.Constructor:\n                        case SymbolKind.Method:\n                        case SymbolKind.Function:\n                        case SymbolKind.Enum:\n                            multiline = true;\n                            break;\n                    }\n                }\n\n                if (multiline && !dirty) {\n                    if (blameForRangeFn === undefined) {\n                        blameForRangeFn = Functions.once(() =>\n                            this._git.getBlameForRangeSync(blame!, gitUri!, blameRange)\n                        );\n                    }\n                    lenses.push(\n                        new GitAuthorsCodeLens(\n                            document.languageId,\n                            symbol,\n                            gitUri,\n                            blameForRangeFn,\n                            blameRange,\n                            false,\n                            line.range.with(new Position(line.range.start.line, startChar)),\n                            cfg.authors.command\n                        )\n                    );\n                }\n            }\n        }\n        finally {\n            if (isDocumentSymbol(symbol)) {\n                for (const child of symbol.children) {\n                    this.provideCodeLens(\n                        lenses,\n                        document,\n                        child,\n                        languageScope,\n                        documentRangeFn,\n                        blame,\n                        gitUri,\n                        cfg,\n                        dirty,\n                        dirtyCommand\n                    );\n                }\n            }\n        }\n    }\n\n    resolveCodeLens(lens: CodeLens, token: CancellationToken): CodeLens | Thenable<CodeLens> {\n        if (lens instanceof GitRecentChangeCodeLens) return this.resolveGitRecentChangeCodeLens(lens, token);\n        if (lens instanceof GitAuthorsCodeLens) return this.resolveGitAuthorsCodeLens(lens, token);\n        return Promise.reject<CodeLens>(undefined);\n    }\n\n    private resolveGitRecentChangeCodeLens(lens: GitRecentChangeCodeLens, token: CancellationToken): CodeLens {\n        const blame = lens.getBlame();\n        if (blame === undefined) return lens;\n\n        const recentCommit = Iterables.first(blame.commits.values());\n        let title = `${recentCommit.author}, ${recentCommit.formattedDate}`;\n        if (Container.config.debug) {\n            title += ` [${lens.languageId}: ${SymbolKind[lens.symbol.kind]}(${lens.range.start.character}-${\n                lens.range.end.character\n            }${\n                (lens.symbol as SymbolInformation).containerName\n                    ? `|${(lens.symbol as SymbolInformation).containerName}`\n                    : ''\n            }), Lines (${lens.blameRange.start.line + 1}-${lens.blameRange.end.line + 1}), Commit (${\n                recentCommit.shortSha\n            })]`;\n        }\n\n        switch (lens.desiredCommand) {\n            case CodeLensCommand.DiffWithPrevious:\n                return this.applyDiffWithPreviousCommand<GitRecentChangeCodeLens>(title, lens, blame, recentCommit);\n            case CodeLensCommand.ShowQuickCommitDetails:\n                return this.applyShowQuickCommitDetailsCommand<GitRecentChangeCodeLens>(\n                    title,\n                    lens,\n                    blame,\n                    recentCommit\n                );\n            case CodeLensCommand.ShowQuickCommitFileDetails:\n                return this.applyShowQuickCommitFileDetailsCommand<GitRecentChangeCodeLens>(\n                    title,\n                    lens,\n                    blame,\n                    recentCommit\n                );\n            case CodeLensCommand.ShowQuickCurrentBranchHistory:\n                return this.applyShowQuickCurrentBranchHistoryCommand<GitRecentChangeCodeLens>(\n                    title,\n                    lens,\n                    blame,\n                    recentCommit\n                );\n            case CodeLensCommand.ShowQuickFileHistory:\n                return this.applyShowQuickFileHistoryCommand<GitRecentChangeCodeLens>(title, lens, blame, recentCommit);\n            case CodeLensCommand.ToggleFileBlame:\n                return this.applyToggleFileBlameCommand<GitRecentChangeCodeLens>(title, lens, blame);\n            default:\n                return lens;\n        }\n    }\n\n    private resolveGitAuthorsCodeLens(lens: GitAuthorsCodeLens, token: CancellationToken): CodeLens {\n        const blame = lens.getBlame();\n        if (blame === undefined) return lens;\n\n        const count = blame.authors.size;\n        let title = `${count} ${count > 1 ? 'authors' : 'author'} (${Iterables.first(blame.authors.values()).name}${\n            count > 1 ? ' and others' : ''\n        })`;\n        if (Container.config.debug) {\n            title += ` [${lens.languageId}: ${SymbolKind[lens.symbol.kind]}(${lens.range.start.character}-${\n                lens.range.end.character\n            }${\n                (lens.symbol as SymbolInformation).containerName\n                    ? `|${(lens.symbol as SymbolInformation).containerName}`\n                    : ''\n            }), Lines (${lens.blameRange.start.line + 1}-${lens.blameRange.end.line + 1}), Authors (${Iterables.join(\n                Iterables.map(blame.authors.values(), a => a.name),\n                ', '\n            )})]`;\n        }\n\n        switch (lens.desiredCommand) {\n            case CodeLensCommand.DiffWithPrevious:\n                return this.applyDiffWithPreviousCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickCommitDetails:\n                return this.applyShowQuickCommitDetailsCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickCommitFileDetails:\n                return this.applyShowQuickCommitFileDetailsCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickCurrentBranchHistory:\n                return this.applyShowQuickCurrentBranchHistoryCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ShowQuickFileHistory:\n                return this.applyShowQuickFileHistoryCommand<GitAuthorsCodeLens>(title, lens, blame);\n            case CodeLensCommand.ToggleFileBlame:\n                return this.applyToggleFileBlameCommand<GitAuthorsCodeLens>(title, lens, blame);\n            default:\n                return lens;\n        }\n    }\n\n    private applyDiffWithPreviousCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        if (commit === undefined) {\n            const blameLine = blame.allLines[lens.range.start.line];\n            commit = blame.commits.get(blameLine.sha);\n        }\n\n        lens.command = {\n            title: title,\n            command: Commands.DiffWithPrevious,\n            arguments: [\n                lens.uri!.toFileUri(),\n                {\n                    commit: commit\n                } as DiffWithPreviousCommandArgs\n            ]\n        };\n        return lens;\n    }\n\n    private applyShowQuickCommitDetailsCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        lens.command = {\n            title: title,\n            command: commit !== undefined && commit.isUncommitted ? '' : CodeLensCommand.ShowQuickCommitDetails,\n            arguments: [\n                lens.uri!.toFileUri(),\n                {\n                    commit,\n                    sha: commit === undefined ? undefined : commit.sha\n                } as ShowQuickCommitDetailsCommandArgs\n            ]\n        };\n        return lens;\n    }\n\n    private applyShowQuickCommitFileDetailsCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        lens.command = {\n            title: title,\n            command: commit !== undefined && commit.isUncommitted ? '' : CodeLensCommand.ShowQuickCommitFileDetails,\n            arguments: [\n                lens.uri!.toFileUri(),\n                {\n                    commit,\n                    sha: commit === undefined ? undefined : commit.sha\n                } as ShowQuickCommitFileDetailsCommandArgs\n            ]\n        };\n        return lens;\n    }\n\n    private applyShowQuickCurrentBranchHistoryCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        lens.command = {\n            title: title,\n            command: CodeLensCommand.ShowQuickCurrentBranchHistory,\n            arguments: [lens.uri!.toFileUri()]\n        };\n        return lens;\n    }\n\n    private applyShowQuickFileHistoryCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines,\n        commit?: GitBlameCommit\n    ): T {\n        lens.command = {\n            title: title,\n            command: CodeLensCommand.ShowQuickFileHistory,\n            arguments: [\n                lens.uri!.toFileUri(),\n                {\n                    range: lens.isFullRange ? undefined : lens.blameRange\n                } as ShowQuickFileHistoryCommandArgs\n            ]\n        };\n        return lens;\n    }\n\n    private applyToggleFileBlameCommand<T extends GitRecentChangeCodeLens | GitAuthorsCodeLens>(\n        title: string,\n        lens: T,\n        blame: GitBlameLines\n    ): T {\n        lens.command = {\n            title: title,\n            command: Commands.ToggleFileBlame,\n            arguments: [lens.uri!.toFileUri()]\n        };\n        return lens;\n    }\n\n    private getDirtyTitle(cfg: CodeLensConfig) {\n        if (cfg.recentChange.enabled && cfg.authors.enabled) {\n            return Container.config.strings.codeLens.unsavedChanges.recentChangeAndAuthors;\n        }\n        if (cfg.recentChange.enabled) return Container.config.strings.codeLens.unsavedChanges.recentChangeOnly;\n        return Container.config.strings.codeLens.unsavedChanges.authorsOnly;\n    }\n}\n\nfunction getRangeFromSymbol(symbol: DocumentSymbol | SymbolInformation) {\n    return isDocumentSymbol(symbol) ? symbol.range : symbol.location.range;\n}\n\nfunction isDocumentSymbol(symbol: DocumentSymbol | SymbolInformation): symbol is DocumentSymbol {\n    return (symbol as DocumentSymbol).children !== undefined;\n}\n","'use strict';\nimport { ConfigurationChangeEvent, Disposable, languages } from 'vscode';\nimport { configuration } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport {\n    DocumentBlameStateChangeEvent,\n    DocumentDirtyIdleTriggerEvent,\n    GitDocumentState\n} from '../trackers/gitDocumentTracker';\nimport { GitCodeLensProvider } from './codeLensProvider';\n\nexport class GitCodeLensController implements Disposable {\n    private _canToggle: boolean = false;\n    private _disposable: Disposable | undefined;\n    private _provider: GitCodeLensProvider | undefined;\n    private _providerDisposable: Disposable | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(configuration.onDidChange(this.onConfigurationChanged, this));\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this._providerDisposable && this._providerDisposable.dispose();\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        const section = configuration.name('codeLens').value;\n        if (\n            configuration.changed(e, section, null) ||\n            configuration.changed(e, configuration.name('defaultDateStyle').value) ||\n            configuration.changed(e, configuration.name('defaultDateFormat').value)\n        ) {\n            if (!configuration.initializing(e)) {\n                Logger.log('CodeLens config changed; resetting CodeLens provider');\n            }\n\n            const cfg = Container.config.codeLens;\n            if (cfg.enabled && (cfg.recentChange.enabled || cfg.authors.enabled)) {\n                if (this._provider !== undefined) {\n                    this._provider.reset();\n                }\n                else {\n                    this.createProvider();\n                }\n            }\n            else {\n                if (this._providerDisposable !== undefined) {\n                    this._providerDisposable.dispose();\n                    this._providerDisposable = undefined;\n                }\n                this._provider = undefined;\n            }\n\n            this._canToggle = cfg.recentChange.enabled || cfg.authors.enabled;\n            setCommandContext(CommandContext.CanToggleCodeLens, this._canToggle);\n        }\n    }\n\n    private onBlameStateChanged(e: DocumentBlameStateChangeEvent<GitDocumentState>) {\n        // Only reset if we have saved, since the code lens won't naturally be re-rendered\n        if (this._provider === undefined || !e.blameable) return;\n\n        Logger.log('Blame state changed; resetting CodeLens provider');\n        this._provider.reset('saved');\n    }\n\n    private onDirtyIdleTriggered(e: DocumentDirtyIdleTriggerEvent<GitDocumentState>) {\n        if (this._provider === undefined || !e.document.isBlameable) return;\n\n        const maxLines = Container.config.advanced.blame.sizeThresholdAfterEdit;\n        if (maxLines > 0 && e.document.lineCount > maxLines) return;\n\n        Logger.log('Dirty idle triggered; resetting CodeLens provider');\n        this._provider.reset('idle');\n    }\n\n    toggleCodeLens() {\n        if (!this._canToggle) return;\n\n        Logger.log(`toggleCodeLens()`);\n        if (this._provider !== undefined) {\n            if (this._providerDisposable !== undefined) {\n                this._providerDisposable.dispose();\n                this._providerDisposable = undefined;\n            }\n\n            this._provider = undefined;\n\n            return;\n        }\n\n        this.createProvider();\n    }\n\n    private createProvider() {\n        this._provider = new GitCodeLensProvider(Container.context, Container.git, Container.tracker);\n        this._providerDisposable = Disposable.from(\n            languages.registerCodeLensProvider(GitCodeLensProvider.selector, this._provider),\n            Container.tracker.onDidChangeBlameState(this.onBlameStateChanged, this),\n            Container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered, this)\n        );\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport {\n    Disposable,\n    Event,\n    EventEmitter,\n    FileChangeEvent,\n    FileStat,\n    FileSystemError,\n    FileSystemProvider,\n    FileType,\n    Uri,\n    workspace\n} from 'vscode';\nimport { DocumentSchemes } from '../constants';\nimport { Container } from '../container';\nimport { GitService, GitTree, GitUri } from '../git/gitService';\nimport { Iterables, Strings, TernarySearchTree } from '../system';\n\nexport function fromGitLensFSUri(uri: Uri): { path: string; ref: string; repoPath: string } {\n    const gitUri = uri instanceof GitUri ? uri : GitUri.fromRevisionUri(uri);\n    return { path: gitUri.getRelativePath(), ref: gitUri.sha!, repoPath: gitUri.repoPath! };\n}\n\nexport function toGitLensFSUri(ref: string, repoPath: string): Uri {\n    return GitUri.toRevisionUri(ref, repoPath, repoPath);\n}\n\nconst emptyArray = new Uint8Array(0);\n\nexport class GitFileSystemProvider implements FileSystemProvider, Disposable {\n    private readonly _disposable: Disposable;\n    private readonly _searchTreeMap = new Map<string, Promise<TernarySearchTree<GitTree>>>();\n\n    constructor() {\n        this._disposable = Disposable.from(\n            workspace.registerFileSystemProvider(DocumentSchemes.GitLens, this, {\n                isCaseSensitive: true,\n                isReadonly: true\n            })\n        );\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    private _onDidChangeFile = new EventEmitter<FileChangeEvent[]>();\n    get onDidChangeFile(): Event<FileChangeEvent[]> {\n        return this._onDidChangeFile.event;\n    }\n\n    copy?(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n    createDirectory(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n    delete(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n\n    async readDirectory(uri: Uri): Promise<[string, FileType][]> {\n        const { path, ref, repoPath } = fromGitLensFSUri(uri);\n\n        const tree = await this.getTree(path, ref, repoPath);\n        if (tree === undefined) {\n            debugger;\n            throw FileSystemError.FileNotFound(uri);\n        }\n\n        const items = [\n            ...Iterables.map<GitTree, [string, FileType]>(tree, t => [\n                path != null && path.length !== 0 ? Strings.normalizePath(paths.relative(path, t.path)) : t.path,\n                typeToFileType(t.type)\n            ])\n        ];\n        return items;\n    }\n\n    async readFile(uri: Uri): Promise<Uint8Array> {\n        const { path, ref, repoPath } = fromGitLensFSUri(uri);\n\n        if (ref === GitService.deletedOrMissingSha) return emptyArray;\n\n        const buffer = await Container.git.getVersionedFileBuffer(repoPath, path, ref);\n        if (buffer === undefined) return emptyArray;\n\n        return buffer;\n    }\n\n    rename(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n\n    async stat(uri: Uri): Promise<FileStat> {\n        const { path, ref, repoPath } = fromGitLensFSUri(uri);\n\n        if (ref === GitService.deletedOrMissingSha) {\n            return {\n                type: FileType.File,\n                size: 0,\n                ctime: 0,\n                mtime: 0\n            };\n        }\n\n        let treeItem;\n\n        const searchTree = this._searchTreeMap.get(ref);\n        if (searchTree !== undefined) {\n            // Add the fake root folder to the path\n            treeItem = (await searchTree).get(`/~/${path}`);\n        }\n        else {\n            if (path == null || path.length === 0) {\n                const tree = await this.getTree(path, ref, repoPath);\n                if (tree === undefined) throw FileSystemError.FileNotFound(uri);\n\n                return {\n                    type: FileType.Directory,\n                    size: 0,\n                    ctime: 0,\n                    mtime: 0\n                };\n            }\n\n            treeItem = await Container.git.getTreeFileForRevision(repoPath, path, ref);\n        }\n\n        if (treeItem === undefined) {\n            throw FileSystemError.FileNotFound(uri);\n        }\n\n        return {\n            type: typeToFileType(treeItem.type),\n            size: treeItem.size,\n            ctime: 0,\n            mtime: 0\n        };\n    }\n\n    watch(): Disposable {\n        return { dispose: () => {} };\n    }\n\n    writeFile(): void | Thenable<void> {\n        throw FileSystemError.NoPermissions;\n    }\n\n    private async createSearchTree(ref: string, repoPath: string) {\n        const searchTree = TernarySearchTree.forPaths() as TernarySearchTree<GitTree>;\n        const trees = await Container.git.getTreeForRevision(repoPath, ref);\n\n        // Add a fake root folder so that searches will work\n        searchTree.set(`~`, { commitSha: '', path: '~', size: 0, type: 'tree' });\n        for (const item of trees) {\n            searchTree.set(`~/${item.path}`, item);\n        }\n\n        return searchTree;\n    }\n\n    private async getOrCreateSearchTree(ref: string, repoPath: string) {\n        let searchTree = this._searchTreeMap.get(ref);\n        if (searchTree === undefined) {\n            searchTree = this.createSearchTree(ref, repoPath);\n            this._searchTreeMap.set(ref, searchTree);\n        }\n\n        return searchTree;\n    }\n\n    private async getTree(path: string, ref: string, repoPath: string) {\n        const searchTree = await this.getOrCreateSearchTree(ref, repoPath);\n        // Add the fake root folder to the path\n        return searchTree!.findSuperstr(`/~/${path}`, true);\n    }\n}\n\nfunction typeToFileType(type: 'blob' | 'tree' | undefined | null) {\n    switch (type) {\n        case 'blob':\n            return FileType.File;\n        case 'tree':\n            return FileType.Directory;\n        default:\n            return FileType.Unknown;\n    }\n}\n","'use strict';\nimport {\n    CancellationToken,\n    ConfigurationChangeEvent,\n    debug,\n    Disposable,\n    Hover,\n    HoverProvider,\n    languages,\n    Position,\n    Range,\n    TextDocument,\n    TextEditor,\n    window\n} from 'vscode';\nimport { Annotations } from '../annotations/annotations';\nimport { configuration } from '../configuration';\nimport { Container } from '../container';\nimport { LinesChangeEvent } from '../trackers/gitLineTracker';\n\nexport class LineHoverController implements Disposable {\n    private _debugSessionEndDisposable: Disposable | undefined;\n    private _disposable: Disposable;\n    private _hoverProviderDisposable: Disposable | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            debug.onDidStartDebugSession(this.onDebugSessionStarted, this)\n        );\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.unregister();\n\n        this._debugSessionEndDisposable && this._debugSessionEndDisposable.dispose();\n\n        Container.lineTracker.stop(this);\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('hovers')('enabled').value) &&\n            !configuration.changed(e, configuration.name('hovers')('currentLine')('enabled').value)\n        ) {\n            return;\n        }\n\n        if (Container.config.hovers.enabled && Container.config.hovers.currentLine.enabled) {\n            Container.lineTracker.start(\n                this,\n                Disposable.from(Container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged, this))\n            );\n\n            this.register(window.activeTextEditor);\n        }\n        else {\n            Container.lineTracker.stop(this);\n            this.unregister();\n        }\n    }\n\n    private get debugging() {\n        return this._debugSessionEndDisposable !== undefined;\n    }\n\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        if (e.pending || e.reason !== 'editor') return;\n\n        if (e.editor === undefined || e.lines === undefined) {\n            this.unregister();\n\n            return;\n        }\n\n        this.register(e.editor);\n    }\n\n    private onDebugSessionStarted() {\n        if (this._debugSessionEndDisposable === undefined) {\n            this._debugSessionEndDisposable = debug.onDidTerminateDebugSession(this.onDebugSessionEnded, this);\n        }\n    }\n\n    private onDebugSessionEnded() {\n        if (this._debugSessionEndDisposable !== undefined) {\n            this._debugSessionEndDisposable.dispose();\n            this._debugSessionEndDisposable = undefined;\n        }\n    }\n\n    async provideDetailsHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        if (!Container.lineTracker.includes(position.line)) return undefined;\n\n        const lineState = Container.lineTracker.getState(position.line);\n        const commit = lineState !== undefined ? lineState.commit : undefined;\n        if (commit === undefined) return undefined;\n\n        // Avoid double annotations if we are showing the whole-file hover blame annotations\n        const fileAnnotations = await Container.fileAnnotations.getAnnotationType(window.activeTextEditor);\n        if (fileAnnotations !== undefined && Container.config.hovers.annotations.details) return undefined;\n\n        const wholeLine = this.debugging ? false : Container.config.hovers.currentLine.over === 'line';\n        // If we aren't showing the hover over the whole line, make sure the annotation is on\n        if (!wholeLine && Container.lineAnnotations.suspended) return undefined;\n\n        const range = document.validateRange(\n            new Range(position.line, wholeLine ? 0 : Number.MAX_SAFE_INTEGER, position.line, Number.MAX_SAFE_INTEGER)\n        );\n        if (!wholeLine && range.start.character !== position.character) return undefined;\n\n        // Get the full commit message -- since blame only returns the summary\n        let logCommit = lineState !== undefined ? lineState.logCommit : undefined;\n        if (logCommit === undefined && !commit.isUncommitted) {\n            logCommit = await Container.git.getLogCommitForFile(commit.repoPath, commit.uri.fsPath, {\n                ref: commit.sha\n            });\n            if (logCommit !== undefined) {\n                // Preserve the previous commit from the blame commit\n                logCommit.previousSha = commit.previousSha;\n                logCommit.previousFileName = commit.previousFileName;\n\n                if (lineState !== undefined) {\n                    lineState.logCommit = logCommit;\n                }\n            }\n        }\n\n        const trackedDocument = await Container.tracker.get(document);\n        if (trackedDocument === undefined) return undefined;\n\n        const message = Annotations.getHoverMessage(\n            logCommit || commit,\n            Container.config.defaultDateFormat,\n            await Container.git.getRemotes(commit.repoPath),\n            fileAnnotations,\n            position.line\n        );\n        return new Hover(message, range);\n    }\n\n    async provideChangesHover(\n        document: TextDocument,\n        position: Position,\n        token: CancellationToken\n    ): Promise<Hover | undefined> {\n        if (!Container.lineTracker.includes(position.line)) return undefined;\n\n        const lineState = Container.lineTracker.getState(position.line);\n        const commit = lineState !== undefined ? lineState.commit : undefined;\n        if (commit === undefined) return undefined;\n\n        // Avoid double annotations if we are showing the whole-file hover blame annotations\n        if (Container.config.hovers.annotations.changes) {\n            const fileAnnotations = await Container.fileAnnotations.getAnnotationType(window.activeTextEditor);\n            if (fileAnnotations !== undefined) return undefined;\n        }\n\n        const wholeLine = this.debugging ? false : Container.config.hovers.currentLine.over === 'line';\n        // If we aren't showing the hover over the whole line, make sure the annotation is on\n        if (!wholeLine && Container.lineAnnotations.suspended) return undefined;\n\n        const range = document.validateRange(\n            new Range(position.line, wholeLine ? 0 : Number.MAX_SAFE_INTEGER, position.line, Number.MAX_SAFE_INTEGER)\n        );\n        if (!wholeLine && range.start.character !== position.character) return undefined;\n\n        const trackedDocument = await Container.tracker.get(document);\n        if (trackedDocument === undefined) return undefined;\n\n        const hover = await Annotations.changesHover(commit, position.line, trackedDocument.uri);\n        if (hover.hoverMessage === undefined) return undefined;\n\n        return new Hover(hover.hoverMessage, range);\n    }\n\n    private register(editor: TextEditor | undefined) {\n        this.unregister();\n\n        if (editor === undefined /* || this.suspended */) return;\n\n        const cfg = Container.config.hovers;\n        if (!cfg.enabled || !cfg.currentLine.enabled || (!cfg.currentLine.details && !cfg.currentLine.changes)) return;\n\n        const subscriptions = [];\n        if (cfg.currentLine.changes) {\n            subscriptions.push(\n                languages.registerHoverProvider({ pattern: editor.document.uri.fsPath }, {\n                    provideHover: this.provideChangesHover.bind(this)\n                } as HoverProvider)\n            );\n        }\n        if (cfg.currentLine.details) {\n            subscriptions.push(\n                languages.registerHoverProvider({ pattern: editor.document.uri.fsPath }, {\n                    provideHover: this.provideDetailsHover.bind(this)\n                } as HoverProvider)\n            );\n        }\n\n        this._hoverProviderDisposable = Disposable.from(...subscriptions);\n    }\n\n    private unregister() {\n        if (this._hoverProviderDisposable !== undefined) {\n            this._hoverProviderDisposable.dispose();\n            this._hoverProviderDisposable = undefined;\n        }\n    }\n}\n","'use strict';\nimport { commands, Disposable } from 'vscode';\nimport { CommandContext, extensionId, setCommandContext } from './constants';\nimport { Logger } from './logger';\n\nexport declare interface KeyCommand {\n    onDidPressKey?(key: Keys): Promise<{} | undefined>;\n}\n\nconst keyNoopCommand = Object.create(null) as KeyCommand;\nexport { keyNoopCommand as KeyNoopCommand };\n\nexport declare type Keys = 'left' | 'right' | ',' | '.' | 'escape';\nexport const keys: Keys[] = ['left', 'right', ',', '.', 'escape'];\n\nexport declare interface KeyMapping {\n    [id: string]: KeyCommand | (() => Promise<KeyCommand>) | undefined;\n}\n\nconst mappings: KeyMapping[] = [];\n\nexport class KeyboardScope implements Disposable {\n    constructor(\n        private readonly mapping: KeyMapping\n    ) {\n        for (const key in mapping) {\n            mapping[key] = mapping[key] || keyNoopCommand;\n        }\n    }\n\n    async dispose() {\n        const index = mappings.indexOf(this.mapping);\n        Logger.log('KeyboardScope.dispose', mappings.length, index);\n        if (index === mappings.length - 1) {\n            mappings.pop();\n            await this.updateKeyCommandsContext(mappings[mappings.length - 1]);\n        }\n        else {\n            mappings.splice(index, 1);\n        }\n    }\n\n    async begin() {\n        mappings.push(this.mapping);\n        await this.updateKeyCommandsContext(this.mapping);\n        return this;\n    }\n\n    async clearKeyCommand(key: Keys) {\n        const mapping = mappings[mappings.length - 1];\n        if (mapping !== this.mapping || !mapping[key]) return;\n\n        Logger.log('KeyboardScope.clearKeyCommand', mappings.length, key);\n        mapping[key] = undefined;\n        await setCommandContext(`${CommandContext.Key}:${key}`, false);\n    }\n\n    async setKeyCommand(key: Keys, command: KeyCommand | (() => Promise<KeyCommand>)) {\n        const mapping = mappings[mappings.length - 1];\n        if (mapping !== this.mapping) return;\n\n        Logger.log('KeyboardScope.setKeyCommand', mappings.length, key, Boolean(mapping[key]));\n\n        if (!mapping[key]) {\n            mapping[key] = command;\n            await setCommandContext(`${CommandContext.Key}:${key}`, true);\n        }\n        else {\n            mapping[key] = command;\n        }\n    }\n\n    private async updateKeyCommandsContext(mapping: KeyMapping) {\n        const promises = [];\n        for (const key of keys) {\n            promises.push(setCommandContext(`${CommandContext.Key}:${key}`, Boolean(mapping && mapping[key])));\n        }\n        await Promise.all(promises);\n    }\n}\n\nexport class Keyboard implements Disposable {\n    private _disposable: Disposable;\n\n    constructor() {\n        const subscriptions = keys.map(key =>\n            commands.registerCommand(`${extensionId}.key.${key}`, () => this.execute(key), this)\n        );\n        this._disposable = Disposable.from(...subscriptions);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    async beginScope(mapping?: KeyMapping): Promise<KeyboardScope> {\n        Logger.log('Keyboard.beginScope', mappings.length);\n        return await new KeyboardScope(\n            mapping ? Object.assign(Object.create(null), mapping) : Object.create(null)\n        ).begin();\n    }\n\n    async execute(key: Keys): Promise<{} | undefined> {\n        if (!mappings.length) return undefined;\n\n        try {\n            const mapping = mappings[mappings.length - 1];\n\n            let command = mapping[key] as KeyCommand | (() => Promise<KeyCommand>);\n            if (typeof command === 'function') {\n                command = await command();\n            }\n            if (!command || typeof command.onDidPressKey !== 'function') return undefined;\n\n            Logger.log('Keyboard.execute', key);\n\n            return await command.onDidPressKey(key);\n        }\n        catch (ex) {\n            Logger.error(ex, 'Keyboard.execute');\n            return undefined;\n        }\n    }\n}\n","'use strict';\nimport { ConfigurationChangeEvent, Disposable, StatusBarAlignment, StatusBarItem, TextEditor, window } from 'vscode';\nimport { Commands } from '../commands';\nimport { configuration, StatusBarCommand } from '../configuration';\nimport { isTextEditor } from '../constants';\nimport { Container } from '../container';\nimport { CommitFormatter, GitCommit, ICommitFormatOptions } from '../git/gitService';\nimport { LinesChangeEvent } from '../trackers/gitLineTracker';\n\nexport class StatusBarController implements Disposable {\n    private _blameStatusBarItem: StatusBarItem | undefined;\n    private _disposable: Disposable;\n    private _modeStatusBarItem: StatusBarItem | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(configuration.onDidChange(this.onConfigurationChanged, this));\n        this.onConfigurationChanged(configuration.initializingChangeEvent);\n    }\n\n    dispose() {\n        this.clearBlame();\n\n        this._blameStatusBarItem && this._blameStatusBarItem.dispose();\n        this._modeStatusBarItem && this._modeStatusBarItem.dispose();\n\n        Container.lineTracker.stop(this);\n        this._disposable && this._disposable.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (configuration.changed(e, configuration.name('mode').value)) {\n            const mode =\n                Container.config.mode.active && Container.config.mode.statusBar.enabled\n                    ? Container.config.modes[Container.config.mode.active]\n                    : undefined;\n            if (mode && mode.statusBarItemName) {\n                const alignment =\n                    Container.config.mode.statusBar.alignment !== 'left'\n                        ? StatusBarAlignment.Right\n                        : StatusBarAlignment.Left;\n\n                if (configuration.changed(e, configuration.name('mode')('statusBar')('alignment').value)) {\n                    if (this._modeStatusBarItem !== undefined && this._modeStatusBarItem.alignment !== alignment) {\n                        this._modeStatusBarItem.dispose();\n                        this._modeStatusBarItem = undefined;\n                    }\n                }\n\n                this._modeStatusBarItem =\n                    this._modeStatusBarItem ||\n                    window.createStatusBarItem(alignment, alignment === StatusBarAlignment.Right ? 999 : 1);\n                this._modeStatusBarItem.command = Commands.SwitchMode;\n                this._modeStatusBarItem.text = mode.statusBarItemName;\n                this._modeStatusBarItem.tooltip = `Switch GitLens Mode`;\n                this._modeStatusBarItem.show();\n            }\n            else {\n                if (this._modeStatusBarItem !== undefined) {\n                    this._modeStatusBarItem.dispose();\n                    this._modeStatusBarItem = undefined;\n                }\n            }\n        }\n\n        if (!configuration.changed(e, configuration.name('statusBar').value)) return;\n\n        if (Container.config.statusBar.enabled) {\n            const alignment =\n                Container.config.statusBar.alignment !== 'left' ? StatusBarAlignment.Right : StatusBarAlignment.Left;\n\n            if (configuration.changed(e, configuration.name('statusBar')('alignment').value)) {\n                if (this._blameStatusBarItem !== undefined && this._blameStatusBarItem.alignment !== alignment) {\n                    this._blameStatusBarItem.dispose();\n                    this._blameStatusBarItem = undefined;\n                }\n            }\n\n            this._blameStatusBarItem =\n                this._blameStatusBarItem ||\n                window.createStatusBarItem(alignment, alignment === StatusBarAlignment.Right ? 1000 : 0);\n            this._blameStatusBarItem.command = Container.config.statusBar.command;\n\n            if (configuration.changed(e, configuration.name('statusBar')('enabled').value)) {\n                Container.lineTracker.start(\n                    this,\n                    Disposable.from(Container.lineTracker.onDidChangeActiveLines(this.onActiveLinesChanged, this))\n                );\n            }\n        }\n        else {\n            if (configuration.changed(e, configuration.name('statusBar')('enabled').value)) {\n                Container.lineTracker.stop(this);\n\n                if (this._blameStatusBarItem !== undefined) {\n                    this._blameStatusBarItem.dispose();\n                    this._blameStatusBarItem = undefined;\n                }\n            }\n        }\n    }\n\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        // If we need to reduceFlicker, don't clear if only the selected lines changed\n        let clear = !(\n            Container.config.statusBar.reduceFlicker &&\n            e.reason === 'selection' &&\n            (e.pending || e.lines !== undefined)\n        );\n        if (!e.pending && e.lines !== undefined) {\n            const state = Container.lineTracker.getState(e.lines[0]);\n            if (state !== undefined && state.commit !== undefined) {\n                this.updateBlame(state.commit, e.editor!);\n\n                return;\n            }\n\n            clear = true;\n        }\n\n        if (clear) {\n            this.clearBlame();\n        }\n    }\n\n    clearBlame() {\n        if (this._blameStatusBarItem !== undefined) {\n            this._blameStatusBarItem.hide();\n        }\n    }\n\n    private updateBlame(commit: GitCommit, editor: TextEditor) {\n        const cfg = Container.config.statusBar;\n        if (!cfg.enabled || this._blameStatusBarItem === undefined || !isTextEditor(editor)) return;\n\n        this._blameStatusBarItem.text = `$(git-commit) ${CommitFormatter.fromTemplate(cfg.format, commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: cfg.dateFormat === null ? Container.config.defaultDateFormat : cfg.dateFormat\n        } as ICommitFormatOptions)}`;\n\n        switch (cfg.command) {\n            case StatusBarCommand.ToggleFileBlame:\n                this._blameStatusBarItem.tooltip = 'Toggle Blame Annotations';\n                break;\n            case StatusBarCommand.DiffWithPrevious:\n                this._blameStatusBarItem.command = Commands.DiffLineWithPrevious;\n                this._blameStatusBarItem.tooltip = 'Compare Line Revision with Previous';\n                break;\n            case StatusBarCommand.DiffWithWorking:\n                this._blameStatusBarItem.command = Commands.DiffLineWithWorking;\n                this._blameStatusBarItem.tooltip = 'Compare Line Revision with Working';\n                break;\n            case StatusBarCommand.ToggleCodeLens:\n                this._blameStatusBarItem.tooltip = 'Toggle Git CodeLens';\n                break;\n            case StatusBarCommand.ShowQuickCommitDetails:\n                this._blameStatusBarItem.tooltip = 'Show Commit Details';\n                break;\n            case StatusBarCommand.ShowQuickCommitFileDetails:\n                this._blameStatusBarItem.tooltip = 'Show Line Commit Details';\n                break;\n            case StatusBarCommand.ShowQuickFileHistory:\n                this._blameStatusBarItem.tooltip = 'Show File History';\n                break;\n            case StatusBarCommand.ShowQuickCurrentBranchHistory:\n                this._blameStatusBarItem.tooltip = 'Show Branch History';\n                break;\n        }\n\n        this._blameStatusBarItem.show();\n    }\n}\n","'use strict';\nimport { Disposable, Event, EventEmitter, TextEditor, TextEditorSelectionChangeEvent, window } from 'vscode';\nimport { isTextEditor } from '../constants';\nimport { Functions, IDeferrable } from '../system';\n\nexport interface LinesChangeEvent {\n    readonly editor: TextEditor | undefined;\n    readonly lines: number[] | undefined;\n\n    readonly reason: 'editor' | 'selection';\n    readonly pending?: boolean;\n}\n\nexport class LineTracker<T> implements Disposable {\n    private _onDidChangeActiveLines = new EventEmitter<LinesChangeEvent>();\n    get onDidChangeActiveLines(): Event<LinesChangeEvent> {\n        return this._onDidChangeActiveLines.event;\n    }\n\n    protected _disposable: Disposable | undefined;\n    private _editor: TextEditor | undefined;\n\n    private readonly _state: Map<number, T | undefined> = new Map();\n\n    dispose() {\n        this.stop();\n    }\n\n    private onActiveTextEditorChanged(editor: TextEditor | undefined) {\n        if (this._editor === editor) return;\n        if (editor !== undefined && !isTextEditor(editor)) return;\n\n        this.reset();\n        this._editor = editor;\n        this._lines = editor !== undefined ? editor.selections.map(s => s.active.line) : undefined;\n\n        this.trigger('editor');\n    }\n\n    private onTextEditorSelectionChanged(e: TextEditorSelectionChangeEvent) {\n        // If this isn't for our cached editor and its not a real editor -- kick out\n        if (this._editor !== e.textEditor && !isTextEditor(e.textEditor)) return;\n\n        const reason = this._editor === e.textEditor ? 'selection' : 'editor';\n\n        const lines = e.selections.map(s => s.active.line);\n        if (this._editor === e.textEditor && this.includesAll(lines)) return;\n\n        this.reset();\n        this._editor = e.textEditor;\n        this._lines = lines;\n        this.trigger(reason);\n    }\n\n    getState(line: number): T | undefined {\n        return this._state.get(line);\n    }\n\n    setState(line: number, state: T | undefined) {\n        this._state.set(line, state);\n    }\n\n    private _lines: number[] | undefined;\n    get lines(): number[] | undefined {\n        return this._lines;\n    }\n\n    includes(line: number): boolean {\n        return this._lines !== undefined && this._lines.includes(line);\n    }\n\n    includesAll(lines: number[] | undefined): boolean {\n        return LineTracker.includesAll(lines, this._lines);\n    }\n\n    refresh() {\n        this.trigger('editor');\n    }\n\n    reset() {\n        this._state.clear();\n    }\n\n    start(subscriber?: any, subscription?: Disposable): void {\n        if (this._disposable !== undefined) return;\n\n        this._disposable = Disposable.from(\n            window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveTextEditorChanged, 0), this),\n            window.onDidChangeTextEditorSelection(this.onTextEditorSelectionChanged, this)\n        );\n\n        setImmediate(() => this.onActiveTextEditorChanged(window.activeTextEditor));\n    }\n\n    stop(subscriber?: any) {\n        if (this._disposable === undefined) return;\n\n        if (this._linesChangedDebounced !== undefined) {\n            this._linesChangedDebounced.cancel();\n        }\n\n        this._disposable.dispose();\n        this._disposable = undefined;\n    }\n\n    protected async fireLinesChanged(e: LinesChangeEvent) {\n        this._onDidChangeActiveLines.fire(e);\n    }\n\n    protected trigger(reason: 'editor' | 'selection') {\n        this.onLinesChanged({ editor: this._editor, lines: this._lines, reason: reason });\n    }\n\n    private _linesChangedDebounced: (((e: LinesChangeEvent) => void) & IDeferrable) | undefined;\n\n    private onLinesChanged(e: LinesChangeEvent) {\n        if (e.lines === undefined) {\n            setImmediate(() => {\n                if (window.activeTextEditor !== e.editor) return;\n\n                if (this._linesChangedDebounced !== undefined) {\n                    this._linesChangedDebounced.cancel();\n                }\n\n                void this.fireLinesChanged(e);\n            });\n\n            return;\n        }\n\n        if (this._linesChangedDebounced === undefined) {\n            this._linesChangedDebounced = Functions.debounce(\n                (e: LinesChangeEvent) => {\n                    if (window.activeTextEditor !== e.editor) return;\n                    // Make sure we are still on the same lines\n                    if (!LineTracker.includesAll(e.lines, e.editor && e.editor.selections.map(s => s.active.line))) {\n                        return;\n                    }\n\n                    void this.fireLinesChanged(e);\n                },\n                250,\n                { track: true }\n            );\n        }\n\n        // If we have no pending moves, then fire an immediate pending event, and defer the real event\n        if (!this._linesChangedDebounced.pending!()) {\n            void this.fireLinesChanged({ ...e, pending: true });\n        }\n\n        this._linesChangedDebounced(e);\n    }\n\n    static includesAll(lines1: number[] | undefined, lines2: number[] | undefined): boolean {\n        if (lines1 === undefined && lines2 === undefined) return true;\n        if (lines1 === undefined || lines2 === undefined) return false;\n\n        return lines2.length === lines1.length && lines2.every((v, i) => v === lines1[i]);\n    }\n}\n","'use strict';\nimport { Disposable, TextEditor } from 'vscode';\nimport { Container } from '../container';\nimport { GitBlameCommit, GitLogCommit } from '../git/gitService';\nimport {\n    DocumentBlameStateChangeEvent,\n    DocumentDirtyIdleTriggerEvent,\n    DocumentDirtyStateChangeEvent,\n    GitDocumentState\n} from './gitDocumentTracker';\nimport { LinesChangeEvent, LineTracker } from './lineTracker';\n\nexport * from './lineTracker';\n\nexport class GitLineState {\n    constructor(\n        public readonly commit: GitBlameCommit | undefined,\n        public logCommit?: GitLogCommit\n    ) {}\n}\n\nexport class GitLineTracker extends LineTracker<GitLineState> {\n    private _count = 0;\n    private _subscriptions: Map<any, Disposable> = new Map();\n\n    protected async fireLinesChanged(e: LinesChangeEvent) {\n        this.reset();\n\n        let updated = false;\n        if (!this._suspended && !e.pending && e.lines !== undefined && e.editor !== undefined) {\n            updated = await this.updateState(e.lines, e.editor);\n        }\n\n        return super.fireLinesChanged(updated ? e : { ...e, lines: undefined });\n    }\n\n    private onBlameStateChanged(e: DocumentBlameStateChangeEvent<GitDocumentState>) {\n        this.trigger('editor');\n    }\n\n    private onDirtyIdleTriggered(e: DocumentDirtyIdleTriggerEvent<GitDocumentState>) {\n        const maxLines = Container.config.advanced.blame.sizeThresholdAfterEdit;\n        if (maxLines > 0 && e.document.lineCount > maxLines) return;\n\n        this.resume();\n    }\n\n    private async onDirtyStateChanged(e: DocumentDirtyStateChangeEvent<GitDocumentState>) {\n        if (e.dirty) {\n            this.suspend();\n        }\n        else {\n            this.resume({ force: true });\n        }\n    }\n\n    private _suspended = false;\n\n    private resume(options: { force?: boolean } = {}) {\n        if (!options.force && !this._suspended) return;\n\n        this._suspended = false;\n        this.trigger('editor');\n    }\n\n    private suspend(options: { force?: boolean } = {}) {\n        if (!options.force && this._suspended) return;\n\n        this._suspended = true;\n        this.trigger('editor');\n    }\n\n    isSubscribed(subscriber: any) {\n        return this._subscriptions.has(subscriber);\n    }\n\n    start(subscriber: any, subscription: Disposable): Disposable {\n        const disposable = {\n            dispose: () => this.stop(subscriber)\n        };\n\n        if (this.isSubscribed(subscriber)) return disposable;\n\n        this._subscriptions.set(subscriber, subscription);\n\n        this._count++;\n        if (this._count === 1) {\n            super.start();\n\n            this._disposable = Disposable.from(\n                this._disposable!,\n                Container.tracker.onDidChangeBlameState(this.onBlameStateChanged, this),\n                Container.tracker.onDidChangeDirtyState(this.onDirtyStateChanged, this),\n                Container.tracker.onDidTriggerDirtyIdle(this.onDirtyIdleTriggered, this)\n            );\n        }\n\n        return disposable;\n    }\n\n    stop(subscriber: any) {\n        const subscription = this._subscriptions.get(subscriber);\n        if (subscription === undefined) return;\n\n        this._subscriptions.delete(subscriber);\n        subscription.dispose();\n\n        if (this._disposable === undefined) {\n            this._count = 0;\n            return;\n        }\n\n        this._count--;\n        if (this._count === 0) {\n            super.stop();\n        }\n    }\n\n    private async updateState(lines: number[], editor: TextEditor): Promise<boolean> {\n        const trackedDocument = await Container.tracker.getOrAdd(editor.document);\n        if (!trackedDocument.isBlameable || !this.includesAll(lines)) return false;\n\n        if (lines.length === 1) {\n            const blameLine = editor.document.isDirty\n                ? await Container.git.getBlameForLineContents(trackedDocument.uri, lines[0], editor.document.getText())\n                : await Container.git.getBlameForLine(trackedDocument.uri, lines[0]);\n            if (blameLine === undefined) return false;\n\n            this.setState(blameLine.line.line, new GitLineState(blameLine.commit));\n        }\n        else {\n            const blame = editor.document.isDirty\n                ? await Container.git.getBlameForFileContents(trackedDocument.uri, editor.document.getText())\n                : await Container.git.getBlameForFile(trackedDocument.uri);\n            if (blame === undefined) return false;\n\n            for (const line of lines) {\n                const commitLine = blame.lines[line];\n                this.setState(line, new GitLineState(blame.commits.get(commitLine.sha)!));\n            }\n        }\n\n        if (!trackedDocument.isBlameable || !this.includesAll(lines)) return false;\n\n        if (editor.document.isDirty) {\n            trackedDocument.setForceDirtyStateChangeOnNextDocumentChange();\n        }\n\n        return true;\n    }\n}\n","'use strict';\nimport { Command, Disposable, Event, TreeItem, TreeItemCollapsibleState, TreeViewVisibilityChangeEvent } from 'vscode';\nimport { GitUri } from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, gate, logName } from '../../system';\nimport { RefreshReason, TreeViewNodeStateChangeEvent, View } from '../viewBase';\n\nexport enum ResourceType {\n    ActiveFileHistory = 'gitlens:history:active:file',\n    ActiveLineHistory = 'gitlens:history:active:line',\n    Branch = 'gitlens:branch',\n    Branches = 'gitlens:branches',\n    BranchesWithRemotes = 'gitlens:branches:remotes',\n    BranchStatusAheadOfUpstream = 'gitlens:branch-status:upstream:ahead',\n    BranchStatusBehindUpstream = 'gitlens:branch-status:upstream:behind',\n    BranchWithTracking = 'gitlens:branch:tracking',\n    CurrentBranch = 'gitlens:branch:current',\n    CurrentBranchWithTracking = 'gitlens:branch:current:tracking',\n    RemoteBranch = 'gitlens:branch:remote',\n    Commit = 'gitlens:commit',\n    CommitOnCurrentBranch = 'gitlens:commit:current',\n    CommitFile = 'gitlens:file:commit',\n    Commits = 'gitlens:commits',\n    Compare = 'gitlens:compare',\n    ComparePicker = 'gitlens:compare:picker',\n    ComparePickerWithRef = 'gitlens:compare:picker:ref',\n    CompareResults = 'gitlens:compare:results',\n    FileHistory = 'gitlens:history:file',\n    FileStaged = 'gitlens:file:staged',\n    FileStagedAndUnstaged = 'gitlens:file:staged:unstaged',\n    FileUnstaged = 'gitlens:file:unstaged',\n    Folder = 'gitlens:folder',\n    LineHistory = 'gitlens:history:line',\n    Message = 'gitlens:message',\n    Pager = 'gitlens:pager',\n    Remote = 'gitlens:remote',\n    Remotes = 'gitlens:remotes',\n    Repositories = 'gitlens:repositories',\n    Repository = 'gitlens:repository',\n    ResultsCommits = 'gitlens:results:commits',\n    ResultsFile = 'gitlens:file:results',\n    ResultsFiles = 'gitlens:results:files',\n    Search = 'gitlens:search',\n    SearchResults = 'gitlens:search:results',\n    Stash = 'gitlens:stash',\n    StashFile = 'gitlens:file:stash',\n    Stashes = 'gitlens:stashes',\n    StatusFileCommits = 'gitlens:status:file:commits',\n    StatusFiles = 'gitlens:status:files',\n    StatusAheadOfUpstream = 'gitlens:status:upstream:ahead',\n    StatusBehindUpstream = 'gitlens:status:upstream:behind',\n    Tag = 'gitlens:tag',\n    Tags = 'gitlens:tags'\n}\n\nexport interface NamedRef {\n    label?: string;\n    ref: string;\n}\n\nexport const unknownGitUri = new GitUri();\n\nexport interface ViewNode {\n    readonly id?: string;\n}\n\n@logName<ViewNode>((c, name) => `${name}${c.id ? `(${c.id})` : ''}`)\nexport abstract class ViewNode<TView extends View = View> {\n    constructor(\n        uri: GitUri,\n        public readonly view: TView,\n        protected readonly parent?: ViewNode\n    ) {\n        this._uri = uri;\n    }\n\n    toString() {\n        return `${Logger.toLoggableName(this)}${this.id != null ? `(${this.id})` : ''}`;\n    }\n\n    protected _uri: GitUri;\n    get uri() {\n        return this._uri;\n    }\n\n    abstract getChildren(): ViewNode[] | Promise<ViewNode[]>;\n\n    getParent(): ViewNode | undefined {\n        return this.parent;\n    }\n\n    abstract getTreeItem(): TreeItem | Promise<TreeItem>;\n\n    getCommand(): Command | undefined {\n        return undefined;\n    }\n\n    @gate()\n    @debug()\n    refresh(reason?: RefreshReason): void | boolean | Promise<void> | Promise<boolean> {}\n\n    @gate()\n    @debug()\n    triggerChange(): Promise<void> {\n        return this.view.refreshNode(this);\n    }\n}\n\nexport abstract class ViewRefNode<TView extends View = View> extends ViewNode<TView> {\n    abstract get ref(): string;\n\n    get repoPath(): string {\n        return this.uri.repoPath!;\n    }\n}\n\nexport interface PageableViewNode {\n    readonly supportsPaging: boolean;\n    maxCount: number | undefined;\n}\n\nexport function isPageable(\n    node: ViewNode\n): node is ViewNode & { supportsPaging: boolean; maxCount: number | undefined } {\n    return Boolean((node as any).supportsPaging);\n}\n\nexport function supportsAutoRefresh(\n    view: View\n): view is View & { autoRefresh: boolean; onDidChangeAutoRefresh: Event<void> } {\n    return (view as any).onDidChangeAutoRefresh !== undefined;\n}\n\nexport abstract class SubscribeableViewNode<TView extends View = View> extends ViewNode<TView> {\n    protected _disposable: Disposable;\n    protected _subscription: Promise<Disposable | undefined> | undefined;\n\n    constructor(uri: GitUri, view: TView, parent?: ViewNode) {\n        super(uri, view, parent);\n\n        const disposables = [\n            this.view.onDidChangeVisibility(this.onVisibilityChanged, this),\n            this.view.onDidChangeNodeState(this.onNodeStateChanged, this)\n        ];\n\n        if (supportsAutoRefresh(this.view)) {\n            disposables.push(this.view.onDidChangeAutoRefresh(this.onAutoRefreshChanged, this));\n        }\n\n        this._disposable = Disposable.from(...disposables);\n    }\n\n    @debug()\n    dispose() {\n        void this.unsubscribe();\n\n        if (this._disposable !== undefined) {\n            this._disposable.dispose();\n        }\n    }\n\n    private _canSubscribe: boolean = true;\n    protected get canSubscribe(): boolean {\n        return this._canSubscribe;\n    }\n    protected set canSubscribe(value: boolean) {\n        if (this._canSubscribe === value) return;\n\n        this._canSubscribe = value;\n\n        void this.ensureSubscription();\n        if (value) {\n            void this.triggerChange();\n        }\n    }\n\n    protected abstract async subscribe(): Promise<Disposable | undefined>;\n\n    @debug()\n    protected async unsubscribe(): Promise<void> {\n        if (this._subscription !== undefined) {\n            const subscriptionPromise = this._subscription;\n            this._subscription = undefined;\n\n            const subscription = await subscriptionPromise;\n            if (subscription !== undefined) {\n                subscription.dispose();\n            }\n        }\n    }\n\n    @debug()\n    protected onAutoRefreshChanged() {\n        this.onVisibilityChanged({ visible: this.view.visible });\n    }\n\n    protected onParentStateChanged(state: TreeItemCollapsibleState) {}\n    protected onStateChanged(state: TreeItemCollapsibleState) {}\n\n    protected _state: TreeItemCollapsibleState | undefined;\n    protected onNodeStateChanged(e: TreeViewNodeStateChangeEvent<ViewNode>) {\n        if (e.element === this) {\n            this._state = e.state;\n            this.onStateChanged(e.state);\n        }\n        else if (e.element === this.parent) {\n            this.onParentStateChanged(e.state);\n        }\n    }\n\n    @debug()\n    protected onVisibilityChanged(e: TreeViewVisibilityChangeEvent) {\n        void this.ensureSubscription();\n\n        if (e.visible) {\n            void this.triggerChange();\n        }\n    }\n\n    @debug()\n    async ensureSubscription() {\n        // We only need to subscribe if we are visible and if auto-refresh enabled (when supported)\n        if (!this.canSubscribe || !this.view.visible || (supportsAutoRefresh(this.view) && !this.view.autoRefresh)) {\n            await this.unsubscribe();\n\n            return;\n        }\n\n        // If we already have a subscription, just kick out\n        if (this._subscription !== undefined) return;\n\n        this._subscription = this.subscribe();\n        await this._subscription;\n    }\n}\n\nexport function canDismissNode(view: View): view is View & { dismissNode(node: ViewNode): void } {\n    return typeof (view as any).dismissNode === 'function';\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, Selection, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithPreviousCommandArgs } from '../../commands';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport {\n    CommitFormatter,\n    GitFile,\n    GitLogCommit,\n    GitUri,\n    ICommitFormatOptions,\n    IStatusFormatOptions,\n    StatusFileFormatter\n} from '../../git/gitService';\nimport { View } from '../viewBase';\nimport { ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport enum CommitFileNodeDisplayAs {\n    CommitLabel = 1 << 0,\n    FileLabel = 1 << 1,\n\n    CommitIcon = 1 << 2,\n    StatusIcon = 1 << 3,\n    Gravatar = 1 << 4,\n\n    File = FileLabel | StatusIcon\n}\n\nexport class CommitFileNode extends ViewRefNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly file: GitFile,\n        public commit: GitLogCommit,\n        private readonly _displayAs: CommitFileNodeDisplayAs,\n        private readonly _selection?: Selection\n    ) {\n        super(GitUri.fromFile(file, commit.repoPath, commit.sha), view, parent);\n    }\n\n    get priority(): number {\n        return 0;\n    }\n\n    get ref(): string {\n        return this.commit.sha;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        return [];\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        if (!this.commit.isFile) {\n            // See if we can get the commit directly from the multi-file commit\n            const commit = this.commit.toFileCommit(this.file);\n            if (commit === undefined) {\n                const log = await Container.git.getLogForFile(this.repoPath, this.file.fileName, {\n                    maxCount: 2,\n                    ref: this.commit.sha\n                });\n                if (log !== undefined) {\n                    this.commit = log.commits.get(this.commit.sha) || this.commit;\n                }\n            }\n            else {\n                this.commit = commit;\n            }\n        }\n\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.None);\n        item.contextValue = this.resourceType;\n        item.description = this.description;\n        item.tooltip = this.tooltip;\n\n        if ((this._displayAs & CommitFileNodeDisplayAs.CommitIcon) === CommitFileNodeDisplayAs.CommitIcon) {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath(paths.join('images', 'dark', 'icon-commit.svg')),\n                light: Container.context.asAbsolutePath(paths.join('images', 'light', 'icon-commit.svg'))\n            };\n        }\n        else if ((this._displayAs & CommitFileNodeDisplayAs.StatusIcon) === CommitFileNodeDisplayAs.StatusIcon) {\n            const icon = GitFile.getStatusIcon(this.file.status);\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath(paths.join('images', 'dark', icon)),\n                light: Container.context.asAbsolutePath(paths.join('images', 'light', icon))\n            };\n        }\n        else if ((this._displayAs & CommitFileNodeDisplayAs.Gravatar) === CommitFileNodeDisplayAs.Gravatar) {\n            item.iconPath = this.commit.getGravatarUri(Container.config.defaultGravatarsStyle);\n        }\n\n        item.command = this.getCommand();\n\n        // Only cache the label/description/tooltip for a single refresh\n        this._label = undefined;\n        this._description = undefined;\n        this._tooltip = undefined;\n\n        return item;\n    }\n\n    private _description: string | undefined;\n    get description() {\n        if (this._description === undefined) {\n            this._description =\n                this._displayAs & CommitFileNodeDisplayAs.CommitLabel\n                    ? CommitFormatter.fromTemplate(this.getCommitDescriptionTemplate(), this.commit, {\n                          truncateMessageAtNewLine: true,\n                          dateFormat: Container.config.defaultDateFormat\n                      } as ICommitFormatOptions)\n                    : StatusFileFormatter.fromTemplate(this.getCommitFileDescriptionTemplate(), this.file, {\n                          relativePath: this.relativePath\n                      } as IStatusFormatOptions);\n        }\n        return this._description;\n    }\n\n    private _folderName: string | undefined;\n    get folderName() {\n        if (this._folderName === undefined) {\n            this._folderName = paths.dirname(this.uri.getRelativePath());\n        }\n        return this._folderName;\n    }\n\n    private _label: string | undefined;\n    get label() {\n        if (this._label === undefined) {\n            this._label =\n                this._displayAs & CommitFileNodeDisplayAs.CommitLabel\n                    ? CommitFormatter.fromTemplate(this.getCommitTemplate(), this.commit, {\n                          truncateMessageAtNewLine: true,\n                          dateFormat: Container.config.defaultDateFormat\n                      } as ICommitFormatOptions)\n                    : StatusFileFormatter.fromTemplate(this.getCommitFileTemplate(), this.file, {\n                          relativePath: this.relativePath\n                      } as IStatusFormatOptions);\n        }\n        return this._label;\n    }\n\n    private _relativePath: string | undefined;\n    get relativePath(): string | undefined {\n        return this._relativePath;\n    }\n    set relativePath(value: string | undefined) {\n        this._relativePath = value;\n        this._label = undefined;\n        this._tooltip = undefined;\n    }\n\n    protected get resourceType(): ResourceType {\n        if (!this.commit.isUncommitted) return ResourceType.CommitFile;\n\n        return this.commit.isStagedUncommitted ? ResourceType.FileStaged : ResourceType.FileUnstaged;\n    }\n\n    private _tooltip: string | undefined;\n    get tooltip() {\n        if (this._tooltip === undefined) {\n            if (this._displayAs & CommitFileNodeDisplayAs.CommitLabel) {\n                const status = StatusFileFormatter.fromTemplate('${status}', this.file);\n                this._tooltip = CommitFormatter.fromTemplate(\n                    this.commit.isUncommitted\n                        ? `\\${author} ${GlyphChars.Dash} \\${id}\\n${status}\\n\\${ago} (\\${date})`\n                        : `\\${author} ${GlyphChars.Dash} \\${id}\\n${status}\\n\\${ago} (\\${date})\\n\\n\\${message}`,\n                    this.commit,\n                    {\n                        dateFormat: Container.config.defaultDateFormat\n                    } as ICommitFormatOptions\n                );\n            }\n            else {\n                this._tooltip = StatusFileFormatter.fromTemplate('${file}\\n${directory}/\\n\\n${status}', this.file);\n            }\n        }\n        return this._tooltip;\n    }\n\n    protected getCommitTemplate() {\n        return this.view.config.commitFormat;\n    }\n\n    protected getCommitDescriptionTemplate() {\n        return this.view.config.commitDescriptionFormat;\n    }\n\n    protected getCommitFileTemplate() {\n        return this.view.config.commitFileFormat;\n    }\n\n    protected getCommitFileDescriptionTemplate() {\n        return this.view.config.commitFileDescriptionFormat;\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Compare File with Previous Revision',\n            command: Commands.DiffWithPrevious,\n            arguments: [\n                GitUri.fromFile(this.file, this.commit.repoPath),\n                {\n                    commit: this.commit,\n                    line: this._selection !== undefined ? this._selection.active.line : 0,\n                    showOptions: {\n                        preserveFocus: true,\n                        preview: true\n                    }\n                } as DiffWithPreviousCommandArgs\n            ]\n        };\n    }\n}\n","'use strict';\nimport { ThemeIcon, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewFilesLayout, ViewsFilesConfig } from '../../configuration';\nimport { GitUri } from '../../git/gitService';\nimport { Arrays, Objects } from '../../system';\nimport { View } from '../viewBase';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport interface FileNode extends ViewNode {\n    folderName: string;\n    label?: string;\n    priority: number;\n    relativePath?: string;\n    root?: Arrays.IHierarchicalItem<FileNode>;\n}\n\nexport class FolderNode extends ViewNode {\n    readonly priority: number = 1;\n\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        public readonly folderName: string,\n        public readonly root: Arrays.IHierarchicalItem<FileNode>,\n        public readonly relativePath?: string\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    async getChildren(): Promise<(FolderNode | FileNode)[]> {\n        if (this.root.descendants === undefined || this.root.children === undefined) return [];\n\n        let children: (FolderNode | FileNode)[];\n\n        const nesting = FolderNode.getFileNesting(\n            this.view.config.files,\n            this.root.descendants,\n            this.relativePath === undefined\n        );\n        if (nesting !== ViewFilesLayout.List) {\n            children = [];\n            for (const folder of Objects.values(this.root.children)) {\n                if (folder.value === undefined) {\n                    children.push(\n                        new FolderNode(this.view, this, this.repoPath, folder.name, folder, folder.relativePath)\n                    );\n                    continue;\n                }\n\n                folder.value.relativePath = this.root.relativePath;\n                children.push(folder.value);\n            }\n        }\n        else {\n            this.root.descendants.forEach(n => (n.relativePath = this.root.relativePath));\n            children = this.root.descendants;\n        }\n\n        children.sort((a, b) => {\n            return (\n                (a instanceof FolderNode ? -1 : 1) - (b instanceof FolderNode ? -1 : 1) ||\n                a.priority - b.priority ||\n                a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        });\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        // TODO: Change this to expanded once https://github.com/Microsoft/vscode/issues/30918 is fixed\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.Collapsed);\n        item.contextValue = ResourceType.Folder;\n        item.iconPath = ThemeIcon.Folder;\n        item.tooltip = this.label;\n        return item;\n    }\n\n    get label(): string {\n        return this.folderName;\n    }\n\n    static getFileNesting<T extends FileNode>(\n        config: ViewsFilesConfig,\n        children: T[],\n        isRoot: boolean\n    ): ViewFilesLayout {\n        const nesting = config.layout || ViewFilesLayout.Auto;\n        if (nesting === ViewFilesLayout.Auto) {\n            if (isRoot || config.compact) {\n                const nestingThreshold = config.threshold || 5;\n                if (children.length <= nestingThreshold) return ViewFilesLayout.List;\n            }\n            return ViewFilesLayout.Tree;\n        }\n        return nesting;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithPreviousCommandArgs } from '../../commands';\nimport { ViewFilesLayout } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { CommitFormatter, GitBranch, GitLogCommit, ICommitFormatOptions } from '../../git/gitService';\nimport { Arrays, Iterables, Strings } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { FileNode, FolderNode } from './folderNode';\nimport { ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class CommitNode extends ViewRefNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly commit: GitLogCommit,\n        public readonly branch?: GitBranch,\n        private readonly getBranchAndTagTips?: (sha: string) => string | undefined\n    ) {\n        super(commit.toGitUri(), view, parent);\n    }\n\n    get ref(): string {\n        return this.commit.sha;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const commit = this.commit;\n        let children: FileNode[] = [\n            ...Iterables.map(\n                commit.files,\n                s => new CommitFileNode(this.view, this, s, commit.toFileCommit(s), CommitFileNodeDisplayAs.File)\n            )\n        ];\n\n        if (this.view.config.files.layout !== ViewFilesLayout.List) {\n            const hierarchy = Arrays.makeHierarchical(\n                children,\n                n => n.uri.getRelativePath().split('/'),\n                (...parts: string[]) => Strings.normalizePath(paths.join(...parts)),\n                this.view.config.files.compact\n            );\n\n            const root = new FolderNode(this.view, this, this.repoPath, '', hierarchy);\n            children = (await root.getChildren()) as FileNode[];\n        }\n        else {\n            children.sort((a, b) =>\n                a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        }\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        let label = CommitFormatter.fromTemplate(this.view.config.commitFormat, this.commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: Container.config.defaultDateFormat\n        } as ICommitFormatOptions);\n\n        const branchAndTagTips = this.getBranchAndTagTips && this.getBranchAndTagTips(this.commit.sha);\n        if (branchAndTagTips !== undefined) {\n            label = `${GlyphChars.AngleBracketLeftHeavy}${GlyphChars.SpaceThin}${branchAndTagTips}${\n                GlyphChars.SpaceThin\n            }${GlyphChars.AngleBracketRightHeavy}${GlyphChars.ArrowHeadRight}${GlyphChars.Space} ${label}`;\n        }\n\n        const item = new TreeItem(label, TreeItemCollapsibleState.Collapsed);\n        item.contextValue =\n            this.branch === undefined || this.branch.current ? ResourceType.CommitOnCurrentBranch : ResourceType.Commit;\n        item.description = CommitFormatter.fromTemplate(this.view.config.commitDescriptionFormat, this.commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: Container.config.defaultDateFormat\n        } as ICommitFormatOptions);\n\n        if (this.view.config.avatars) {\n            item.iconPath = this.commit.getGravatarUri(Container.config.defaultGravatarsStyle);\n        }\n        else {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath('images/dark/icon-commit.svg'),\n                light: Container.context.asAbsolutePath('images/light/icon-commit.svg')\n            };\n        }\n\n        item.tooltip = CommitFormatter.fromTemplate(\n            this.commit.isUncommitted\n                ? `\\${author} ${GlyphChars.Dash} \\${id}\\n\\${ago} (\\${date})`\n                : `\\${author} ${GlyphChars.Dash} \\${id}${\n                      branchAndTagTips !== undefined ? ` (${branchAndTagTips})` : ''\n                  }\\n\\${ago} (\\${date})\\n\\n\\${message}`,\n            this.commit,\n            {\n                dateFormat: Container.config.defaultDateFormat\n            } as ICommitFormatOptions\n        );\n\n        if (!this.commit.isUncommitted) {\n            item.tooltip += this.commit.getFormattedDiffStatus({\n                expand: true,\n                prefix: '\\n\\n',\n                separator: '\\n'\n            });\n        }\n\n        return item;\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Compare File with Previous Revision',\n            command: Commands.DiffWithPrevious,\n            arguments: [\n                this.uri,\n                {\n                    commit: this.commit,\n                    line: 0,\n                    showOptions: {\n                        preserveFocus: true,\n                        preview: true\n                    }\n                } as DiffWithPreviousCommandArgs\n            ]\n        };\n    }\n}\n","import { Command, ThemeIcon, TreeItem, TreeItemCollapsibleState, Uri } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { View } from '../viewBase';\nimport { RefreshNodeCommandArgs } from '../viewCommands';\nimport { ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\nexport class MessageNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        private readonly _message: string,\n        private readonly _description?: string,\n        private readonly _tooltip?: string,\n        private readonly _iconPath?:\n            | string\n            | Uri\n            | {\n                  light: string | Uri;\n                  dark: string | Uri;\n              }\n            | ThemeIcon\n    ) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] | Promise<ViewNode[]> {\n        return [];\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = new TreeItem(this._message, TreeItemCollapsibleState.None);\n        item.contextValue = ResourceType.Message;\n        item.description = this._description;\n        item.tooltip = this._tooltip;\n        item.iconPath = this._iconPath;\n        return item;\n    }\n}\n\nexport class CommandMessageNode extends MessageNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        private readonly _command: Command,\n        message: string,\n        description?: string,\n        tooltip?: string,\n        iconPath?:\n            | string\n            | Uri\n            | {\n                  light: string | Uri;\n                  dark: string | Uri;\n              }\n            | ThemeIcon\n    ) {\n        super(view, parent, message, description, tooltip, iconPath);\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = super.getTreeItem();\n        if (item instanceof TreeItem) {\n            item.command = this._command;\n            return item;\n        }\n\n        return item.then(i => {\n            i.command = this._command;\n            return i;\n        });\n    }\n}\n\nexport class UpdateableMessageNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly id: string,\n        private _message: string,\n        private _tooltip?: string,\n        private _iconPath?:\n            | string\n            | Uri\n            | {\n                  light: string | Uri;\n                  dark: string | Uri;\n              }\n            | ThemeIcon\n    ) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] | Promise<ViewNode[]> {\n        return [];\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = new TreeItem(this._message, TreeItemCollapsibleState.None);\n        item.id = this.id;\n        item.contextValue = ResourceType.Message;\n        item.tooltip = this._tooltip;\n        item.iconPath = this._iconPath;\n        return item;\n    }\n\n    update(\n        changes: {\n            message?: string;\n            tooltip?: string | null;\n            iconPath?:\n                | string\n                | null\n                | Uri\n                | {\n                      light: string | Uri;\n                      dark: string | Uri;\n                  }\n                | ThemeIcon;\n        },\n        view: View\n    ) {\n        if (changes.message !== undefined) {\n            this._message = changes.message;\n        }\n\n        if (changes.tooltip !== undefined) {\n            this._tooltip = changes.tooltip === null ? undefined : changes.tooltip;\n        }\n\n        if (changes.iconPath !== undefined) {\n            this._iconPath = changes.iconPath === null ? undefined : changes.iconPath;\n        }\n\n        view.triggerNodeChange(this);\n    }\n}\n\nexport abstract class PagerNode extends ViewNode {\n    protected _args: RefreshNodeCommandArgs = {};\n\n    constructor(\n        view: View,\n        parent: ViewNode,\n        protected readonly message: string\n    ) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] | Promise<ViewNode[]> {\n        return [];\n    }\n\n    getTreeItem(): TreeItem | Promise<TreeItem> {\n        const item = new TreeItem(this.message, TreeItemCollapsibleState.None);\n        item.contextValue = ResourceType.Pager;\n        item.command = this.getCommand();\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-unfold.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-unfold.svg')\n        };\n        return item;\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Refresh',\n            command: 'gitlens.views.refreshNode',\n            arguments: [this.parent, this._args]\n        } as Command;\n    }\n}\n\nexport class ShowMoreNode extends PagerNode {\n    constructor(view: View, parent: ViewNode, type: string, maxCount: number = Container.config.advanced.maxListItems) {\n        super(\n            view,\n            parent,\n            maxCount === 0\n                ? `Show All ${type} ${GlyphChars.Space}${GlyphChars.Dash}${GlyphChars.Space} this may take a while`\n                : `Show More ${type}`\n        );\n        this._args.maxCount = maxCount;\n    }\n}\n","'use strict';\nimport { Container } from '../../container';\nimport { GitLogCommit } from '../../git/gitService';\nimport { Arrays } from '../../system';\nimport { MessageNode } from './common';\nimport { ViewNode } from './viewNode';\n\nexport async function getBranchesAndTagTipsFn(repoPath: string | undefined, currentName?: string) {\n    const [branches, tags] = await Promise.all([\n        Container.git.getBranches(repoPath),\n        Container.git.getTags(repoPath, { includeRefs: true })\n    ]);\n\n    const branchesAndTagsBySha = Arrays.groupByFilterMap(\n        (branches as { name: string; sha: string }[]).concat(tags as { name: string; sha: string }[]),\n        bt => bt.sha!,\n        bt => (bt.name === currentName ? undefined : bt.name)\n    );\n\n    return (sha: string) => {\n        const branchesAndTags = branchesAndTagsBySha.get(sha);\n        if (branchesAndTags === undefined || branchesAndTags.length === 0) return undefined;\n        return branchesAndTags.join(', ');\n    };\n}\n\nconst markers: [number, string][] = [\n    [0, 'Less than a week ago'],\n    [7, 'Over a week ago'],\n    [30, 'Over a month ago'],\n    [90, 'Over 3 months ago']\n];\n\nexport function* insertDateMarkers<T extends ViewNode & { commit: GitLogCommit }>(\n    iterable: Iterable<T>,\n    parent: ViewNode,\n    skip?: number\n): Iterable<ViewNode> {\n    let index = skip || 0;\n    let time = undefined;\n    const now = Date.now();\n\n    let first = true;\n\n    for (const node of iterable) {\n        if (index < markers.length) {\n            let [daysAgo, marker] = markers[index];\n            if (time === undefined) {\n                const date = new Date(now);\n                time = date.setDate(date.getDate() - daysAgo);\n            }\n\n            const date = new Date(node.commit.committedDate.setUTCHours(0, 0, 0, 0)).getTime();\n            if (date <= time) {\n                while (index < markers.length - 1) {\n                    [daysAgo] = markers[index + 1];\n                    const nextDate = new Date(now);\n                    const nextTime = nextDate.setDate(nextDate.getDate() - daysAgo);\n\n                    if (date > nextTime) break;\n\n                    index++;\n                    time = undefined;\n                    [, marker] = markers[index];\n                }\n\n                // Don't show the last marker as the first entry -- since it could be wildly far off\n                if (!first || index < markers.length - 1) {\n                    yield new MessageNode(parent.view, parent, marker);\n                }\n\n                index++;\n                time = undefined;\n            }\n        }\n\n        first = false;\n        yield node;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitTrackingState, GitUri } from '../../git/gitService';\nimport { Iterables, Strings } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitNode } from './commitNode';\nimport { ShowMoreNode } from './common';\nimport { insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode } from './viewNode';\n\nexport interface BranchTrackingStatus {\n    ref: string;\n    repoPath: string;\n    state: GitTrackingState;\n    upstream?: string;\n}\n\nexport class BranchTrackingStatusNode extends ViewNode implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly status: BranchTrackingStatus,\n        public readonly direction: 'ahead' | 'behind',\n        // Specifies that the node is shown as a root under the repository node\n        private readonly _root: boolean = false\n    ) {\n        super(GitUri.fromRepoPath(status.repoPath), view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.status.repoPath}):${this._root ? 'root:' : ''}branch(${\n            this.status.ref\n        }):status:upstream:(${this.status.upstream}):${this.direction}`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const ahead = this.direction === 'ahead';\n        const range = ahead\n            ? `${this.status.upstream}..${this.status.ref}`\n            : `${this.status.ref}..${this.status.upstream}`;\n\n        const log = await Container.git.getLog(this.uri.repoPath!, {\n            maxCount: this.maxCount || this.view.config.defaultItemLimit,\n            ref: range\n        });\n        if (log === undefined) return [];\n\n        let children;\n        if (ahead) {\n            // Since the last commit when we are looking 'ahead' can have no previous (because of the range given) -- look it up\n            const commits = [...log.commits.values()];\n            const commit = commits[commits.length - 1];\n            if (commit.previousSha === undefined) {\n                const previousLog = await Container.git.getLog(this.uri.repoPath!, { maxCount: 2, ref: commit.sha });\n                if (previousLog !== undefined) {\n                    commits[commits.length - 1] = Iterables.first(previousLog.commits.values());\n                }\n            }\n\n            children = [...insertDateMarkers(Iterables.map(commits, c => new CommitNode(this.view, this, c)), this, 1)];\n        }\n        else {\n            children = [\n                ...insertDateMarkers(\n                    Iterables.map(log.commits.values(), c => new CommitNode(this.view, this, c)),\n                    this,\n                    1\n                )\n            ];\n        }\n\n        if (log.truncated) {\n            children.push(new ShowMoreNode(this.view, this, 'Commits'));\n        }\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const ahead = this.direction === 'ahead';\n        const label = ahead\n            ? `${Strings.pluralize('commit', this.status.state.ahead)} ahead`\n            : `${Strings.pluralize('commit', this.status.state.behind)} behind`;\n\n        const item = new TreeItem(label, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        if (this._root) {\n            item.contextValue = ahead ? ResourceType.StatusAheadOfUpstream : ResourceType.StatusBehindUpstream;\n        }\n        else {\n            item.contextValue = ahead\n                ? ResourceType.BranchStatusAheadOfUpstream\n                : ResourceType.BranchStatusBehindUpstream;\n        }\n        item.tooltip = `${label}${ahead ? ' of ' : ''}${this.status.upstream}`;\n\n        const iconSuffix = ahead ? 'upload' : 'download';\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-${iconSuffix}.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-${iconSuffix}.svg`)\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitBranch, GitUri } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchTrackingStatusNode } from './branchTrackingStatusNode';\nimport { CommitNode } from './commitNode';\nimport { MessageNode, ShowMoreNode } from './common';\nimport { getBranchesAndTagTipsFn, insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class BranchNode extends ViewRefNode<RepositoriesView> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    private _children: ViewNode[] | undefined;\n\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly branch: GitBranch,\n        // Specifies that the node is shown as a root under the repository node\n        private readonly _root: boolean = false\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.branch.repoPath}):${this._root ? 'root:' : ''}branch(${this.branch.name})${\n            this.branch.remote ? ':remote' : ''\n        }`;\n    }\n\n    get current(): boolean {\n        return this.branch.current;\n    }\n\n    get label(): string {\n        const branchName = this.branch.getName();\n        if (this.view.config.branches.layout === ViewBranchesLayout.List) return branchName;\n\n        return this.current || GitBranch.isDetached(branchName) ? branchName : this.branch.getBasename();\n    }\n\n    get ref(): string {\n        return this.branch.ref;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const children = [];\n            if (!this._root && this.branch.tracking) {\n                const status = {\n                    ref: this.branch.ref,\n                    repoPath: this.branch.repoPath,\n                    state: this.branch.state,\n                    upstream: this.branch.tracking\n                };\n\n                if (this.branch.state.behind) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'behind'));\n                }\n\n                if (this.branch.state.ahead) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'ahead'));\n                }\n            }\n\n            const log = await Container.git.getLog(this.uri.repoPath!, {\n                maxCount: this.maxCount || this.view.config.defaultItemLimit,\n                ref: this.ref\n            });\n            if (log === undefined) return [new MessageNode(this.view, this, 'No commits could be found.')];\n\n            const getBranchAndTagTips = await getBranchesAndTagTipsFn(this.uri.repoPath, this.branch.name);\n            children.push(\n                ...insertDateMarkers(\n                    Iterables.map(\n                        log.commits.values(),\n                        c => new CommitNode(this.view, this, c, this.branch, getBranchAndTagTips)\n                    ),\n                    this\n                )\n            );\n\n            if (log.truncated) {\n                children.push(new ShowMoreNode(this.view, this, 'Commits'));\n            }\n\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const name = this.label;\n        let tooltip = `${this.branch.getName()}${this.current ? ' (current)' : ''}`;\n        let iconSuffix = '';\n\n        let description;\n        if (!this.branch.remote && this.branch.tracking !== undefined) {\n            if (this.view.config.showTrackingBranch) {\n                description = `${this.branch.getTrackingStatus({ suffix: `${GlyphChars.Space} ` })}${\n                    GlyphChars.ArrowLeftRightLong\n                }${GlyphChars.Space} ${this.branch.tracking}`;\n            }\n            tooltip += ` is tracking ${this.branch.tracking}\\n${this.branch.getTrackingStatus({\n                empty: 'up-to-date',\n                expand: true,\n                separator: '\\n'\n            })}`;\n\n            if (this.branch.state.ahead || this.branch.state.behind) {\n                if (this.branch.state.behind) {\n                    iconSuffix = '-red';\n                }\n                if (this.branch.state.ahead) {\n                    iconSuffix = this.branch.state.behind ? '-yellow' : '-green';\n                }\n            }\n        }\n\n        const item = new TreeItem(\n            // Hide the current branch checkmark when the node is displayed as a root under the repository node\n            `${!this._root && this.current ? `${GlyphChars.Check} ${GlyphChars.Space}` : ''}${name}`,\n            TreeItemCollapsibleState.Collapsed\n        );\n        item.description = description;\n        item.id = this.id;\n        item.tooltip = tooltip;\n\n        if (this.branch.remote) {\n            item.contextValue = ResourceType.RemoteBranch;\n        }\n        else if (this.current) {\n            item.contextValue = this.branch.tracking\n                ? ResourceType.CurrentBranchWithTracking\n                : ResourceType.CurrentBranch;\n        }\n        else {\n            item.contextValue = this.branch.tracking ? ResourceType.BranchWithTracking : ResourceType.Branch;\n        }\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-branch${iconSuffix}.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-branch${iconSuffix}.svg`)\n        };\n\n        return item;\n    }\n\n    refresh() {\n        this._children = undefined;\n    }\n}\n","'use strict';\nimport { ThemeIcon, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GitUri } from '../../git/gitService';\nimport { Arrays, Objects } from '../../system';\nimport { View } from '../viewBase';\nimport { BranchNode } from './branchNode';\nimport { TagNode } from './tagNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nconst set = new Set();\n\nexport class BranchOrTagFolderNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly type: 'branch' | 'remote-branch' | 'tag',\n        public readonly repoPath: string,\n        public readonly folderName: string,\n        public readonly relativePath: string | undefined,\n        public readonly root: Arrays.IHierarchicalItem<BranchNode | TagNode>,\n        private readonly _expanded: boolean = false\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.repoPath}):${this.type}-folder(${this.relativePath})`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this.root.descendants === undefined || this.root.children === undefined) return [];\n\n        const children: (BranchOrTagFolderNode | BranchNode | TagNode)[] = [];\n\n        for (const folder of Objects.values(this.root.children)) {\n            if (folder.value === undefined) {\n                // If the folder contains the current branch, expand it by default\n                const expanded =\n                    folder.descendants !== undefined &&\n                    folder.descendants.some(n => n instanceof BranchNode && n.current);\n                children.push(\n                    new BranchOrTagFolderNode(\n                        this.view,\n                        this,\n                        this.type,\n                        this.repoPath,\n                        folder.name,\n                        folder.relativePath,\n                        folder,\n                        expanded\n                    )\n                );\n                continue;\n            }\n\n            children.push(folder.value);\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const item = new TreeItem(\n            this.label,\n            this._expanded ? TreeItemCollapsibleState.Expanded : TreeItemCollapsibleState.Collapsed\n        );\n        item.id = this.id;\n        item.contextValue = ResourceType.Folder;\n        item.iconPath = ThemeIcon.Folder;\n        item.tooltip = this.label;\n        return item;\n    }\n\n    get label(): string {\n        return this.folderName;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Arrays, Iterables } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchNode } from './branchNode';\nimport { BranchOrTagFolderNode } from './branchOrTagFolderNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class BranchesNode extends ViewNode<RepositoriesView> {\n    private _children: ViewNode[] | undefined;\n\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.repo.path}):branches`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const branches = await this.repo.getBranches();\n            if (branches === undefined) return [];\n\n            branches.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\n\n            // filter local branches\n            const branchNodes = [\n                ...Iterables.filterMap(branches, b =>\n                    b.remote ? undefined : new BranchNode(this.uri, this.view, this, b)\n                )\n            ];\n            if (this.view.config.branches.layout === ViewBranchesLayout.List) return branchNodes;\n\n            const hierarchy = Arrays.makeHierarchical(\n                branchNodes,\n                n => (n.branch.detached ? [n.branch.name] : n.branch.getName().split('/')),\n                (...paths: string[]) => paths.join('/'),\n                this.view.config.files.compact\n            );\n\n            const root = new BranchOrTagFolderNode(this.view, this, 'branch', this.repo.path, '', undefined, hierarchy);\n            this._children = await root.getChildren();\n        }\n        return this._children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const remotes = await this.repo.getRemotes();\n\n        const item = new TreeItem(`Branches`, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue =\n            remotes !== undefined && remotes.length > 0 ? ResourceType.BranchesWithRemotes : ResourceType.Branches;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-branch.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-branch.svg')\n        };\n\n        return item;\n    }\n\n    refresh() {\n        this._children = undefined;\n    }\n}\n","'use strict';\nimport { Disposable, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport {\n    GitCommitType,\n    GitLogCommit,\n    GitService,\n    GitUri,\n    RepositoryChange,\n    RepositoryChangeEvent,\n    RepositoryFileSystemChangeEvent\n} from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { MessageNode } from './common';\nimport { insertDateMarkers } from './helpers';\nimport { ResourceType, SubscribeableViewNode, ViewNode } from './viewNode';\n\nexport class FileHistoryNode extends SubscribeableViewNode {\n    constructor(uri: GitUri, view: View, parent: ViewNode) {\n        super(uri, view, parent);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const children: ViewNode[] = [];\n\n        const displayAs =\n            CommitFileNodeDisplayAs.CommitLabel |\n            (this.view.config.avatars ? CommitFileNodeDisplayAs.Gravatar : CommitFileNodeDisplayAs.StatusIcon);\n\n        if (this.uri.sha === undefined) {\n            const status = await Container.git.getStatusForFile(this.uri.repoPath!, this.uri.fsPath);\n            if (status !== undefined && (status.indexStatus !== undefined || status.workingTreeStatus !== undefined)) {\n                let sha;\n                let previousSha;\n                if (status.workingTreeStatus !== undefined) {\n                    sha = GitService.uncommittedSha;\n                    if (status.indexStatus !== undefined) {\n                        previousSha = GitService.stagedUncommittedSha;\n                    }\n                    else if (status.workingTreeStatus !== '?') {\n                        previousSha = 'HEAD';\n                    }\n                }\n                else {\n                    sha = GitService.stagedUncommittedSha;\n                    previousSha = 'HEAD';\n                }\n\n                const user = await Container.git.getCurrentUser(this.uri.repoPath!);\n                const commit = new GitLogCommit(\n                    GitCommitType.File,\n                    this.uri.repoPath!,\n                    sha,\n                    'You',\n                    user !== undefined ? user.email : undefined,\n                    new Date(),\n                    new Date(),\n                    '',\n                    status.fileName,\n                    [status],\n                    status.status,\n                    status.originalFileName,\n                    previousSha,\n                    status.originalFileName || status.fileName\n                );\n                children.push(new CommitFileNode(this.view, this, status, commit, displayAs));\n            }\n        }\n\n        const log = await Container.git.getLogForFile(this.uri.repoPath, this.uri.fsPath, {\n            ref: this.uri.sha\n        });\n        if (log !== undefined) {\n            children.push(\n                ...insertDateMarkers(\n                    Iterables.map(\n                        log.commits.values(),\n                        c => new CommitFileNode(this.view, this, c.files[0], c, displayAs)\n                    ),\n                    this\n                )\n            );\n        }\n\n        if (children.length === 0) return [new MessageNode(this.view, this, 'No file history could be found.')];\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(\n            `${this.uri.getFilename()}${\n                this.uri.sha\n                    ? ` ${\n                          this.uri.sha === GitService.deletedOrMissingSha ? this.uri.shortSha : `(${this.uri.shortSha})`\n                      }`\n                    : ''\n            }`,\n            TreeItemCollapsibleState.Expanded\n        );\n        item.contextValue = ResourceType.FileHistory;\n        item.description = this.uri.getDirectory();\n        item.tooltip = `History of ${this.uri.getFilename()}\\n${this.uri.getDirectory()}/${\n            this.uri.sha === undefined ? '' : `\\n\\n${this.uri.sha}`\n        }`;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-history.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-history.svg')\n        };\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @debug()\n    protected async subscribe() {\n        const repo = await Container.git.getRepository(this.uri);\n        if (repo === undefined) return undefined;\n\n        const subscription = Disposable.from(\n            repo.onDidChange(this.onRepoChanged, this),\n            repo.onDidChangeFileSystem(this.onRepoFileSystemChanged, this),\n            { dispose: () => repo.stopWatchingFileSystem() }\n        );\n\n        repo.startWatchingFileSystem();\n\n        return subscription;\n    }\n\n    private onRepoChanged(e: RepositoryChangeEvent) {\n        if (!e.changed(RepositoryChange.Repository)) return;\n\n        Logger.log(`FileHistoryNode.onRepoChanged(${e.changes.join()}); triggering node refresh`);\n\n        void this.triggerChange();\n    }\n\n    private onRepoFileSystemChanged(e: RepositoryFileSystemChangeEvent) {\n        if (!e.uris.some(uri => uri.toString(true) === this.uri.toString(true))) return;\n\n        Logger.debug(\n            `FileHistoryNode${this.id}.onRepoFileSystemChanged(${this.uri.toString(true)}); triggering node refresh`\n        );\n\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport {\n    CancellationTokenSource,\n    commands,\n    QuickPickItem,\n    QuickPickOptions,\n    TextDocumentShowOptions,\n    TextEditor,\n    Uri,\n    window\n} from 'vscode';\nimport { Commands, openEditor } from '../commands';\nimport { configuration } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitLogCommit, GitRepoSearchBy, GitStashCommit, GitUri } from '../git/gitService';\nimport { KeyMapping, Keys } from '../keyboard';\nimport { Strings } from '../system';\nimport {\n    BranchesAndTagsQuickPick,\n    BranchQuickPickItem,\n    RefQuickPickItem,\n    TagQuickPickItem\n} from './branchesAndTagsQuickPick';\n\nexport function getQuickPickIgnoreFocusOut() {\n    return !configuration.get<boolean>(configuration.name('advanced')('quickPick')('closeOnFocusOut').value);\n}\n\nexport function showQuickPickProgress(message: string, mapping?: KeyMapping): CancellationTokenSource {\n    const cancellation = new CancellationTokenSource();\n    void _showQuickPickProgress(message, cancellation, mapping);\n    return cancellation;\n}\n\nasync function _showQuickPickProgress(message: string, cancellation: CancellationTokenSource, mapping?: KeyMapping) {\n    const scope = mapping && (await Container.keyboard.beginScope(mapping));\n\n    try {\n        await window.showQuickPick(\n            _getInfiniteCancellablePromise(cancellation),\n            {\n                placeHolder: message,\n                ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            } as QuickPickOptions,\n            cancellation.token\n        );\n    }\n    catch (ex) {\n        // Not sure why this throws\n    }\n    finally {\n        cancellation.cancel();\n        scope && scope.dispose();\n    }\n}\n\nfunction _getInfiniteCancellablePromise(cancellation: CancellationTokenSource) {\n    return new Promise<QuickPickItem[]>((resolve, reject) => {\n        const disposable = cancellation.token.onCancellationRequested(() => {\n            disposable.dispose();\n            resolve([]);\n        });\n    });\n}\n\nexport interface QuickPickItem extends QuickPickItem {\n    onDidSelect?(): void;\n    onDidPressKey?(key: Keys): Promise<{} | undefined>;\n}\n\nexport class CommandQuickPickItem implements QuickPickItem {\n    label!: string;\n    description!: string;\n    detail?: string | undefined;\n    protected command: Commands | undefined;\n    protected args: any[] | undefined;\n\n    constructor(item: QuickPickItem, args?: [Commands, any[]]);\n    constructor(item: QuickPickItem, command?: Commands, args?: any[]);\n    constructor(item: QuickPickItem, commandOrArgs?: Commands | [Commands, any[]], args?: any[]) {\n        if (commandOrArgs === undefined) {\n            this.command = undefined;\n            this.args = args;\n        }\n        else if (typeof commandOrArgs === 'string') {\n            this.command = commandOrArgs;\n            this.args = args;\n        }\n        else {\n            this.command = commandOrArgs[0];\n            this.args = commandOrArgs.slice(1);\n        }\n        Object.assign(this, item);\n    }\n\n    execute(): Promise<{} | undefined> {\n        if (this.command === undefined) return Promise.resolve(undefined);\n\n        return commands.executeCommand(this.command, ...(this.args || [])) as Promise<{} | undefined>;\n    }\n\n    onDidPressKey(key: Keys): Promise<{} | undefined> {\n        return this.execute();\n    }\n}\n\nexport class CommitQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string;\n\n    constructor(\n        public readonly commit: GitLogCommit\n    ) {\n        const message = commit.getShortMessage();\n        if (commit.isStash) {\n            this.label = message;\n            this.description = '';\n            this.detail = `${GlyphChars.Space} ${(commit as GitStashCommit).stashName || commit.shortSha} ${Strings.pad(\n                GlyphChars.Dot,\n                1,\n                1\n            )} ${commit.formattedDate} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getFormattedDiffStatus({\n                compact: true\n            })}`;\n        }\n        else {\n            this.label = message;\n            this.description = `${Strings.pad('$(git-commit)', 1, 1)} ${commit.shortSha}`;\n            this.detail = `${GlyphChars.Space} ${commit.author}, ${commit.formattedDate}${\n                commit.isFile\n                    ? ''\n                    : ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getFormattedDiffStatus({ compact: true })}`\n            }`;\n        }\n    }\n}\n\nexport class ChooseFromBranchesAndTagsQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        private readonly repoPath: string,\n        private readonly placeHolder: string,\n        private readonly _goBack?: CommandQuickPickItem,\n        item: QuickPickItem = {\n            label: 'Choose from Branch or Tag History...',\n            description: `${Strings.pad(GlyphChars.Dash, 2, 2)} shows list of branches and tags`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    execute(): Promise<CommandQuickPickItem | BranchQuickPickItem | TagQuickPickItem | RefQuickPickItem | undefined> {\n        return new BranchesAndTagsQuickPick(this.repoPath).show(this.placeHolder, {\n            allowCommitId: true,\n            goBack: this._goBack\n        });\n    }\n}\n\nexport class KeyCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(command: Commands, args?: any[]) {\n        super({ label: '', description: '' } as QuickPickItem, command, args);\n    }\n}\n\nexport class MessageQuickPickItem extends CommandQuickPickItem {\n    constructor(message: string) {\n        super({ label: message, description: '' } as QuickPickItem);\n    }\n}\n\nexport class OpenFileCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly uri: Uri,\n        item: QuickPickItem\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(options?: TextDocumentShowOptions): Promise<TextEditor | undefined> {\n        return openEditor(this.uri, options);\n    }\n\n    // onDidSelect(): Promise<{} | undefined> {\n    //     return this.execute({\n    //         preserveFocus: true,\n    //         preview: true\n    //     });\n    // }\n\n    onDidPressKey(key: Keys): Promise<{} | undefined> {\n        return this.execute({\n            preserveFocus: true,\n            preview: false\n        });\n    }\n}\n\nexport class OpenFilesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly uris: Uri[],\n        item: QuickPickItem\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ): Promise<{} | undefined> {\n        for (const uri of this.uris) {\n            await openEditor(uri, options);\n        }\n        return undefined;\n    }\n\n    async onDidPressKey(key: Keys): Promise<{} | undefined> {\n        return this.execute({\n            preserveFocus: true,\n            preview: false\n        });\n    }\n}\n\nexport class ShowCommitInViewQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly commit: GitLogCommit,\n        item: QuickPickItem = {\n            label: 'Show in View',\n            description: `${Strings.pad(GlyphChars.Dash, 2, 2)} displays the commit in the GitLens Search Commits view`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(): Promise<{} | undefined> {\n        await Container.searchView.search(this.commit.repoPath, this.commit.sha, GitRepoSearchBy.Sha, {\n            label: { label: `commits with an id matching '${this.commit.shortSha}'` }\n        });\n        return undefined;\n    }\n}\n\nexport class ShowCommitSearchResultsInViewQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly search: string,\n        public readonly searchBy: GitRepoSearchBy,\n        public readonly results: GitLog,\n        public readonly resultsLabel: string | { label: string; resultsType?: { singular: string; plural: string } },\n        item: QuickPickItem = {\n            label: 'Show in View',\n            description: `${Strings.pad(\n                GlyphChars.Dash,\n                2,\n                2\n            )} displays the search results in the GitLens Search Commits view`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(): Promise<{} | undefined> {\n        await Container.searchView.showSearchResults(this.results.repoPath, this.search, this.searchBy, this.results, {\n            label: this.resultsLabel\n        });\n        return undefined;\n    }\n}\n\nexport class ShowFileHistoryInViewQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        public readonly uri: GitUri,\n        public readonly baseRef: string | undefined,\n        item: QuickPickItem = {\n            label: 'Show in View',\n            description: `${Strings.pad(\n                GlyphChars.Dash,\n                2,\n                2\n            )} displays the file history in the GitLens File History view`\n        }\n    ) {\n        super(item, undefined, undefined);\n    }\n\n    async execute(): Promise<{} | undefined> {\n        await Container.fileHistoryView.showHistoryForUri(this.uri, this.baseRef);\n        return undefined;\n    }\n}\n","'use strict';\nimport { CancellationToken, CancellationTokenSource, QuickPickItem, QuickPickOptions, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitService, GitTag } from '../git/gitService';\nimport { Functions } from '../system';\nimport { CommandQuickPickItem, getQuickPickIgnoreFocusOut } from './commonQuickPicks';\n\nexport class RefQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(\n        public readonly ref: string,\n        checked?: boolean\n    ) {\n        this.label = `${checked ? `$(check)${GlyphChars.Space}` : GlyphChars.Space.repeat(4)} ${GitService.shortenSha(\n            ref\n        )}`;\n        this.description = '';\n    }\n\n    get current() {\n        return false;\n    }\n\n    get item() {\n        return undefined;\n    }\n\n    get remote() {\n        return false;\n    }\n}\n\nexport class BranchQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(\n        public readonly branch: GitBranch,\n        checked?: boolean\n    ) {\n        checked = checked || (checked === undefined && branch.current);\n        this.label = `${checked ? `$(check)${GlyphChars.Space}` : GlyphChars.Space.repeat(4)} ${branch.name}`;\n        this.description = branch.remote\n            ? `${GlyphChars.Space.repeat(2)} remote branch`\n            : branch.current\n            ? 'current branch'\n            : '';\n    }\n\n    get current() {\n        return this.branch.current;\n    }\n\n    get item() {\n        return this.branch;\n    }\n\n    get ref() {\n        return this.branch.name;\n    }\n\n    get remote() {\n        return this.branch.remote;\n    }\n}\n\nexport class TagQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(\n        public readonly tag: GitBranch | GitTag,\n        checked?: boolean\n    ) {\n        this.label = `${checked ? `$(check)${GlyphChars.Space}` : GlyphChars.Space.repeat(4)} ${tag.name}`;\n        this.description = `${GlyphChars.Space.repeat(2)} tag`;\n    }\n\n    get current() {\n        return false;\n    }\n\n    get item() {\n        return this.tag;\n    }\n\n    get ref() {\n        return this.tag.name;\n    }\n\n    get remote() {\n        return false;\n    }\n}\n\nexport type BranchAndTagQuickPickResult = BranchQuickPickItem | TagQuickPickItem | RefQuickPickItem;\n\nexport interface BranchesAndTagsQuickPickOptions {\n    allowCommitId?: boolean;\n    autoPick?: boolean;\n    checked?: string;\n    filters?: {\n        branches?(branch: GitBranch): boolean;\n        tags?(tag: GitTag): boolean;\n    };\n    goBack?: CommandQuickPickItem;\n    include?: 'branches' | 'tags' | 'all';\n}\n\nexport class BranchesAndTagsQuickPick {\n    constructor(\n        public readonly repoPath: string\n    ) {}\n\n    async show(\n        placeHolder: string,\n        options: BranchesAndTagsQuickPickOptions = {}\n    ): Promise<BranchAndTagQuickPickResult | CommandQuickPickItem | undefined> {\n        const cancellation = new CancellationTokenSource();\n\n        let scope;\n        if (options.goBack) {\n            scope = await Container.keyboard.beginScope({ left: options.goBack });\n        }\n\n        let autoPick;\n        try {\n            let items = this.getItems(options, cancellation.token);\n            if (options.autoPick) {\n                items = items.then(itms => {\n                    if (itms.length <= 1) {\n                        autoPick = itms[0];\n                        cancellation.cancel();\n                    }\n                    return itms;\n                });\n            }\n\n            let pick;\n            if (options.allowCommitId) {\n                placeHolder += `${GlyphChars.Space.repeat(3)}(use # to enter a commit id)`;\n\n                const quickpick = window.createQuickPick<BranchAndTagQuickPickResult | CommandQuickPickItem>();\n                quickpick.busy = true;\n                quickpick.enabled = false;\n                quickpick.placeholder = placeHolder;\n                quickpick.ignoreFocusOut = getQuickPickIgnoreFocusOut();\n                quickpick.show();\n\n                quickpick.items = await items;\n                quickpick.busy = false;\n                quickpick.enabled = true;\n\n                pick = await new Promise<BranchAndTagQuickPickResult | CommandQuickPickItem | undefined>(resolve => {\n                    cancellation.token.onCancellationRequested(() => quickpick.hide());\n\n                    quickpick.onDidHide(() => resolve(undefined));\n                    quickpick.onDidChangeValue(value => {\n                        quickpick.title =\n                            value && value.startsWith('#')\n                                ? `Please enter a commit id (Press 'Enter' to confirm or 'Escape' to cancel)`\n                                : undefined;\n                    });\n                    quickpick.onDidAccept(async () => {\n                        if (quickpick.selectedItems.length === 0) {\n                            let ref = quickpick.value;\n                            if (!ref || !ref.startsWith('#')) return;\n\n                            ref = ref.substr(1);\n\n                            quickpick.busy = true;\n                            quickpick.enabled = false;\n\n                            if (await Container.git.validateReference(this.repoPath, ref)) {\n                                resolve(new RefQuickPickItem(ref));\n                            }\n                            else {\n                                quickpick.title = 'You must enter a valid commit id';\n                                quickpick.busy = false;\n                                quickpick.enabled = true;\n                                return;\n                            }\n                        }\n                        else {\n                            resolve(quickpick.selectedItems[0]);\n                        }\n\n                        quickpick.hide();\n                    });\n                });\n\n                quickpick.dispose();\n            }\n            else {\n                pick = await window.showQuickPick(\n                    items,\n                    {\n                        placeHolder: placeHolder,\n                        ignoreFocusOut: getQuickPickIgnoreFocusOut()\n                    } as QuickPickOptions,\n                    cancellation.token\n                );\n            }\n\n            if (pick === undefined && autoPick !== undefined) {\n                pick = autoPick;\n            }\n\n            if (pick === undefined) {\n                cancellation.cancel();\n            }\n\n            return pick;\n        }\n        finally {\n            if (scope !== undefined) {\n                await scope.dispose();\n            }\n\n            cancellation.dispose();\n        }\n    }\n\n    private async getItems(options: BranchesAndTagsQuickPickOptions, token: CancellationToken) {\n        const { checked, filters, goBack, include } = { include: 'all', ...options };\n\n        let branches;\n        let tags;\n        switch (include) {\n            case 'branches': {\n                const result = await Functions.cancellable(Container.git.getBranches(this.repoPath), token);\n                if (result === undefined || token.isCancellationRequested) return [];\n\n                branches = result;\n                break;\n            }\n            case 'tags': {\n                const result = await Functions.cancellable(Container.git.getTags(this.repoPath), token);\n                if (result === undefined || token.isCancellationRequested) return [];\n\n                tags = result;\n                break;\n            }\n            default: {\n                const result = await Functions.cancellable(\n                    Promise.all([Container.git.getBranches(this.repoPath), Container.git.getTags(this.repoPath)]),\n                    token\n                );\n                if (result === undefined || token.isCancellationRequested) return [];\n\n                [branches, tags] = result;\n                break;\n            }\n        }\n\n        const items: (BranchQuickPickItem | TagQuickPickItem | CommandQuickPickItem)[] = [];\n\n        if (branches !== undefined) {\n            const filter =\n                filters !== undefined && typeof filters.branches === 'function' ? filters.branches : undefined;\n\n            branches.sort(\n                (a, b) =>\n                    (b.remote ? -1 : 1) - (a.remote ? -1 : 1) ||\n                    a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' })\n            );\n            for (const b of branches) {\n                if (filter !== undefined && !filter(b)) continue;\n\n                items.push(new BranchQuickPickItem(b, checked !== undefined ? b.name === checked : undefined));\n            }\n        }\n\n        if (tags !== undefined) {\n            const filter = filters !== undefined && typeof filters.tags === 'function' ? filters.tags : undefined;\n\n            tags.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\n            for (const t of tags) {\n                if (filter !== undefined && !filter(t)) continue;\n\n                items.push(new TagQuickPickItem(t, checked !== undefined ? t.name === checked : undefined));\n            }\n        }\n\n        if (goBack !== undefined) {\n            items.splice(0, 0, goBack);\n        }\n\n        return items;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { QuickPickOptions, window } from 'vscode';\nimport { Commands, OpenInRemoteCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport {\n    getNameFromRemoteResource,\n    GitLogCommit,\n    GitRemote,\n    GitService,\n    RemoteResource,\n    RemoteResourceType\n} from '../git/gitService';\nimport { Strings } from '../system';\nimport { CommandQuickPickItem, getQuickPickIgnoreFocusOut } from './commonQuickPicks';\n\nexport class OpenRemoteCommandQuickPickItem extends CommandQuickPickItem {\n    private remote: GitRemote;\n    private resource: RemoteResource;\n\n    constructor(\n        remote: GitRemote,\n        resource: RemoteResource,\n        public readonly clipboard?: boolean\n    ) {\n        super(\n            {\n                label: clipboard\n                    ? `$(link-external) Copy ${getNameFromRemoteResource(resource)} Url to Clipboard from ${\n                          remote.provider!.name\n                      }`\n                    : `$(link-external) Open ${getNameFromRemoteResource(resource)} on ${remote.provider!.name}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(repo) ${remote.provider!.path}`\n            },\n            undefined,\n            undefined\n        );\n\n        this.remote = remote;\n        this.resource = resource;\n    }\n\n    async execute(): Promise<{} | undefined> {\n        if (this.clipboard) return this.remote.provider!.copy(this.resource);\n\n        return this.remote.provider!.open(this.resource);\n    }\n}\n\nexport class OpenRemotesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(remotes: GitRemote[], resource: RemoteResource, goBackCommand?: CommandQuickPickItem) {\n        const name = getNameFromRemoteResource(resource);\n\n        let description = '';\n        switch (resource.type) {\n            case RemoteResourceType.Branch:\n                description = `$(git-branch) ${resource.branch}`;\n                break;\n\n            case RemoteResourceType.Branches:\n                description = `$(git-branch) Branches`;\n                break;\n\n            case RemoteResourceType.Commit:\n                const shortSha = GitService.shortenSha(resource.sha);\n                description = `$(git-commit) ${shortSha}`;\n                break;\n\n            case RemoteResourceType.File:\n                description = `$(file-text) ${paths.basename(resource.fileName)}`;\n                break;\n\n            case RemoteResourceType.Repo:\n                description = `$(repo) Repository`;\n                break;\n\n            case RemoteResourceType.Revision:\n                if (resource.commit !== undefined && resource.commit instanceof GitLogCommit) {\n                    if (resource.commit.status === 'D') {\n                        resource.sha = resource.commit.previousSha;\n                        description = `$(file-text) ${paths.basename(resource.fileName)} in ${\n                            GlyphChars.Space\n                        }$(git-commit) ${resource.commit.previousShortSha} (deleted in ${\n                            GlyphChars.Space\n                        }$(git-commit) ${resource.commit.shortSha})`;\n                    }\n                    else {\n                        resource.sha = resource.commit.sha;\n                        description = `$(file-text) ${paths.basename(resource.fileName)} in ${\n                            GlyphChars.Space\n                        }$(git-commit) ${resource.commit.shortSha}`;\n                    }\n                }\n                else {\n                    const shortFileSha = resource.sha === undefined ? '' : GitService.shortenSha(resource.sha);\n                    description = `$(file-text) ${paths.basename(resource.fileName)}${\n                        shortFileSha ? ` in ${GlyphChars.Space}$(git-commit) ${shortFileSha}` : ''\n                    }`;\n                }\n                break;\n        }\n\n        const remote = remotes[0];\n        if (remotes.length === 1) {\n            super(\n                {\n                    label: `$(link-external) Open ${name} on ${remote.provider!.name}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(repo) ${remote.provider!.path} ${Strings.pad(\n                        GlyphChars.Dot,\n                        1,\n                        1\n                    )} ${description}`\n                },\n                Commands.OpenInRemote,\n                [\n                    undefined,\n                    {\n                        remotes,\n                        resource,\n                        goBackCommand\n                    } as OpenInRemoteCommandArgs\n                ]\n            );\n\n            return;\n        }\n\n        const provider = remotes.every(r => r.provider !== undefined && r.provider.name === remote.provider!.name)\n            ? remote.provider!.name\n            : 'Remote';\n\n        super(\n            {\n                label: `$(link-external) Open ${name} on ${provider}${GlyphChars.Ellipsis}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${description}`\n            },\n            Commands.OpenInRemote,\n            [\n                undefined,\n                {\n                    remotes,\n                    resource,\n                    goBackCommand\n                } as OpenInRemoteCommandArgs\n            ]\n        );\n    }\n}\n\nexport class RemotesQuickPick {\n    static async show(\n        remotes: GitRemote[],\n        placeHolder: string,\n        resource: RemoteResource,\n        clipboard?: boolean,\n        goBackCommand?: CommandQuickPickItem\n    ): Promise<OpenRemoteCommandQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = remotes.map(r => new OpenRemoteCommandQuickPickItem(r, resource, clipboard)) as (\n            | OpenRemoteCommandQuickPickItem\n            | CommandQuickPickItem)[];\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        // const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        const pick = await window.showQuickPick(items, {\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n        } as QuickPickOptions);\n        if (pick === undefined) return undefined;\n\n        // await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, QuickPickOptions, window } from 'vscode';\nimport { Commands, ShowQuickBranchHistoryCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitUri, RemoteResource } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    showQuickPickProgress\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class BranchHistoryQuickPick {\n    static showProgress(branch: string) {\n        return showQuickPickProgress(\n            `${branch} history ${GlyphChars.Dash} search by commit message, filename, or commit id`,\n            {\n                left: KeyNoopCommand,\n                ',': KeyNoopCommand,\n                '.': KeyNoopCommand\n            }\n        );\n    }\n\n    static async show(\n        log: GitLog,\n        uri: GitUri | undefined,\n        branch: string,\n        progressCancellation: CancellationTokenSource,\n        goBackCommand?: CommandQuickPickItem,\n        nextPageCommand?: CommandQuickPickItem\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = Array.from(Iterables.map(log.commits.values(), c => new CommitQuickPickItem(c))) as (\n            | CommitQuickPickItem\n            | CommandQuickPickItem)[];\n\n        const currentCommand = new CommandQuickPickItem(\n            {\n                label: `go back ${GlyphChars.ArrowBack}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${\n                    GlyphChars.Space\n                }$(git-branch) ${branch} history`\n            },\n            Commands.ShowQuickBranchHistory,\n            [\n                uri,\n                {\n                    branch,\n                    log,\n                    maxCount: log.maxCount,\n                    goBackCommand\n                } as ShowQuickBranchHistoryCommandArgs\n            ]\n        );\n\n        const remotes = await Container.git.getRemotes((uri && uri.repoPath) || log.repoPath);\n        if (remotes.length) {\n            items.splice(\n                0,\n                0,\n                new OpenRemotesCommandQuickPickItem(\n                    remotes,\n                    {\n                        type: 'branch',\n                        branch\n                    } as RemoteResource,\n                    currentCommand\n                )\n            );\n        }\n\n        let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n        if (log.truncated || log.sha) {\n            if (log.truncated) {\n                items.splice(\n                    0,\n                    0,\n                    new CommandQuickPickItem(\n                        {\n                            label: `$(sync) Show All Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                        },\n                        Commands.ShowQuickBranchHistory,\n                        [\n                            GitUri.fromRepoPath(log.repoPath),\n                            {\n                                branch,\n                                maxCount: 0,\n                                goBackCommand\n                            } as ShowQuickBranchHistoryCommandArgs\n                        ]\n                    )\n                );\n            }\n\n            if (nextPageCommand) {\n                items.splice(0, 0, nextPageCommand);\n            }\n\n            if (log.truncated) {\n                const npc = new CommandQuickPickItem(\n                    {\n                        label: `$(arrow-right) Show Next Commits`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} newer commits`\n                    },\n                    Commands.ShowQuickBranchHistory,\n                    [\n                        uri,\n                        {\n                            branch,\n                            maxCount: log.maxCount,\n                            nextPageCommand\n                        } as ShowQuickBranchHistoryCommandArgs\n                    ]\n                );\n\n                const last = Iterables.last(log.commits.values());\n                if (last != null) {\n                    previousPageCommand = new CommandQuickPickItem(\n                        {\n                            label: `$(arrow-left) Show Previous Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} older commits`\n                        },\n                        Commands.ShowQuickBranchHistory,\n                        [\n                            new GitUri(uri ? uri : last.uri, last),\n                            {\n                                branch,\n                                maxCount: log.maxCount,\n                                goBackCommand,\n                                nextPageCommand: npc\n                            } as ShowQuickBranchHistoryCommandArgs\n                        ]\n                    );\n\n                    items.splice(0, 0, previousPageCommand);\n                }\n            }\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        if (progressCancellation.token.isCancellationRequested) return undefined;\n\n        const scope = await Container.keyboard.beginScope({\n            left: goBackCommand,\n            ',': previousPageCommand,\n            '.': nextPageCommand\n        });\n\n        progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            matchOnDetail: true,\n            placeHolder: `${branch} history ${GlyphChars.Dash} search by commit message, filename, or commit id`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { QuickPickItem, QuickPickOptions, Uri, window } from 'vscode';\nimport {\n    Commands,\n    CopyMessageToClipboardCommandArgs,\n    CopyShaToClipboardCommandArgs,\n    DiffWithPreviousCommandArgs,\n    DiffWithWorkingCommandArgs,\n    openEditor,\n    ShowQuickCommitDetailsCommandArgs,\n    ShowQuickCommitFileDetailsCommandArgs,\n    ShowQuickFileHistoryCommandArgs\n} from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitLogCommit, GitUri, RemoteResource } from '../git/gitService';\nimport { KeyCommand, KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    KeyCommandQuickPickItem,\n    OpenFileCommandQuickPickItem\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class ApplyCommitFileChangesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(\n        private readonly commit: GitLogCommit,\n        item?: QuickPickItem\n    ) {\n        super(\n            item || {\n                label: `$(git-pull-request) Apply Changes`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(file-text) ${paths.basename(\n                    commit.fileName\n                )} in ${GlyphChars.Space}$(git-commit) ${commit.shortSha}`\n            },\n            undefined,\n            undefined\n        );\n    }\n\n    async execute(): Promise<{} | undefined> {\n        const uri = this.commit.toGitUri();\n        void (await openEditor(uri, { preserveFocus: true, preview: false }));\n\n        void (await Container.git.applyChangesToWorkingFile(uri));\n\n        return undefined;\n    }\n}\n\nexport class OpenCommitFileCommandQuickPickItem extends OpenFileCommandQuickPickItem {\n    constructor(commit: GitLogCommit, item?: QuickPickItem) {\n        const uri = GitUri.resolveToUri(commit.fileName, commit.repoPath);\n        super(\n            uri,\n            item || {\n                label: `$(file-symlink-file) Open File`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${paths.basename(commit.fileName)}`\n            }\n        );\n    }\n}\n\nexport class OpenCommitFileRevisionCommandQuickPickItem extends OpenFileCommandQuickPickItem {\n    constructor(commit: GitLogCommit, item?: QuickPickItem) {\n        let description: string;\n        let uri: Uri;\n        if (commit.status === 'D') {\n            uri = GitUri.toRevisionUri(commit.previousFileSha, commit.previousUri.fsPath, commit.repoPath);\n            description = `${Strings.pad(GlyphChars.Dash, 2, 3)} ${paths.basename(commit.fileName)} in ${\n                GlyphChars.Space\n            }$(git-commit) ${commit.previousShortSha} (deleted in ${GlyphChars.Space}$(git-commit) ${commit.shortSha})`;\n        }\n        else {\n            uri = GitUri.toRevisionUri(commit.sha, commit.uri.fsPath, commit.repoPath);\n            description = `${Strings.pad(GlyphChars.Dash, 2, 3)} ${paths.basename(commit.fileName)} in ${\n                GlyphChars.Space\n            }$(git-commit) ${commit.shortSha}`;\n        }\n        super(\n            uri,\n            item || {\n                label: `$(file-symlink-file) Open Revision`,\n                description: description\n            }\n        );\n    }\n}\n\nexport class CommitFileQuickPick {\n    static async show(\n        commit: GitLogCommit,\n        uri: Uri,\n        goBackCommand?: CommandQuickPickItem,\n        currentCommand?: CommandQuickPickItem,\n        fileLog?: GitLog\n    ): Promise<CommandQuickPickItem | undefined> {\n        const items: CommandQuickPickItem[] = [];\n\n        const stash = commit.isStash;\n\n        const workingName =\n            (commit.workingFileName && paths.basename(commit.workingFileName)) || paths.basename(commit.fileName);\n\n        const isUncommitted = commit.isUncommitted;\n        if (isUncommitted) {\n            // Since we can't trust the previous sha on an uncommitted commit, find the last commit for this file\n            const c = await Container.git.getRecentLogCommitForFile(undefined, commit.uri.fsPath);\n            if (c === undefined) return undefined;\n\n            commit = c;\n        }\n\n        await commit.resolvePreviousFileSha();\n\n        if (stash) {\n            items.push(new ApplyCommitFileChangesCommandQuickPickItem(commit));\n        }\n\n        if (commit.previousFileShortSha) {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-compare) Open Changes`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${\n                            commit.previousFileShortSha\n                        } ${GlyphChars.Space} $(git-compare) ${GlyphChars.Space} $(git-commit) ${commit.shortSha}`\n                    },\n                    Commands.DiffWithPrevious,\n                    [\n                        commit.uri,\n                        {\n                            commit\n                        } as DiffWithPreviousCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (commit.workingFileName) {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-compare) Open Changes with Working File`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.shortSha} ${\n                            GlyphChars.Space\n                        } $(git-compare) ${GlyphChars.Space} $(file-text) ${workingName}`\n                    },\n                    Commands.DiffWithWorking,\n                    [\n                        GitUri.resolveToUri(commit.workingFileName, commit.repoPath),\n                        {\n                            commit\n                        } as DiffWithWorkingCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (commit.workingFileName && commit.status !== 'D') {\n            items.push(new OpenCommitFileCommandQuickPickItem(commit));\n        }\n        items.push(new OpenCommitFileRevisionCommandQuickPickItem(commit));\n\n        const remotes = await Container.git.getRemotes(commit.repoPath);\n        if (remotes.length) {\n            if (commit.workingFileName && commit.status !== 'D') {\n                const branch = await Container.git.getBranch(commit.repoPath);\n                if (branch !== undefined) {\n                    items.push(\n                        new OpenRemotesCommandQuickPickItem(\n                            remotes,\n                            {\n                                type: 'file',\n                                fileName: commit.workingFileName,\n                                branch: branch.name\n                            } as RemoteResource,\n                            currentCommand\n                        )\n                    );\n                }\n            }\n\n            if (!stash) {\n                items.push(\n                    new OpenRemotesCommandQuickPickItem(\n                        remotes,\n                        {\n                            type: 'revision',\n                            fileName: commit.fileName,\n                            commit\n                        } as RemoteResource,\n                        currentCommand\n                    )\n                );\n            }\n        }\n\n        if (!stash) {\n            items.push(new ApplyCommitFileChangesCommandQuickPickItem(commit));\n\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(clippy) Copy Commit ID to Clipboard`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.shortSha}`\n                    },\n                    Commands.CopyShaToClipboard,\n                    [\n                        uri,\n                        {\n                            sha: commit.sha\n                        } as CopyShaToClipboardCommandArgs\n                    ]\n                )\n            );\n\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(clippy) Copy Commit Message to Clipboard`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                    },\n                    Commands.CopyMessageToClipboard,\n                    [\n                        uri,\n                        {\n                            message: commit.message,\n                            sha: commit.sha\n                        } as CopyMessageToClipboardCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (commit.workingFileName) {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(history) Show File History`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} of ${paths.basename(commit.fileName)}`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [\n                        GitUri.resolveToUri(commit.workingFileName, commit.repoPath),\n                        {\n                            fileLog,\n                            goBackCommand: currentCommand\n                        } as ShowQuickFileHistoryCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (!stash) {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(history) Show ${commit.workingFileName ? 'Previous ' : ''}File History`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} of ${paths.basename(\n                            commit.fileName\n                        )} ${Strings.pad(GlyphChars.Dot, 1, 1)} from ${GlyphChars.Space}$(git-commit) ${\n                            commit.shortSha\n                        }`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [\n                        commit.toGitUri(),\n                        {\n                            goBackCommand: currentCommand\n                        } as ShowQuickFileHistoryCommandArgs\n                    ]\n                )\n            );\n\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-commit) Show Commit Details`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.shortSha}`\n                    },\n                    Commands.ShowQuickCommitDetails,\n                    [\n                        commit.toGitUri(),\n                        {\n                            commit,\n                            sha: commit.sha,\n                            goBackCommand: currentCommand\n                        } as ShowQuickCommitDetailsCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        let previousCommand: KeyCommand | (() => Promise<KeyCommand>) | undefined = undefined;\n        let nextCommand: KeyCommand | (() => Promise<KeyCommand>) | undefined = undefined;\n        if (!stash) {\n            // If we have the full history, we are good\n            if (fileLog !== undefined && !fileLog.truncated && fileLog.sha === undefined) {\n                previousCommand =\n                    commit.previousSha === undefined\n                        ? undefined\n                        : new KeyCommandQuickPickItem(Commands.ShowQuickCommitFileDetails, [\n                              commit.previousUri,\n                              {\n                                  fileLog,\n                                  sha: commit.previousSha,\n                                  goBackCommand\n                              } as ShowQuickCommitFileDetailsCommandArgs\n                          ]);\n\n                nextCommand =\n                    commit.nextSha === undefined\n                        ? undefined\n                        : new KeyCommandQuickPickItem(Commands.ShowQuickCommitFileDetails, [\n                              commit.nextUri,\n                              {\n                                  fileLog,\n                                  sha: commit.nextSha,\n                                  goBackCommand\n                              } as ShowQuickCommitFileDetailsCommandArgs\n                          ]);\n            }\n            else {\n                previousCommand = async () => {\n                    let log = fileLog;\n                    let c = log && log.commits.get(commit.sha);\n\n                    // If we can't find the commit or the previous commit isn't available (since it isn't trustworthy)\n                    if (c === undefined || c.previousSha === undefined) {\n                        log = await Container.git.getLogForFile(commit.repoPath, uri.fsPath, {\n                            maxCount: Container.config.advanced.maxListItems,\n                            ref: commit.sha,\n                            renames: true\n                        });\n                        if (log === undefined) return KeyNoopCommand;\n\n                        c = log && log.commits.get(commit.sha);\n                        // Since we exclude merge commits in file log, just grab the first returned commit\n                        if (c === undefined && commit.isMerge) {\n                            c = Iterables.first(log.commits.values());\n                        }\n\n                        if (c) {\n                            // Copy over next info, since it is trustworthy at this point\n                            c.nextSha = commit.nextSha;\n                            c.nextFileName = commit.nextFileName;\n                        }\n                    }\n\n                    if (c === undefined || c.previousSha === undefined) return KeyNoopCommand;\n\n                    return new KeyCommandQuickPickItem(Commands.ShowQuickCommitFileDetails, [\n                        c.previousUri,\n                        {\n                            fileLog: log,\n                            sha: c.previousSha,\n                            goBackCommand\n                        } as ShowQuickCommitFileDetailsCommandArgs\n                    ]);\n                };\n\n                nextCommand = async () => {\n                    let log = fileLog;\n                    let c = log && log.commits.get(commit.sha);\n\n                    // If we can't find the commit or the next commit isn't available (since it isn't trustworthy)\n                    if (c === undefined || c.nextSha === undefined) {\n                        log = undefined;\n                        c = undefined;\n\n                        // Try to find the next commit\n                        const next = await Container.git.findNextCommit(commit.repoPath, uri.fsPath, commit.sha);\n                        if (next !== undefined && next.sha !== commit.sha) {\n                            c = commit;\n                            c.nextSha = next.sha;\n                            c.nextFileName = next.originalFileName || next.fileName;\n                        }\n                    }\n\n                    if (c === undefined || c.nextSha === undefined) return KeyNoopCommand;\n\n                    return new KeyCommandQuickPickItem(Commands.ShowQuickCommitFileDetails, [\n                        c.nextUri,\n                        {\n                            fileLog: log,\n                            sha: c.nextSha,\n                            goBackCommand\n                        } as ShowQuickCommitFileDetailsCommandArgs\n                    ]);\n                };\n            }\n        }\n\n        const scope = await Container.keyboard.beginScope({\n            left: goBackCommand,\n            ',': previousCommand,\n            '.': nextCommand\n        });\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder: `${commit.getFormattedPath()} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                isUncommitted ? `Uncommitted ${GlyphChars.ArrowRightHollow} ` : ''\n            }${commit.shortSha} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.author}, ${\n                commit.formattedDate\n            } ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getShortMessage()}`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut(),\n            onDidSelectItem: (item: QuickPickItem) => {\n                void scope.setKeyCommand('right', item as KeyCommand);\n            }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, QuickPickOptions, TextDocumentShowOptions, Uri, window } from 'vscode';\nimport {\n    Commands,\n    CopyMessageToClipboardCommandArgs,\n    CopyShaToClipboardCommandArgs,\n    DiffDirectoryCommandArgs,\n    DiffWithPreviousCommandArgs,\n    ShowQuickCommitDetailsCommandArgs,\n    StashApplyCommandArgs,\n    StashDeleteCommandArgs\n} from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport {\n    GitFile,\n    GitFileStatus,\n    GitLog,\n    GitLogCommit,\n    GitStashCommit,\n    GitUri,\n    RemoteResource\n} from '../git/gitService';\nimport { KeyCommand, KeyNoopCommand, Keys } from '../keyboard';\nimport { Arrays, Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    KeyCommandQuickPickItem,\n    OpenFileCommandQuickPickItem,\n    OpenFilesCommandQuickPickItem,\n    QuickPickItem,\n    ShowCommitInViewQuickPickItem\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class CommitWithFileStatusQuickPickItem extends OpenFileCommandQuickPickItem {\n    readonly status: GitFileStatus;\n\n    readonly commit: GitLogCommit;\n\n    constructor(commit: GitLogCommit, file: GitFile) {\n        const octicon = GitFile.getStatusOcticon(file.status);\n        const description = GitFile.getFormattedDirectory(file, true);\n\n        super(GitUri.toRevisionUri(commit.sha, file, commit.repoPath), {\n            label: `${Strings.pad(octicon, 4, 2)} ${paths.basename(file.fileName)}`,\n            description: description\n        });\n\n        this.commit = commit.toFileCommit(file);\n        this.status = file.status;\n    }\n\n    get sha(): string {\n        return this.commit.sha;\n    }\n\n    onDidPressKey(key: Keys): Promise<{} | undefined> {\n        if (this.commit.previousSha === undefined) return super.onDidPressKey(key);\n\n        return commands.executeCommand(Commands.DiffWithPrevious, this.commit.toGitUri(), {\n            commit: this.commit,\n            showOptions: {\n                preserveFocus: true,\n                preview: false\n            } as TextDocumentShowOptions\n        } as DiffWithPreviousCommandArgs) as Promise<{} | undefined>;\n    }\n}\n\nexport class OpenCommitFilesCommandQuickPickItem extends OpenFilesCommandQuickPickItem {\n    constructor(commit: GitLogCommit, versioned: boolean = false, item?: QuickPickItem) {\n        const repoPath = commit.repoPath;\n        const uris = Arrays.filterMap(commit.files, f => GitUri.fromFile(f, repoPath));\n\n        super(\n            uris,\n            item || {\n                label: `$(file-symlink-file) Open Files`,\n                description: ''\n                // detail: `Opens all of the changed file in the working tree`\n            }\n        );\n    }\n}\n\nexport class OpenCommitFileRevisionsCommandQuickPickItem extends OpenFilesCommandQuickPickItem {\n    constructor(commit: GitLogCommit, item?: QuickPickItem) {\n        const uris = Arrays.filterMap(commit.files, f =>\n            GitUri.toRevisionUri(f.status === 'D' ? commit.previousFileSha : commit.sha, f, commit.repoPath)\n        );\n\n        super(\n            uris,\n            item || {\n                label: `$(file-symlink-file) Open Revisions`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} in ${GlyphChars.Space}$(git-commit) ${\n                    commit.shortSha\n                }`\n                // detail: `Opens all of the changed files in $(git-commit) ${commit.shortSha}`\n            }\n        );\n    }\n}\n\nexport class CommitQuickPick {\n    static async show(\n        commit: GitLogCommit,\n        uri: Uri,\n        goBackCommand?: CommandQuickPickItem,\n        currentCommand?: CommandQuickPickItem,\n        repoLog?: GitLog\n    ): Promise<CommitWithFileStatusQuickPickItem | CommandQuickPickItem | undefined> {\n        await commit.resolvePreviousFileSha();\n\n        const items: (CommitWithFileStatusQuickPickItem | CommandQuickPickItem)[] = commit.files.map(\n            fs => new CommitWithFileStatusQuickPickItem(commit, fs)\n        );\n\n        const stash = commit.isStash;\n\n        let index = 0;\n\n        if (stash) {\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-pull-request) Apply Stashed Changes`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                    },\n                    Commands.StashApply,\n                    [\n                        {\n                            confirm: true,\n                            deleteAfter: false,\n                            stashItem: commit as GitStashCommit,\n                            goBackCommand: currentCommand\n                        } as StashApplyCommandArgs\n                    ]\n                )\n            );\n\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(x) Delete Stashed Changes`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                    },\n                    Commands.StashDelete,\n                    [\n                        {\n                            confirm: true,\n                            stashItem: commit as GitStashCommit,\n                            goBackCommand: currentCommand\n                        } as StashDeleteCommandArgs\n                    ]\n                )\n            );\n\n            items.splice(index++, 0, new ShowCommitInViewQuickPickItem(commit));\n        }\n        else {\n            items.splice(index++, 0, new ShowCommitInViewQuickPickItem(commit));\n\n            const remotes = await Container.git.getRemotes(commit.repoPath);\n            if (remotes.length) {\n                items.splice(\n                    index++,\n                    0,\n                    new OpenRemotesCommandQuickPickItem(\n                        remotes,\n                        {\n                            type: 'commit',\n                            sha: commit.sha\n                        } as RemoteResource,\n                        currentCommand\n                    )\n                );\n            }\n        }\n\n        items.splice(index++, 0, new OpenCommitFilesCommandQuickPickItem(commit));\n        items.splice(index++, 0, new OpenCommitFileRevisionsCommandQuickPickItem(commit));\n\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `$(git-compare) Open Directory Compare with Previous Revision`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.previousFileShortSha} ${\n                        GlyphChars.Space\n                    } $(git-compare) ${GlyphChars.Space} $(git-commit) ${commit.shortSha}`\n                },\n                Commands.DiffDirectory,\n                [\n                    commit.uri,\n                    {\n                        ref1: commit.previousFileSha,\n                        ref2: commit.sha\n                    } as DiffDirectoryCommandArgs\n                ]\n            )\n        );\n\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `$(git-compare) Open Directory Compare with Working Tree`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} $(git-commit) ${commit.shortSha} ${\n                        GlyphChars.Space\n                    } $(git-compare) ${GlyphChars.Space} $(file-directory) Working Tree`\n                },\n                Commands.DiffDirectory,\n                [\n                    uri,\n                    {\n                        ref1: commit.sha\n                    } as DiffDirectoryCommandArgs\n                ]\n            )\n        );\n\n        if (!stash) {\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(clippy) Copy Commit ID to Clipboard`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.shortSha}`\n                    },\n                    Commands.CopyShaToClipboard,\n                    [\n                        uri,\n                        {\n                            sha: commit.sha\n                        } as CopyShaToClipboardCommandArgs\n                    ]\n                )\n            );\n        }\n\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `$(clippy) Copy Commit Message to Clipboard`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} ${commit.getShortMessage()}`\n                },\n                Commands.CopyMessageToClipboard,\n                [\n                    uri,\n                    {\n                        message: commit.message,\n                        sha: commit.sha\n                    } as CopyMessageToClipboardCommandArgs\n                ]\n            )\n        );\n\n        items.splice(\n            index++,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `Changed Files`,\n                    description: commit.getFormattedDiffStatus()\n                },\n                Commands.ShowQuickCommitDetails,\n                [\n                    uri,\n                    {\n                        commit,\n                        repoLog,\n                        sha: commit.sha,\n                        goBackCommand\n                    } as ShowQuickCommitDetailsCommandArgs\n                ]\n            )\n        );\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        let previousCommand: KeyCommand | (() => Promise<KeyCommand>) | undefined = undefined;\n        let nextCommand: KeyCommand | (() => Promise<KeyCommand>) | undefined = undefined;\n        if (!stash) {\n            // If we have the full history, we are good\n            if (repoLog !== undefined && !repoLog.truncated && repoLog.sha === undefined) {\n                previousCommand =\n                    commit.previousSha === undefined\n                        ? undefined\n                        : new KeyCommandQuickPickItem(Commands.ShowQuickCommitDetails, [\n                              commit.previousUri,\n                              {\n                                  repoLog,\n                                  sha: commit.previousSha,\n                                  goBackCommand\n                              } as ShowQuickCommitDetailsCommandArgs\n                          ]);\n\n                nextCommand =\n                    commit.nextSha === undefined\n                        ? undefined\n                        : new KeyCommandQuickPickItem(Commands.ShowQuickCommitDetails, [\n                              commit.nextUri,\n                              {\n                                  repoLog,\n                                  sha: commit.nextSha,\n                                  goBackCommand\n                              } as ShowQuickCommitDetailsCommandArgs\n                          ]);\n            }\n            else {\n                previousCommand = async () => {\n                    let log = repoLog;\n                    let c = log && log.commits.get(commit.sha);\n\n                    // If we can't find the commit or the previous commit isn't available (since it isn't trustworthy)\n                    if (c === undefined || c.previousSha === undefined) {\n                        log = await Container.git.getLog(commit.repoPath, {\n                            maxCount: Container.config.advanced.maxListItems,\n                            ref: commit.sha\n                        });\n                        c = log && log.commits.get(commit.sha);\n\n                        if (c) {\n                            // Copy over next info, since it is trustworthy at this point\n                            c.nextSha = commit.nextSha;\n                        }\n                    }\n\n                    if (c === undefined || c.previousSha === undefined) return KeyNoopCommand;\n\n                    return new KeyCommandQuickPickItem(Commands.ShowQuickCommitDetails, [\n                        c.previousUri,\n                        {\n                            repoLog: log,\n                            sha: c.previousSha,\n                            goBackCommand\n                        } as ShowQuickCommitDetailsCommandArgs\n                    ]);\n                };\n\n                nextCommand = async () => {\n                    let log = repoLog;\n                    let c = log && log.commits.get(commit.sha);\n\n                    // If we can't find the commit or the next commit isn't available (since it isn't trustworthy)\n                    if (c === undefined || c.nextSha === undefined) {\n                        log = undefined;\n                        c = undefined;\n\n                        // Try to find the next commit\n                        const nextLog = await Container.git.getLog(commit.repoPath, {\n                            maxCount: 1,\n                            reverse: true,\n                            ref: commit.sha\n                        });\n                        const next = nextLog && Iterables.first(nextLog.commits.values());\n                        if (next !== undefined && next.sha !== commit.sha) {\n                            c = commit;\n                            c.nextSha = next.sha;\n                        }\n                    }\n\n                    if (c === undefined || c.nextSha === undefined) return KeyNoopCommand;\n\n                    return new KeyCommandQuickPickItem(Commands.ShowQuickCommitDetails, [\n                        c.nextUri,\n                        {\n                            repoLog: log,\n                            sha: c.nextSha,\n                            goBackCommand\n                        } as ShowQuickCommitDetailsCommandArgs\n                    ]);\n                };\n            }\n        }\n\n        const scope = await Container.keyboard.beginScope({\n            left: goBackCommand,\n            ',': previousCommand,\n            '.': nextCommand\n        });\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            matchOnDetail: true,\n            placeHolder: `${commit.shortSha} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                commit.author ? `${commit.author}, ` : ''\n            }${commit.formattedDate} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${commit.getShortMessage()}`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut(),\n            onDidSelectItem: (item: QuickPickItem) => {\n                void scope.setKeyCommand('right', item);\n                if (typeof item.onDidSelect === 'function') {\n                    item.onDidSelect();\n                }\n            }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, QuickPickOptions, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitLog } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables } from '../system';\nimport {\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    MessageQuickPickItem,\n    showQuickPickProgress\n} from './commonQuickPicks';\n\nexport class CommitsQuickPick {\n    static showProgress(message: string) {\n        return showQuickPickProgress(message, {\n            left: KeyNoopCommand,\n            ',': KeyNoopCommand,\n            '.': KeyNoopCommand\n        });\n    }\n\n    static async show(\n        log: GitLog | undefined,\n        placeHolder: string,\n        progressCancellation: CancellationTokenSource,\n        options: {\n            goBackCommand?: CommandQuickPickItem;\n            showAllCommand?: CommandQuickPickItem;\n            showInViewCommand?: CommandQuickPickItem;\n        }\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = ((log && [...Iterables.map(log.commits.values(), c => new CommitQuickPickItem(c))]) || [\n            new MessageQuickPickItem('No results found')\n        ]) as (CommitQuickPickItem | CommandQuickPickItem)[];\n\n        if (options.showInViewCommand !== undefined) {\n            items.splice(0, 0, options.showInViewCommand);\n        }\n\n        if (options.showAllCommand !== undefined) {\n            items.splice(0, 0, options.showAllCommand);\n        }\n\n        if (options.goBackCommand !== undefined) {\n            items.splice(0, 0, options.goBackCommand);\n        }\n\n        if (progressCancellation.token.isCancellationRequested) return undefined;\n\n        const scope = await Container.keyboard.beginScope({ left: options.goBackCommand });\n\n        progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { CancellationTokenSource, QuickPickOptions, Uri, window } from 'vscode';\nimport { Commands, ShowQuickCurrentBranchHistoryCommandArgs, ShowQuickFileHistoryCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitUri, RemoteResource } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    ChooseFromBranchesAndTagsQuickPickItem,\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    showQuickPickProgress\n} from './commonQuickPicks';\nimport { OpenRemotesCommandQuickPickItem } from './remotesQuickPick';\n\nexport class FileHistoryQuickPick {\n    static showProgress(placeHolder: string) {\n        return showQuickPickProgress(placeHolder, {\n            left: KeyNoopCommand,\n            ',': KeyNoopCommand,\n            '.': KeyNoopCommand\n        });\n    }\n\n    static async show(\n        log: GitLog,\n        uri: GitUri,\n        placeHolder: string,\n        options: {\n            currentCommand?: CommandQuickPickItem;\n            goBackCommand?: CommandQuickPickItem;\n            nextPageCommand?: CommandQuickPickItem;\n            previousPageCommand?: CommandQuickPickItem;\n            pickerOnly?: boolean;\n            progressCancellation?: CancellationTokenSource;\n            showAllCommand?: CommandQuickPickItem;\n            showInViewCommand?: CommandQuickPickItem;\n        } = {}\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        options = { pickerOnly: false, ...options };\n\n        const items = Array.from(Iterables.map(log.commits.values(), c => new CommitQuickPickItem(c))) as (\n            | CommitQuickPickItem\n            | CommandQuickPickItem)[];\n\n        let index = 0;\n\n        index++;\n        items.splice(\n            0,\n            0,\n            new ChooseFromBranchesAndTagsQuickPickItem(log.repoPath, placeHolder, options.currentCommand)\n        );\n\n        if (options.showInViewCommand !== undefined) {\n            index++;\n            items.splice(0, 0, options.showInViewCommand);\n        }\n\n        if (log.truncated || log.sha) {\n            if (options.showAllCommand !== undefined) {\n                index++;\n                items.splice(0, 0, options.showAllCommand);\n            }\n            else if (!options.pickerOnly) {\n                const [workingFileName] = await Container.git.findWorkingFileName(\n                    paths.relative(log.repoPath, uri.fsPath),\n                    log.repoPath\n                );\n                if (workingFileName) {\n                    index++;\n                    items.splice(\n                        0,\n                        0,\n                        new CommandQuickPickItem(\n                            {\n                                label: `$(history) Show File History`,\n                                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} of ${paths.basename(\n                                    workingFileName\n                                )}`\n                            },\n                            Commands.ShowQuickFileHistory,\n                            [\n                                GitUri.resolveToUri(workingFileName, log.repoPath),\n                                {\n                                    goBackCommand: new CommandQuickPickItem(\n                                        {\n                                            label: `go back ${GlyphChars.ArrowBack}`,\n                                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                                                GlyphChars.Space\n                                            }$(file-text) ${paths.basename(uri.fsPath)}${\n                                                uri.sha ? ` from ${GlyphChars.Space}$(git-commit) ${uri.shortSha}` : ''\n                                            }`\n                                        },\n                                        Commands.ShowQuickFileHistory,\n                                        [\n                                            uri,\n                                            {\n                                                log: log,\n                                                maxCount: log.maxCount,\n                                                range: log.range,\n                                                goBackCommand: options.goBackCommand\n                                            } as ShowQuickFileHistoryCommandArgs\n                                        ]\n                                    )\n                                } as ShowQuickFileHistoryCommandArgs\n                            ]\n                        )\n                    );\n                }\n            }\n\n            if (options.nextPageCommand !== undefined) {\n                index++;\n                items.splice(0, 0, options.nextPageCommand);\n            }\n\n            if (options.previousPageCommand !== undefined) {\n                index++;\n                items.splice(0, 0, options.previousPageCommand);\n            }\n        }\n\n        if (!options.pickerOnly) {\n            const branch = await Container.git.getBranch(uri.repoPath!);\n\n            if (branch !== undefined) {\n                const currentCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                            GlyphChars.Space\n                        }$(file-text) ${paths.basename(uri.fsPath)}${\n                            uri.sha ? ` from ${GlyphChars.Space}$(git-commit) ${uri.shortSha}` : ''\n                        }`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [\n                        uri,\n                        {\n                            log,\n                            maxCount: log.maxCount,\n                            range: log.range\n                        } as ShowQuickFileHistoryCommandArgs\n                    ]\n                );\n\n                // Only show the full repo option if we are the root\n                if (options.goBackCommand === undefined) {\n                    items.splice(\n                        index++,\n                        0,\n                        new CommandQuickPickItem(\n                            {\n                                label: `$(history) Show Branch History`,\n                                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows  ${\n                                    GlyphChars.Space\n                                }$(git-branch) ${branch.name} history`\n                            },\n                            Commands.ShowQuickCurrentBranchHistory,\n                            [\n                                undefined,\n                                {\n                                    goBackCommand: currentCommand\n                                } as ShowQuickCurrentBranchHistoryCommandArgs\n                            ]\n                        )\n                    );\n                }\n\n                const remotes = await Container.git.getRemotes(uri.repoPath!);\n                if (remotes.length) {\n                    const resource =\n                        uri.sha !== undefined\n                            ? ({\n                                  type: 'revision',\n                                  branch: branch.name,\n                                  fileName: uri.getRelativePath(),\n                                  sha: uri.sha\n                              } as RemoteResource)\n                            : ({\n                                  type: 'file',\n                                  branch: branch.name,\n                                  fileName: uri.getRelativePath()\n                              } as RemoteResource);\n                    items.splice(index++, 0, new OpenRemotesCommandQuickPickItem(remotes, resource, currentCommand));\n                }\n            }\n\n            if (options.goBackCommand) {\n                items.splice(0, 0, options.goBackCommand);\n            }\n        }\n\n        if (options.progressCancellation !== undefined && options.progressCancellation.token.isCancellationRequested) {\n            return undefined;\n        }\n\n        const scope = await Container.keyboard.beginScope({\n            left: options.goBackCommand,\n            ',': options.previousPageCommand,\n            '.': options.nextPageCommand\n        });\n\n        options.progressCancellation && options.progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            matchOnDetail: true,\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { QuickPickItem, QuickPickOptions, window } from 'vscode';\nimport { Container } from '../container';\nimport { Repository } from '../git/gitService';\nimport { Iterables } from '../system';\nimport { CommandQuickPickItem, getQuickPickIgnoreFocusOut } from './commonQuickPicks';\n\nexport class RepositoryQuickPickItem implements QuickPickItem {\n    label: string;\n    description: string;\n    detail: string | undefined;\n\n    constructor(\n        public readonly repository: Repository\n    ) {\n        this.label = repository.name;\n        this.description = repository.path;\n    }\n\n    get repoPath(): string {\n        return this.repository.path;\n    }\n}\n\nexport class RepositoriesQuickPick {\n    static async show(\n        placeHolder: string,\n        goBackCommand?: CommandQuickPickItem\n    ): Promise<RepositoryQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = [\n            ...Iterables.map(await Container.git.getRepositories(), r => new RepositoryQuickPickItem(r))\n        ] as (RepositoryQuickPickItem | CommandQuickPickItem)[];\n\n        if (goBackCommand !== undefined) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        // const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        const pick = await window.showQuickPick(items, {\n            placeHolder: placeHolder,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n        } as QuickPickOptions);\n\n        // await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, QuickPickOptions, TextDocumentShowOptions, window } from 'vscode';\nimport {\n    Commands,\n    DiffWithPreviousCommandArgs,\n    OpenChangedFilesCommandArgs,\n    ShowQuickBranchHistoryCommandArgs,\n    ShowQuickRepoStatusCommandArgs,\n    ShowQuickStashListCommandArgs\n} from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport {\n    GitCommitType,\n    GitFileStatus,\n    GitLogCommit,\n    GitService,\n    GitStatus,\n    GitStatusFile,\n    GitUri\n} from '../git/gitService';\nimport { Keys } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    OpenFileCommandQuickPickItem,\n    QuickPickItem\n} from './commonQuickPicks';\n\nexport class OpenStatusFileCommandQuickPickItem extends OpenFileCommandQuickPickItem {\n    public readonly status: GitStatusFile;\n    private readonly commit: GitLogCommit;\n\n    constructor(status: GitStatusFile, realIndexStatus?: GitFileStatus, item?: QuickPickItem) {\n        const octicon = status.getOcticon();\n        const description = status.getFormattedDirectory(true);\n\n        super(\n            status.uri,\n            item || {\n                label: `${status.staged ? '$(check)' : GlyphChars.Space.repeat(3)}${Strings.pad(\n                    octicon,\n                    2,\n                    2\n                )} ${paths.basename(status.fileName)}`,\n                description: description\n            }\n        );\n\n        this.status = status;\n        if (status.indexStatus !== undefined) {\n            this.commit = new GitLogCommit(\n                GitCommitType.File,\n                status.repoPath,\n                GitService.stagedUncommittedSha,\n                'You',\n                undefined,\n                new Date(),\n                new Date(),\n                '',\n                status.fileName,\n                [status],\n                status.status,\n                status.originalFileName,\n                'HEAD',\n                status.fileName\n            );\n        }\n        else {\n            this.commit = new GitLogCommit(\n                GitCommitType.File,\n                status.repoPath,\n                GitService.uncommittedSha,\n                'You',\n                undefined,\n                new Date(),\n                new Date(),\n                '',\n                status.fileName,\n                [status],\n                status.status,\n                status.originalFileName,\n                realIndexStatus !== undefined ? GitService.stagedUncommittedSha : 'HEAD',\n                status.fileName\n            );\n        }\n    }\n\n    onDidPressKey(key: Keys): Promise<{} | undefined> {\n        return commands.executeCommand(Commands.DiffWithPrevious, GitUri.fromFile(this.status, this.status.repoPath), {\n            commit: this.commit,\n            line: 0,\n            showOptions: {\n                preserveFocus: true,\n                preview: false\n            } as TextDocumentShowOptions\n        } as DiffWithPreviousCommandArgs) as Promise<{} | undefined>;\n    }\n}\n\nexport class OpenStatusFilesCommandQuickPickItem extends CommandQuickPickItem {\n    constructor(files: GitStatusFile[], item?: QuickPickItem) {\n        const uris = files.map(f => f.uri);\n\n        super(\n            item || {\n                label: `$(file-symlink-file) Open Changed Files`,\n                description: ''\n                // detail: `Opens all of the changed files in the repository`\n            },\n            Commands.OpenChangedFiles,\n            [\n                undefined,\n                {\n                    uris\n                } as OpenChangedFilesCommandArgs\n            ]\n        );\n    }\n}\n\ninterface ComputedStatus {\n    staged: number;\n    stagedAddsAndChanges: GitStatusFile[];\n    stagedStatus: string;\n\n    unstaged: number;\n    unstagedAddsAndChanges: GitStatusFile[];\n    unstagedStatus: string;\n}\n\nexport class RepoStatusQuickPick {\n    private static computeStatus(files: GitStatusFile[]): ComputedStatus {\n        let stagedAdds = 0;\n        let unstagedAdds = 0;\n        let stagedChanges = 0;\n        let unstagedChanges = 0;\n        let stagedDeletes = 0;\n        let unstagedDeletes = 0;\n\n        const stagedAddsAndChanges: GitStatusFile[] = [];\n        const unstagedAddsAndChanges: GitStatusFile[] = [];\n\n        for (const f of files) {\n            switch (f.indexStatus) {\n                case 'A':\n                case '?':\n                    stagedAdds++;\n                    stagedAddsAndChanges.push(f);\n                    break;\n\n                case 'D':\n                    stagedDeletes++;\n                    break;\n\n                case undefined:\n                    break;\n\n                default:\n                    stagedChanges++;\n                    stagedAddsAndChanges.push(f);\n                    break;\n            }\n\n            switch (f.workingTreeStatus) {\n                case 'A':\n                case '?':\n                    unstagedAdds++;\n                    unstagedAddsAndChanges.push(f);\n                    break;\n\n                case 'D':\n                    unstagedDeletes++;\n                    break;\n\n                case undefined:\n                    break;\n\n                default:\n                    unstagedChanges++;\n                    unstagedAddsAndChanges.push(f);\n                    break;\n            }\n        }\n\n        const staged = stagedAdds + stagedChanges + stagedDeletes;\n        const unstaged = unstagedAdds + unstagedChanges + unstagedDeletes;\n\n        return {\n            staged: staged,\n            stagedStatus: staged > 0 ? `+${stagedAdds} ~${stagedChanges} -${stagedDeletes}` : '',\n            stagedAddsAndChanges: stagedAddsAndChanges,\n            unstaged: unstaged,\n            unstagedStatus: unstaged > 0 ? `+${unstagedAdds} ~${unstagedChanges} -${unstagedDeletes}` : '',\n            unstagedAddsAndChanges: unstagedAddsAndChanges\n        };\n    }\n\n    static async show(\n        status: GitStatus,\n        goBackCommand?: CommandQuickPickItem\n    ): Promise<\n        OpenStatusFileCommandQuickPickItem | OpenStatusFilesCommandQuickPickItem | CommandQuickPickItem | undefined\n    > {\n        const items = [\n            ...Iterables.flatMap(status.files, s => {\n                if (s.workingTreeStatus !== undefined && s.indexStatus !== undefined) {\n                    return [\n                        new OpenStatusFileCommandQuickPickItem(s.with({ indexStatus: null }), s.indexStatus),\n                        new OpenStatusFileCommandQuickPickItem(s.with({ workTreeStatus: null }))\n                    ];\n                }\n                else {\n                    return [new OpenStatusFileCommandQuickPickItem(s)];\n                }\n            })\n        ] as (OpenStatusFileCommandQuickPickItem | OpenStatusFilesCommandQuickPickItem | CommandQuickPickItem)[];\n\n        // Sort the status by staged and then filename\n        items.sort(\n            (a, b) =>\n                ((a as OpenStatusFileCommandQuickPickItem).status.staged ? -1 : 1) -\n                    ((b as OpenStatusFileCommandQuickPickItem).status.staged ? -1 : 1) ||\n                (a as OpenStatusFileCommandQuickPickItem).status.fileName.localeCompare(\n                    (b as OpenStatusFileCommandQuickPickItem).status.fileName,\n                    undefined,\n                    { numeric: true, sensitivity: 'base' }\n                )\n        );\n\n        const currentCommand = new CommandQuickPickItem(\n            {\n                label: `go back ${GlyphChars.ArrowBack}`,\n                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${GlyphChars.Space}$(git-branch) ${\n                    status.branch\n                } status`\n            },\n            Commands.ShowQuickRepoStatus,\n            [\n                undefined,\n                {\n                    goBackCommand\n                } as ShowQuickRepoStatusCommandArgs\n            ]\n        );\n\n        const computed = this.computeStatus(status.files);\n        if (computed.staged > 0) {\n            let index = 0;\n            const unstagedIndex = computed.unstaged > 0 ? status.files.findIndex(f => !f.staged) : -1;\n            if (unstagedIndex > -1) {\n                items.splice(\n                    unstagedIndex,\n                    0,\n                    new CommandQuickPickItem(\n                        {\n                            label: `Unstaged Files`,\n                            description: computed.unstagedStatus\n                        },\n                        Commands.ShowQuickRepoStatus,\n                        [\n                            undefined,\n                            {\n                                goBackCommand\n                            } as ShowQuickRepoStatusCommandArgs\n                        ]\n                    )\n                );\n\n                items.splice(\n                    unstagedIndex,\n                    0,\n                    new OpenStatusFilesCommandQuickPickItem(computed.stagedAddsAndChanges, {\n                        label: `${GlyphChars.Space.repeat(4)} $(file-symlink-file) Open Staged Files`,\n                        description: ''\n                    })\n                );\n\n                items.push(\n                    new OpenStatusFilesCommandQuickPickItem(computed.unstagedAddsAndChanges, {\n                        label: `${GlyphChars.Space.repeat(4)} $(file-symlink-file) Open Unstaged Files`,\n                        description: ''\n                    })\n                );\n            }\n\n            items.splice(\n                index++,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `Staged Files`,\n                        description: computed.stagedStatus\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [\n                        undefined,\n                        {\n                            goBackCommand\n                        } as ShowQuickRepoStatusCommandArgs\n                    ]\n                )\n            );\n        }\n        else if (status.files.some(f => !f.staged)) {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `Unstaged Files`,\n                        description: computed.unstagedStatus\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [\n                        undefined,\n                        {\n                            goBackCommand\n                        } as ShowQuickRepoStatusCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (status.files.length) {\n            items.push(\n                new OpenStatusFilesCommandQuickPickItem(\n                    computed.stagedAddsAndChanges.concat(computed.unstagedAddsAndChanges)\n                )\n            );\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: '$(x) Close Unchanged Files',\n                        description: ''\n                    },\n                    Commands.CloseUnchangedFiles\n                )\n            );\n        }\n        else {\n            items.push(\n                new CommandQuickPickItem(\n                    {\n                        label: `No changes in the working tree`,\n                        description: ''\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [\n                        undefined,\n                        {\n                            goBackCommand\n                        } as ShowQuickRepoStatusCommandArgs\n                    ]\n                )\n            );\n        }\n\n        items.splice(\n            0,\n            0,\n            new CommandQuickPickItem(\n                {\n                    label: `$(inbox) Show Stashed Changes`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows stashed changes in the repository`\n                },\n                Commands.ShowQuickStashList,\n                [\n                    GitUri.fromRepoPath(status.repoPath),\n                    {\n                        goBackCommand: currentCommand\n                    } as ShowQuickStashListCommandArgs\n                ]\n            )\n        );\n\n        if (status.upstream && status.state.ahead) {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(cloud-upload)${GlyphChars.Space} ${status.state.ahead} Commit${\n                            status.state.ahead > 1 ? 's' : ''\n                        } ahead of ${GlyphChars.Space}$(git-branch) ${status.upstream}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows commits in ${\n                            GlyphChars.Space\n                        }$(git-branch) ${status.branch} but not ${GlyphChars.Space}$(git-branch) ${status.upstream}`\n                    },\n                    Commands.ShowQuickBranchHistory,\n                    [\n                        GitUri.fromRepoPath(status.repoPath, `${status.upstream}..${status.ref}`),\n                        {\n                            branch: status.ref,\n                            maxCount: 0,\n                            goBackCommand: currentCommand\n                        } as ShowQuickBranchHistoryCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (status.upstream && status.state.behind) {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(cloud-download)${GlyphChars.Space} ${status.state.behind} Commit${\n                            status.state.behind > 1 ? 's' : ''\n                        } behind ${GlyphChars.Space}$(git-branch) ${status.upstream}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows commits in ${\n                            GlyphChars.Space\n                        }$(git-branch) ${status.upstream} but not ${GlyphChars.Space}$(git-branch) ${status.branch}${\n                            status.sha\n                                ? ` (since ${GlyphChars.Space}$(git-commit) ${GitService.shortenSha(status.sha)})`\n                                : ''\n                        }`\n                    },\n                    Commands.ShowQuickBranchHistory,\n                    [\n                        GitUri.fromRepoPath(status.repoPath, `${status.ref}..${status.upstream}`),\n                        {\n                            branch: status.upstream,\n                            maxCount: 0,\n                            goBackCommand: currentCommand\n                        } as ShowQuickBranchHistoryCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (status.upstream && !status.state.ahead && !status.state.behind) {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(git-branch) ${status.branch} is up-to-date with ${GlyphChars.Space}$(git-branch) ${\n                            status.upstream\n                        }`,\n                        description: ''\n                    },\n                    Commands.ShowQuickRepoStatus,\n                    [\n                        undefined,\n                        {\n                            goBackCommand\n                        } as ShowQuickRepoStatusCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder: `status of ${status.branch}${\n                status.upstream ? ` ${Strings.pad(GlyphChars.ArrowLeftRightLong, 1, 1)} ${status.upstream}` : ''\n            }`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut(),\n            onDidSelectItem: (item: QuickPickItem) => {\n                void scope.setKeyCommand('right', item);\n            }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, QuickPickOptions, window } from 'vscode';\nimport { Commands, StashSaveCommandArgs } from '../commands';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitStash } from '../git/gitService';\nimport { KeyNoopCommand } from '../keyboard';\nimport { Iterables, Strings } from '../system';\nimport {\n    CommandQuickPickItem,\n    CommitQuickPickItem,\n    getQuickPickIgnoreFocusOut,\n    showQuickPickProgress\n} from './commonQuickPicks';\n\nexport class StashListQuickPick {\n    static showProgress(mode: 'list' | 'apply') {\n        const message =\n            mode === 'apply'\n                ? `Apply stashed changes to your working tree${GlyphChars.Ellipsis}`\n                : `stashed changes ${GlyphChars.Dash} search by message, filename, or commit id`;\n        return showQuickPickProgress(message, {\n            left: KeyNoopCommand,\n            ',': KeyNoopCommand,\n            '.': KeyNoopCommand\n        });\n    }\n\n    static async show(\n        stash: GitStash,\n        mode: 'list' | 'apply',\n        progressCancellation: CancellationTokenSource,\n        goBackCommand?: CommandQuickPickItem,\n        currentCommand?: CommandQuickPickItem\n    ): Promise<CommitQuickPickItem | CommandQuickPickItem | undefined> {\n        const items = ((stash && Array.from(Iterables.map(stash.commits.values(), c => new CommitQuickPickItem(c)))) ||\n            []) as (CommitQuickPickItem | CommandQuickPickItem)[];\n\n        if (mode === 'list') {\n            items.splice(\n                0,\n                0,\n                new CommandQuickPickItem(\n                    {\n                        label: `$(plus) Stash Changes`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} stashes all changes`\n                    },\n                    Commands.StashSave,\n                    [\n                        {\n                            goBackCommand: currentCommand\n                        } as StashSaveCommandArgs\n                    ]\n                )\n            );\n        }\n\n        if (goBackCommand) {\n            items.splice(0, 0, goBackCommand);\n        }\n\n        if (progressCancellation.token.isCancellationRequested) return undefined;\n\n        const scope = await Container.keyboard.beginScope({ left: goBackCommand });\n\n        progressCancellation.cancel();\n\n        const pick = await window.showQuickPick(items, {\n            matchOnDescription: true,\n            placeHolder:\n                mode === 'apply'\n                    ? `Apply stashed changes to your working tree${GlyphChars.Ellipsis}`\n                    : `stashed changes ${GlyphChars.Dash} search by message, filename, or commit id`,\n            ignoreFocusOut: getQuickPickIgnoreFocusOut()\n            // onDidSelectItem: (item: QuickPickItem) => {\n            //     scope.setKeyCommand('right', item);\n            // }\n        } as QuickPickOptions);\n\n        await scope.dispose();\n\n        return pick;\n    }\n}\n","'use strict';\nimport { Disposable, TextEditor, TreeItem, TreeItemCollapsibleState, Uri, window } from 'vscode';\nimport { UriComparer } from '../../comparers';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitCommitish, GitUri } from '../../git/gitService';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../../quickpicks';\nimport { debug, Functions, gate, log } from '../../system';\nimport { FileHistoryView } from '../fileHistoryView';\nimport { MessageNode } from './common';\nimport { FileHistoryNode } from './fileHistoryNode';\nimport { ResourceType, SubscribeableViewNode, unknownGitUri, ViewNode } from './viewNode';\n\nexport class FileHistoryTrackerNode extends SubscribeableViewNode<FileHistoryView> {\n    private _baseRef: string | undefined;\n    private _fileUri: GitUri | undefined;\n    private _child: FileHistoryNode | undefined;\n\n    constructor(view: FileHistoryView) {\n        super(unknownGitUri, view);\n    }\n\n    dispose() {\n        super.dispose();\n\n        this.resetChild();\n    }\n\n    @debug()\n    resetChild() {\n        if (this._child !== undefined) {\n            this._child.dispose();\n            this._child = undefined;\n        }\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._child === undefined) {\n            if (this._fileUri === undefined && this.uri === unknownGitUri) {\n                return [\n                    new MessageNode(\n                        this.view,\n                        this,\n                        'There are no editors open that can provide file history information.'\n                    )\n                ];\n            }\n\n            const uri = this._fileUri || this.uri;\n            const fileUri = new GitUri(uri, { ...uri, sha: this._baseRef || uri.sha } as GitCommitish);\n            this._child = new FileHistoryNode(fileUri, this.view, this);\n        }\n\n        return [this._child];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem('File History', TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.ActiveFileHistory;\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @gate()\n    @log()\n    async changeBase() {\n        const pick = await new BranchesAndTagsQuickPick(this.uri.repoPath!).show(\n            `Change the file history base to${GlyphChars.Ellipsis}`,\n            {\n                allowCommitId: true,\n                checked: this._baseRef\n            }\n        );\n        if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n        this._baseRef = pick.current ? undefined : pick.ref;\n        if (this._child === undefined) return;\n\n        this._uri = unknownGitUri;\n        await this.triggerChange();\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        const editor = window.activeTextEditor;\n        if (editor == null || !Container.git.isTrackable(editor.document.uri)) {\n            if (\n                this.uri === unknownGitUri ||\n                (Container.git.isTrackable(this.uri) &&\n                    window.visibleTextEditors.some(e => e.document && UriComparer.equals(e.document.uri, this.uri)))\n            ) {\n                return true;\n            }\n\n            this._uri = unknownGitUri;\n            this.resetChild();\n\n            return false;\n        }\n\n        if (UriComparer.equals(editor!.document.uri, this.uri)) {\n            return true;\n        }\n\n        let gitUri = await GitUri.fromUri(editor!.document.uri);\n\n        let uri;\n        if (gitUri.sha !== undefined) {\n            // If we have a sha, normalize the history to the working file (so we get a full history all the time)\n            const [fileName, repoPath] = await Container.git.findWorkingFileName(\n                gitUri.fsPath,\n                gitUri.repoPath,\n                gitUri.sha\n            );\n\n            if (fileName !== undefined) {\n                uri = GitUri.resolveToUri(fileName, repoPath);\n            }\n        }\n\n        if (this.uri !== unknownGitUri && UriComparer.equals(uri || gitUri, this.uri)) {\n            return true;\n        }\n\n        if (uri !== undefined) {\n            gitUri = await GitUri.fromUri(uri);\n        }\n\n        this._uri = gitUri;\n        this.resetChild();\n\n        return false;\n    }\n\n    @log()\n    setEditorFollowing(enabled: boolean) {\n        if (enabled && this._fileUri !== undefined) {\n            this._fileUri = undefined;\n            this._baseRef = undefined;\n\n            this._uri = unknownGitUri;\n            // Don't need to call triggerChange here, since canSubscribe will do it\n        }\n\n        this.canSubscribe = enabled;\n    }\n\n    @gate()\n    @log()\n    async showHistoryForUri(uri: GitUri, baseRef?: string) {\n        this._fileUri = uri;\n        this._baseRef = baseRef;\n\n        this._uri = unknownGitUri;\n        await this.triggerChange();\n    }\n\n    @debug()\n    protected async subscribe() {\n        return Disposable.from(\n            window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveEditorChanged, 500), this)\n        );\n    }\n\n    @debug({ args: false })\n    private onActiveEditorChanged(editor: TextEditor | undefined) {\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { Disposable, Selection, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitCommitType, GitFile, GitLogCommit } from '../../git/git';\nimport {\n    GitService,\n    GitUri,\n    RepositoryChange,\n    RepositoryChangeEvent,\n    RepositoryFileSystemChangeEvent\n} from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { MessageNode } from './common';\nimport { insertDateMarkers } from './helpers';\nimport { ResourceType, SubscribeableViewNode, ViewNode } from './viewNode';\n\nexport class LineHistoryNode extends SubscribeableViewNode {\n    constructor(\n        uri: GitUri,\n        view: View,\n        parent: ViewNode,\n        public readonly selection: Selection\n    ) {\n        super(uri, view, parent);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const children: ViewNode[] = [];\n\n        const displayAs =\n            CommitFileNodeDisplayAs.CommitLabel |\n            (this.view.config.avatars ? CommitFileNodeDisplayAs.Gravatar : CommitFileNodeDisplayAs.StatusIcon);\n\n        const log = await Container.git.getLogForFile(this.uri.repoPath, this.uri.fsPath, {\n            ref: this.uri.sha,\n            range: this.selection\n        });\n        if (log !== undefined) {\n            children.push(\n                ...insertDateMarkers(\n                    Iterables.filterMap(\n                        log.commits.values(),\n                        c => new CommitFileNode(this.view, this, c.files[0], c, displayAs, this.selection)\n                    ),\n                    this\n                )\n            );\n        }\n\n        const blame = await Container.git.getBlameForLine(this.uri, this.selection.active.line);\n        if (blame !== undefined) {\n            let first = children[0] as CommitFileNode | undefined;\n            if (first !== undefined && !(first instanceof CommitFileNode)) {\n                first = children[1] as CommitFileNode | undefined;\n            }\n\n            if (first === undefined || first.commit.sha !== blame.commit.sha) {\n                const file: GitFile = {\n                    fileName: blame.commit.fileName,\n                    indexStatus: '?',\n                    originalFileName: blame.commit.originalFileName,\n                    repoPath: this.uri.repoPath!,\n                    status: 'M',\n                    workingTreeStatus: '?'\n                };\n\n                const commit = new GitLogCommit(\n                    GitCommitType.File,\n                    this.uri.repoPath!,\n                    blame.commit.sha,\n                    'You',\n                    blame.commit.email,\n                    blame.commit.date,\n                    // TODO: Add committed date to blame?\n                    blame.commit.date,\n                    blame.commit.message,\n                    blame.commit.fileName,\n                    [file],\n                    'M',\n                    blame.commit.originalFileName,\n                    blame.commit.previousSha,\n                    blame.commit.originalFileName || blame.commit.fileName\n                );\n\n                children.splice(0, 0, new CommitFileNode(this.view, this, file, commit, displayAs, this.selection));\n            }\n        }\n\n        if (children.length === 0) return [new MessageNode(this.view, this, 'No line history could be found.')];\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const lines = this.selection.isSingleLine\n            ? ` #${this.selection.start.line + 1}`\n            : ` #${this.selection.start.line + 1}-${this.selection.end.line + 1}`;\n        const item = new TreeItem(\n            `${this.uri.getFilename()}${lines}${\n                this.uri.sha\n                    ? ` ${\n                          this.uri.sha === GitService.deletedOrMissingSha ? this.uri.shortSha : `(${this.uri.shortSha})`\n                      }`\n                    : ''\n            }`,\n            TreeItemCollapsibleState.Expanded\n        );\n        item.contextValue = ResourceType.LineHistory;\n        item.description = this.uri.getDirectory();\n        item.tooltip = `History of ${this.uri.getFilename()}${lines}\\n${this.uri.getDirectory()}/${\n            this.uri.sha === undefined ? '' : `\\n\\n${this.uri.sha}`\n        }`;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-history.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-history.svg')\n        };\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @debug()\n    protected async subscribe() {\n        const repo = await Container.git.getRepository(this.uri);\n        if (repo === undefined) return undefined;\n\n        const subscription = Disposable.from(\n            repo.onDidChange(this.onRepoChanged, this),\n            repo.onDidChangeFileSystem(this.onRepoFileSystemChanged, this),\n            { dispose: () => repo.stopWatchingFileSystem() }\n        );\n\n        repo.startWatchingFileSystem();\n\n        return subscription;\n    }\n\n    private onRepoChanged(e: RepositoryChangeEvent) {\n        if (!e.changed(RepositoryChange.Repository)) return;\n\n        Logger.log(`LineHistoryNode.onRepoChanged(${e.changes.join()}); triggering node refresh`);\n\n        void this.triggerChange();\n    }\n\n    private onRepoFileSystemChanged(e: RepositoryFileSystemChangeEvent) {\n        if (!e.uris.some(uri => uri.toString(true) === this.uri.toString(true))) return;\n\n        Logger.debug(`LineHistoryNode.onRepoFileSystemChanged(${this.uri.toString(true)}); triggering node refresh`);\n\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { Disposable, Selection, TreeItem, TreeItemCollapsibleState, window } from 'vscode';\nimport { UriComparer } from '../../comparers';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitCommitish, GitUri } from '../../git/gitService';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../../quickpicks';\nimport { debug, Functions, gate, log } from '../../system';\nimport { LinesChangeEvent } from '../../trackers/gitLineTracker';\nimport { LineHistoryView } from '../lineHistoryView';\nimport { MessageNode } from './common';\nimport { LineHistoryNode } from './lineHistoryNode';\nimport { ResourceType, SubscribeableViewNode, unknownGitUri, ViewNode } from './viewNode';\n\nexport class LineHistoryTrackerNode extends SubscribeableViewNode<LineHistoryView> {\n    private _base: string | undefined;\n    private _child: LineHistoryNode | undefined;\n    private _selection: Selection | undefined;\n\n    constructor(view: LineHistoryView) {\n        super(unknownGitUri, view);\n    }\n\n    dispose() {\n        super.dispose();\n\n        this.resetChild();\n    }\n\n    @debug()\n    resetChild() {\n        if (this._child !== undefined) {\n            this._child.dispose();\n            this._child = undefined;\n        }\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._child === undefined) {\n            if (this.uri === unknownGitUri) {\n                return [\n                    new MessageNode(\n                        this.view,\n                        this,\n                        'There are no editors open that can provide line history information.'\n                    )\n                ];\n            }\n\n            const fileUri = new GitUri(this.uri, { ...this.uri, sha: this.uri.sha || this._base } as GitCommitish);\n            this._child = new LineHistoryNode(fileUri, this.view, this, this._selection!);\n        }\n\n        return [this._child];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem('Line History', TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.ActiveLineHistory;\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @gate()\n    @log()\n    async changeBase() {\n        const pick = await new BranchesAndTagsQuickPick(this.uri.repoPath!).show(\n            `Change the line history base to${GlyphChars.Ellipsis}`,\n            {\n                allowCommitId: true,\n                checked: this._base\n            }\n        );\n        if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n        this._base = pick.current ? undefined : pick.ref;\n        if (this._child === undefined) return;\n\n        this._uri = unknownGitUri;\n        await this.triggerChange();\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        const editor = window.activeTextEditor;\n        if (editor == null || !Container.git.isTrackable(editor.document.uri)) {\n            if (\n                this.uri === unknownGitUri ||\n                (Container.git.isTrackable(this.uri) &&\n                    window.visibleTextEditors.some(e => e.document && UriComparer.equals(e.document.uri, this.uri)))\n            ) {\n                return true;\n            }\n\n            this._uri = unknownGitUri;\n            this._selection = undefined;\n            this.resetChild();\n\n            return false;\n        }\n\n        if (\n            UriComparer.equals(editor!.document.uri, this.uri) &&\n            (this._selection !== undefined && editor.selection.isEqual(this._selection))\n        ) {\n            return true;\n        }\n\n        const gitUri = await GitUri.fromUri(editor!.document.uri);\n\n        if (\n            this.uri !== unknownGitUri &&\n            UriComparer.equals(gitUri, this.uri) &&\n            (this._selection !== undefined && editor.selection.isEqual(this._selection))\n        ) {\n            return true;\n        }\n\n        this._uri = gitUri;\n        this._selection = editor.selection;\n        this.resetChild();\n\n        return false;\n    }\n\n    @log()\n    setEditorFollowing(enabled: boolean) {\n        this.canSubscribe = enabled;\n    }\n\n    @debug()\n    protected async subscribe() {\n        if (Container.lineTracker.isSubscribed(this)) return undefined;\n\n        const onActiveLinesChanged = Functions.debounce(this.onActiveLinesChanged.bind(this), 250);\n\n        return Container.lineTracker.start(\n            this,\n            Disposable.from(\n                Container.lineTracker.onDidChangeActiveLines((e: LinesChangeEvent) => {\n                    if (e.pending) return;\n\n                    onActiveLinesChanged(e);\n                })\n            )\n        );\n    }\n\n    @debug({ args: false })\n    private onActiveLinesChanged(e: LinesChangeEvent) {\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { GitRemote, GitRemoteType, GitUri, Repository } from '../../git/gitService';\nimport { Arrays, Iterables, log } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchNode } from './branchNode';\nimport { BranchOrTagFolderNode } from './branchOrTagFolderNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class RemoteNode extends ViewNode<RepositoriesView> {\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly remote: GitRemote,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.remote.repoPath}):remote(${this.remote.name})`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const branches = await this.repo.getBranches();\n        if (branches === undefined) return [];\n\n        branches.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\n\n        // filter remote branches\n        const branchNodes = [\n            ...Iterables.filterMap(branches, b =>\n                !b.remote || !b.name.startsWith(this.remote.name)\n                    ? undefined\n                    : new BranchNode(this.uri, this.view, this, b)\n            )\n        ];\n        if (this.view.config.branches.layout === ViewBranchesLayout.List) return branchNodes;\n\n        const hierarchy = Arrays.makeHierarchical(\n            branchNodes,\n            n => (n.branch.detached ? [n.branch.name] : n.branch.getName().split('/')),\n            (...paths: string[]) => paths.join('/'),\n            this.view.config.files.compact\n        );\n\n        const root = new BranchOrTagFolderNode(\n            this.view,\n            this,\n            'remote-branch',\n            this.repo.path,\n            '',\n            undefined,\n            hierarchy\n        );\n        const children = (await root.getChildren()) as (BranchOrTagFolderNode | BranchNode)[];\n\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const fetch = this.remote.types.find(rt => rt.type === GitRemoteType.Fetch);\n        const push = this.remote.types.find(rt => rt.type === GitRemoteType.Push);\n\n        let separator;\n        if (fetch && push) {\n            separator = GlyphChars.ArrowLeftRightLong;\n        }\n        else if (fetch) {\n            separator = GlyphChars.ArrowLeft;\n        }\n        else if (push) {\n            separator = GlyphChars.ArrowRight;\n        }\n        else {\n            separator = GlyphChars.Dash;\n        }\n\n        const item = new TreeItem(this.remote.name, TreeItemCollapsibleState.Collapsed);\n        item.description = `${separator}${GlyphChars.Space} ${\n            this.remote.provider !== undefined ? this.remote.provider.name : this.remote.domain\n        } ${GlyphChars.Space}${GlyphChars.Dot}${GlyphChars.Space} ${this.remote.path}`;\n        item.contextValue = ResourceType.Remote;\n        item.id = this.id;\n        item.tooltip = `${this.remote.name}\n${this.remote.path} (${this.remote.provider !== undefined ? this.remote.provider.name : this.remote.domain})`;\n\n        if (this.remote.provider !== undefined) {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath(`images/dark/icon-${this.remote.provider.icon}.svg`),\n                light: Container.context.asAbsolutePath(`images/light/icon-${this.remote.provider.icon}.svg`)\n            };\n        }\n        else {\n            item.iconPath = {\n                dark: Container.context.asAbsolutePath('images/dark/icon-remote.svg'),\n                light: Container.context.asAbsolutePath('images/light/icon-remote.svg')\n            };\n        }\n\n        return item;\n    }\n\n    @log()\n    fetch(options: { progress?: boolean } = {}) {\n        return this.repo.fetch({ ...options, remote: this.remote.name });\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { MessageNode } from './common';\nimport { RemoteNode } from './remoteNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class RemotesNode extends ViewNode<RepositoriesView> {\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.repo.path}):remotes`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const remotes = await this.repo.getRemotes();\n        if (remotes === undefined || remotes.length === 0) {\n            return [new MessageNode(this.view, this, 'No remotes could be found')];\n        }\n\n        remotes.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\n        return [...Iterables.map(remotes, r => new RemoteNode(this.uri, this.view, this, r, this.repo))];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Remotes`, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Remotes;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-remote.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-remote.svg')\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport {\n    commands,\n    ConfigurationChangeEvent,\n    Disposable,\n    Event,\n    EventEmitter,\n    TreeDataProvider,\n    TreeItem,\n    TreeItemCollapsibleState,\n    TreeView,\n    TreeViewExpansionEvent,\n    TreeViewVisibilityChangeEvent,\n    window\n} from 'vscode';\nimport { configuration } from '../configuration';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { debug, Functions, log } from '../system';\nimport { CompareView } from './compareView';\nimport { FileHistoryView } from './fileHistoryView';\nimport { LineHistoryView } from './lineHistoryView';\nimport { ViewNode } from './nodes';\nimport { isPageable } from './nodes/viewNode';\nimport { RepositoriesView } from './repositoriesView';\nimport { SearchView } from './searchView';\nimport { RefreshNodeCommandArgs } from './viewCommands';\n\nexport enum RefreshReason {\n    ConfigurationChanged = 'ConfigurationChanged',\n    VisibilityChanged = 'VisibilityChanged'\n}\n\nexport type View = RepositoriesView | FileHistoryView | LineHistoryView | CompareView | SearchView;\n\nexport interface TreeViewNodeStateChangeEvent<T> extends TreeViewExpansionEvent<T> {\n    state: TreeItemCollapsibleState;\n}\n\nexport abstract class ViewBase<TRoot extends ViewNode<View>> implements TreeDataProvider<ViewNode>, Disposable {\n    protected _onDidChangeTreeData = new EventEmitter<ViewNode>();\n    public get onDidChangeTreeData(): Event<ViewNode> {\n        return this._onDidChangeTreeData.event;\n    }\n\n    private _onDidChangeVisibility = new EventEmitter<TreeViewVisibilityChangeEvent>();\n    public get onDidChangeVisibility(): Event<TreeViewVisibilityChangeEvent> {\n        return this._onDidChangeVisibility.event;\n    }\n\n    private _onDidChangeNodeState = new EventEmitter<TreeViewNodeStateChangeEvent<ViewNode>>();\n    public get onDidChangeNodeState(): Event<TreeViewNodeStateChangeEvent<ViewNode>> {\n        return this._onDidChangeNodeState.event;\n    }\n\n    protected _disposable: Disposable | undefined;\n    protected _root: TRoot | undefined;\n    protected _tree: TreeView<ViewNode> | undefined;\n\n    constructor(\n        public readonly id: string\n    ) {\n        this.registerCommands();\n\n        Container.context.subscriptions.push(configuration.onDidChange(this.onConfigurationChanged, this));\n        setImmediate(() => this.onConfigurationChanged(configuration.initializingChangeEvent));\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    getQualifiedCommand(command: string) {\n        return `${this.id}.${command}`;\n    }\n\n    protected abstract get location(): string;\n\n    protected abstract getRoot(): TRoot;\n    protected abstract registerCommands(): void;\n    protected abstract onConfigurationChanged(e: ConfigurationChangeEvent): void;\n\n    protected initialize(container?: string, options: { showCollapseAll?: boolean } = {}) {\n        if (this._disposable) {\n            this._disposable.dispose();\n            this._onDidChangeTreeData = new EventEmitter<ViewNode>();\n        }\n\n        this._tree = window.createTreeView(`${this.id}${container ? `:${container}` : ''}`, {\n            ...options,\n            treeDataProvider: this\n        });\n        this._disposable = Disposable.from(\n            this._tree,\n            this._tree.onDidChangeVisibility(Functions.debounce(this.onVisibilityChanged, 250), this),\n            this._tree.onDidCollapseElement(this.onElementCollapsed, this),\n            this._tree.onDidExpandElement(this.onElementExpanded, this)\n        );\n    }\n\n    protected ensureRoot() {\n        if (this._root === undefined) {\n            this._root = this.getRoot();\n        }\n\n        return this._root;\n    }\n\n    getChildren(node?: ViewNode): ViewNode[] | Promise<ViewNode[]> {\n        if (node !== undefined) return node.getChildren();\n\n        const root = this.ensureRoot();\n        return root.getChildren();\n    }\n\n    getParent(node: ViewNode): ViewNode | undefined {\n        return node.getParent();\n    }\n\n    getTreeItem(node: ViewNode): TreeItem | Promise<TreeItem> {\n        return node.getTreeItem();\n    }\n\n    protected onElementCollapsed(e: TreeViewExpansionEvent<ViewNode>) {\n        this._onDidChangeNodeState.fire({ ...e, state: TreeItemCollapsibleState.Collapsed });\n    }\n\n    protected onElementExpanded(e: TreeViewExpansionEvent<ViewNode>) {\n        this._onDidChangeNodeState.fire({ ...e, state: TreeItemCollapsibleState.Expanded });\n    }\n\n    protected onVisibilityChanged(e: TreeViewVisibilityChangeEvent) {\n        this._onDidChangeVisibility.fire(e);\n    }\n\n    get selection(): ViewNode[] {\n        if (this._tree === undefined || this._root === undefined) return [];\n\n        return this._tree.selection;\n    }\n\n    get visible(): boolean {\n        return this._tree !== undefined ? this._tree.visible : false;\n    }\n\n    @debug()\n    async refresh(reason?: RefreshReason) {\n        if (this._root !== undefined) {\n            await this._root.refresh(reason);\n        }\n\n        this.triggerNodeChange();\n    }\n\n    @debug({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    async refreshNode(node: ViewNode, args?: RefreshNodeCommandArgs) {\n        if (args !== undefined) {\n            if (isPageable(node)) {\n                if (args.maxCount === undefined || args.maxCount === 0) {\n                    node.maxCount = args.maxCount;\n                }\n                else {\n                    node.maxCount = (node.maxCount || args.maxCount) + args.maxCount;\n                }\n            }\n        }\n\n        const cancel = await node.refresh();\n        if (cancel === true) return;\n\n        this.triggerNodeChange(node);\n    }\n\n    @log({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    async reveal(\n        node: ViewNode,\n        options?: {\n            select?: boolean;\n            focus?: boolean;\n            expand?: boolean | number;\n        }\n    ) {\n        if (this._tree === undefined) return;\n\n        try {\n            await this._tree.reveal(node, options);\n        }\n        catch (ex) {\n            Logger.error(ex);\n        }\n    }\n\n    @log()\n    async show() {\n        try {\n            const location = this.location;\n            return await commands.executeCommand(`${this.id}${location ? `:${location}` : ''}.focus`);\n        }\n        catch (ex) {\n            Logger.error(ex);\n            return;\n        }\n    }\n\n    @debug({\n        args: { 0: (n: ViewNode) => (n != null ? n.toString() : '') }\n    })\n    triggerNodeChange(node?: ViewNode) {\n        // Since the root node won't actually refresh, force everything\n        this._onDidChangeTreeData.fire(node !== undefined && node !== this._root ? node : undefined);\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport {\n    commands,\n    Disposable,\n    ExtensionContext,\n    SourceControlResourceGroup,\n    SourceControlResourceState,\n    TextDocumentShowOptions,\n    TextEditor,\n    TextEditorEdit,\n    Uri,\n    ViewColumn,\n    window,\n    workspace\n} from 'vscode';\nimport { BuiltInCommands, DocumentSchemes, ImageMimetypes } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitCommit, GitFile, GitRemote, GitUri, Repository } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { CommandQuickPickItem, RepositoriesQuickPick } from '../quickpicks';\n// import { Telemetry } from '../telemetry';\nimport { ViewNode, ViewRefNode } from '../views/nodes';\n\nexport enum Commands {\n    ClearFileAnnotations = 'gitlens.clearFileAnnotations',\n    CloseUnchangedFiles = 'gitlens.closeUnchangedFiles',\n    ComputingFileAnnotations = 'gitlens.computingFileAnnotations',\n    CopyMessageToClipboard = 'gitlens.copyMessageToClipboard',\n    CopyRemoteFileUrlToClipboard = 'gitlens.copyRemoteFileUrlToClipboard',\n    CopyShaToClipboard = 'gitlens.copyShaToClipboard',\n    DiffDirectory = 'gitlens.diffDirectory',\n    DiffDirectoryWithHead = 'gitlens.diffDirectoryWithHead',\n    DiffHeadWithBranch = 'gitlens.diffHeadWithBranch',\n    DiffWorkingWithBranch = 'gitlens.diffWorkingWithBranch',\n    ExternalDiffAll = 'gitlens.externalDiffAll',\n    DiffWith = 'gitlens.diffWith',\n    DiffWithBranch = 'gitlens.diffWithBranch',\n    DiffWithNext = 'gitlens.diffWithNext',\n    DiffWithPrevious = 'gitlens.diffWithPrevious',\n    DiffWithPreviousInDiff = 'gitlens.diffWithPreviousInDiff',\n    DiffLineWithPrevious = 'gitlens.diffLineWithPrevious',\n    DiffWithRevision = 'gitlens.diffWithRevision',\n    DiffWithWorking = 'gitlens.diffWithWorking',\n    DiffLineWithWorking = 'gitlens.diffLineWithWorking',\n    ExternalDiff = 'gitlens.externalDiff',\n    FetchRepositories = 'gitlens.fetchRepositories',\n    OpenChangedFiles = 'gitlens.openChangedFiles',\n    OpenBranchesInRemote = 'gitlens.openBranchesInRemote',\n    OpenBranchInRemote = 'gitlens.openBranchInRemote',\n    OpenCommitInRemote = 'gitlens.openCommitInRemote',\n    OpenFileInRemote = 'gitlens.openFileInRemote',\n    OpenFileRevision = 'gitlens.openFileRevision',\n    OpenInRemote = 'gitlens.openInRemote',\n    OpenRepoInRemote = 'gitlens.openRepoInRemote',\n    OpenWorkingFile = 'gitlens.openWorkingFile',\n    PullRepositories = 'gitlens.pullRepositories',\n    PushRepositories = 'gitlens.pushRepositories',\n    ResetSuppressedWarnings = 'gitlens.resetSuppressedWarnings',\n    ShowCommitInView = 'gitlens.showCommitInView',\n    SearchCommits = 'gitlens.showCommitSearch',\n    SearchCommitsInView = 'gitlens.views.search.searchCommits',\n    ShowCompareView = 'gitlens.showCompareView',\n    ShowFileHistoryView = 'gitlens.showFileHistoryView',\n    ShowFileHistoryInView = 'gitlens.showFileHistoryInView',\n    ShowLineHistoryView = 'gitlens.showLineHistoryView',\n    ShowLastQuickPick = 'gitlens.showLastQuickPick',\n    ShowQuickBranchHistory = 'gitlens.showQuickBranchHistory',\n    ShowQuickCommitDetails = 'gitlens.showQuickCommitDetails',\n    ShowQuickCommitFileDetails = 'gitlens.showQuickCommitFileDetails',\n    ShowQuickCurrentBranchHistory = 'gitlens.showQuickRepoHistory',\n    ShowQuickFileHistory = 'gitlens.showQuickFileHistory',\n    ShowQuickRepoStatus = 'gitlens.showQuickRepoStatus',\n    ShowQuickRevisionDetails = 'gitlens.showQuickRevisionDetails',\n    ShowQuickStashList = 'gitlens.showQuickStashList',\n    ShowRepositoriesView = 'gitlens.showRepositoriesView',\n    ShowSearchView = 'gitlens.showSearchView',\n    ShowSettingsPage = 'gitlens.showSettingsPage',\n    ShowWelcomePage = 'gitlens.showWelcomePage',\n    StashApply = 'gitlens.stashApply',\n    StashDelete = 'gitlens.stashDelete',\n    StashSave = 'gitlens.stashSave',\n    StashSaveFiles = 'gitlens.stashSaveFiles',\n    SupportGitLens = 'gitlens.supportGitLens',\n    SwitchMode = 'gitlens.switchMode',\n    ToggleCodeLens = 'gitlens.toggleCodeLens',\n    ToggleFileBlame = 'gitlens.toggleFileBlame',\n    ToggleFileHeatmap = 'gitlens.toggleFileHeatmap',\n    ToggleFileRecentChanges = 'gitlens.toggleFileRecentChanges',\n    ToggleLineBlame = 'gitlens.toggleLineBlame',\n    ToggleReviewMode = 'gitlens.toggleReviewMode',\n    ToggleZenMode = 'gitlens.toggleZenMode',\n    ViewsOpenDirectoryDiff = 'gitlens.views.openDirectoryDiff',\n    ViewsOpenDirectoryDiffWithWorking = 'gitlens.views.openDirectoryDiffWithWorking'\n}\n\ninterface CommandConstructor {\n    new (): any;\n}\n\nconst registrableCommands: CommandConstructor[] = [];\n\nexport function command(): ClassDecorator {\n    return (target: any) => {\n        registrableCommands.push(target);\n    };\n}\n\nexport function registerCommands(context: ExtensionContext): void {\n    for (const c of registrableCommands) {\n        context.subscriptions.push(new c());\n    }\n}\n\nexport function getCommandUri(uri?: Uri, editor?: TextEditor): Uri | undefined {\n    if (uri instanceof Uri) return uri;\n    if (editor == null) return undefined;\n\n    const document = editor.document;\n    if (document == null) return undefined;\n\n    return document.uri;\n}\n\nexport async function getRepoPathOrActiveOrPrompt(\n    uri: Uri | undefined,\n    editor: TextEditor | undefined,\n    placeholder: string,\n    goBackCommand?: CommandQuickPickItem\n) {\n    let repoPath = await Container.git.getRepoPathOrActive(uri, editor);\n    if (!repoPath) {\n        const pick = await RepositoriesQuickPick.show(placeholder, goBackCommand);\n        if (pick instanceof CommandQuickPickItem) {\n            await pick.execute();\n            return undefined;\n        }\n\n        if (pick === undefined) {\n            if (goBackCommand !== undefined) {\n                await goBackCommand.execute();\n            }\n            return undefined;\n        }\n\n        repoPath = pick.repoPath;\n    }\n    return repoPath;\n}\n\nexport async function getRepoPathOrPrompt(\n    uri: Uri | undefined,\n    placeholder: string,\n    goBackCommand?: CommandQuickPickItem\n) {\n    let repoPath = await Container.git.getRepoPath(uri);\n    if (!repoPath) {\n        const pick = await RepositoriesQuickPick.show(placeholder, goBackCommand);\n        if (pick instanceof CommandQuickPickItem) {\n            await pick.execute();\n            return undefined;\n        }\n\n        if (pick === undefined) {\n            if (goBackCommand !== undefined) {\n                await goBackCommand.execute();\n            }\n            return undefined;\n        }\n\n        repoPath = pick.repoPath;\n    }\n    return repoPath;\n}\n\nexport interface CommandContextParsingOptions {\n    editor: boolean;\n    uri: boolean;\n}\n\nexport interface CommandBaseContext {\n    command: string;\n    editor?: TextEditor;\n    uri?: Uri;\n}\n\nexport interface CommandScmGroupsContext extends CommandBaseContext {\n    type: 'scm-groups';\n    scmResourceGroups: SourceControlResourceGroup[];\n}\n\nexport interface CommandScmStatesContext extends CommandBaseContext {\n    type: 'scm-states';\n    scmResourceStates: SourceControlResourceState[];\n}\n\nexport interface CommandUnknownContext extends CommandBaseContext {\n    type: 'unknown';\n}\n\nexport interface CommandUriContext extends CommandBaseContext {\n    type: 'uri';\n}\n\n// export interface CommandViewContext extends CommandBaseContext {\n//     type: 'view';\n// }\n\nexport interface CommandViewItemContext extends CommandBaseContext {\n    type: 'viewItem';\n    node: ViewNode;\n}\n\nexport function isCommandViewContextWithBranch(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { branch: GitBranch } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { branch: GitBranch }).branch instanceof GitBranch;\n}\n\nexport function isCommandViewContextWithCommit<T extends GitCommit>(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { commit: T } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { commit: GitCommit }).commit instanceof GitCommit;\n}\n\nexport function isCommandViewContextWithFile(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { file: GitFile; repoPath: string } } {\n    if (context.type !== 'viewItem') return false;\n\n    const node = context.node as ViewNode & { file: GitFile; repoPath: string };\n    return node.file !== undefined && (node.file.repoPath !== undefined || node.repoPath !== undefined);\n}\n\nexport function isCommandViewContextWithFileCommit(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { commit: GitCommit; file: GitFile; repoPath: string } } {\n    if (context.type !== 'viewItem') return false;\n\n    const node = context.node as ViewNode & { commit: GitCommit; file: GitFile; repoPath: string };\n    return (\n        node.file !== undefined &&\n        node.commit instanceof GitCommit &&\n        (node.file.repoPath !== undefined || node.repoPath !== undefined)\n    );\n}\n\nexport function isCommandViewContextWithFileRefs(\n    context: CommandContext\n): context is CommandViewItemContext & {\n    node: ViewNode & { file: GitFile; ref1: string; ref2: string; repoPath: string };\n} {\n    if (context.type !== 'viewItem') return false;\n\n    const node = context.node as ViewNode & { file: GitFile; ref1: string; ref2: string; repoPath: string };\n    return (\n        node.file !== undefined &&\n        node.ref1 !== undefined &&\n        node.ref2 !== undefined &&\n        (node.file.repoPath !== undefined || node.repoPath !== undefined)\n    );\n}\n\nexport function isCommandViewContextWithRef(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { ref: string } } {\n    return context.type === 'viewItem' && context.node instanceof ViewRefNode;\n}\n\nexport function isCommandViewContextWithRemote(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { remote: GitRemote } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { remote: GitRemote }).remote instanceof GitRemote;\n}\n\nexport function isCommandViewContextWithRepo(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { repo: Repository } } {\n    if (context.type !== 'viewItem') return false;\n\n    return (context.node as ViewNode & { repo?: Repository }).repo instanceof Repository;\n}\n\nexport function isCommandViewContextWithRepoPath(\n    context: CommandContext\n): context is CommandViewItemContext & { node: ViewNode & { repoPath: string } } {\n    if (context.type !== 'viewItem') return false;\n\n    return typeof (context.node as ViewNode & { repoPath?: string }).repoPath === 'string';\n}\n\nexport type CommandContext =\n    | CommandScmGroupsContext\n    | CommandScmStatesContext\n    | CommandUnknownContext\n    | CommandUriContext\n    // | CommandViewContext\n    | CommandViewItemContext;\n\nfunction isScmResourceGroup(group: any): group is SourceControlResourceGroup {\n    if (group == null) return false;\n\n    return (\n        (group as SourceControlResourceGroup).id !== undefined &&\n        (group.handle !== undefined ||\n            (group as SourceControlResourceGroup).label !== undefined ||\n            (group as SourceControlResourceGroup).resourceStates !== undefined)\n    );\n}\n\nfunction isScmResourceState(state: any): state is SourceControlResourceState {\n    if (state == null) return false;\n\n    return (state as SourceControlResourceState).resourceUri != null;\n}\n\nfunction isTextEditor(editor: any): editor is TextEditor {\n    if (editor == null) return false;\n\n    return (\n        editor.id !== undefined &&\n        ((editor as TextEditor).edit !== undefined || (editor as TextEditor).document !== undefined)\n    );\n}\n\nexport abstract class Command implements Disposable {\n    static getMarkdownCommandArgsCore<T>(command: Commands, args: T): string {\n        return `command:${command}?${encodeURIComponent(JSON.stringify(args))}`;\n    }\n\n    protected readonly contextParsingOptions: CommandContextParsingOptions = { editor: false, uri: false };\n\n    private _disposable: Disposable;\n\n    constructor(command: Commands | Commands[]) {\n        if (typeof command === 'string') {\n            this._disposable = commands.registerCommand(\n                command,\n                (...args: any[]) => this._execute(command, ...args),\n                this\n            );\n\n            return;\n        }\n\n        const subscriptions = command.map(cmd =>\n            commands.registerCommand(cmd, (...args: any[]) => this._execute(cmd, ...args), this)\n        );\n        this._disposable = Disposable.from(...subscriptions);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    protected async preExecute(context: CommandContext, ...args: any[]): Promise<any> {\n        return this.execute(...args);\n    }\n\n    abstract execute(...args: any[]): any;\n\n    protected _execute(command: string, ...args: any[]): any {\n        // Telemetry.trackEvent(command);\n\n        const [context, rest] = Command.parseContext(command, { ...this.contextParsingOptions }, ...args);\n        return this.preExecute(context, ...rest);\n    }\n\n    private static parseContext(\n        command: string,\n        options: CommandContextParsingOptions,\n        ...args: any[]\n    ): [CommandContext, any[]] {\n        let editor: TextEditor | undefined = undefined;\n\n        let firstArg = args[0];\n        if (options.editor && (firstArg == null || isTextEditor(firstArg))) {\n            editor = firstArg;\n            args = args.slice(1);\n            firstArg = args[0];\n        }\n\n        if (options.uri && (firstArg == null || firstArg instanceof Uri)) {\n            const [uri, ...rest] = args as [Uri, any];\n            if (uri !== undefined) {\n                return [{ command: command, type: 'uri', editor: editor, uri: uri }, rest];\n            }\n            else {\n                args = args.slice(1);\n            }\n        }\n\n        if (firstArg instanceof ViewNode) {\n            const [node, ...rest] = args as [ViewNode, any];\n            return [{ command: command, type: 'viewItem', node: node, uri: node.uri }, rest];\n        }\n\n        if (isScmResourceState(firstArg)) {\n            const states = [];\n            let count = 0;\n            for (const arg of args) {\n                if (!isScmResourceState(arg)) break;\n\n                count++;\n                states.push(arg);\n            }\n\n            return [\n                { command: command, type: 'scm-states', scmResourceStates: states, uri: states[0].resourceUri },\n                args.slice(count)\n            ];\n        }\n\n        if (isScmResourceGroup(firstArg)) {\n            const groups = [];\n            let count = 0;\n            for (const arg of args) {\n                if (!isScmResourceGroup(arg)) break;\n\n                count++;\n                groups.push(arg);\n            }\n\n            return [{ command: command, type: 'scm-groups', scmResourceGroups: groups }, args.slice(count)];\n        }\n\n        return [{ command: command, type: 'unknown', editor: editor }, args];\n    }\n}\n\nexport abstract class ActiveEditorCommand extends Command {\n    protected readonly contextParsingOptions: CommandContextParsingOptions = { editor: true, uri: true };\n\n    constructor(command: Commands | Commands[]) {\n        super(command);\n    }\n\n    protected async preExecute(context: CommandContext, ...args: any[]): Promise<any> {\n        return this.execute(context.editor, context.uri, ...args);\n    }\n\n    protected _execute(command: string, ...args: any[]): any {\n        return super._execute(command, window.activeTextEditor, ...args);\n    }\n\n    abstract execute(editor?: TextEditor, ...args: any[]): any;\n}\n\nlet lastCommand: { command: string; args: any[] } | undefined = undefined;\nexport function getLastCommand() {\n    return lastCommand;\n}\n\nexport abstract class ActiveEditorCachedCommand extends ActiveEditorCommand {\n    constructor(command: Commands | Commands[]) {\n        super(command);\n    }\n\n    protected _execute(command: string, ...args: any[]): any {\n        lastCommand = {\n            command: command,\n            args: args\n        };\n        return super._execute(command, ...args);\n    }\n\n    abstract execute(editor: TextEditor, ...args: any[]): any;\n}\n\nexport abstract class EditorCommand implements Disposable {\n    private _disposable: Disposable;\n\n    constructor(command: Commands | Commands[]) {\n        if (!Array.isArray(command)) {\n            command = [command];\n        }\n\n        const subscriptions = [];\n        for (const cmd of command) {\n            subscriptions.push(\n                commands.registerTextEditorCommand(\n                    cmd,\n                    (editor: TextEditor, edit: TextEditorEdit, ...args: any[]) =>\n                        this.executeCore(cmd, editor, edit, ...args),\n                    this\n                )\n            );\n        }\n        this._disposable = Disposable.from(...subscriptions);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    private executeCore(command: string, editor: TextEditor, edit: TextEditorEdit, ...args: any[]): any {\n        // Telemetry.trackEvent(command);\n        return this.execute(editor, edit, ...args);\n    }\n\n    abstract execute(editor: TextEditor, edit: TextEditorEdit, ...args: any[]): any;\n}\n\nexport async function openEditor(\n    uri: Uri,\n    options: TextDocumentShowOptions & { rethrow?: boolean } = {}\n): Promise<TextEditor | undefined> {\n    const { rethrow, ...opts } = options;\n    try {\n        if (uri instanceof GitUri) {\n            uri = uri.documentUri();\n        }\n\n        if (uri.scheme === DocumentSchemes.GitLens && ImageMimetypes[paths.extname(uri.fsPath)]) {\n            await commands.executeCommand(BuiltInCommands.Open, uri);\n\n            return undefined;\n        }\n\n        const document = await workspace.openTextDocument(uri);\n        return window.showTextDocument(document, {\n            preserveFocus: false,\n            preview: true,\n            viewColumn: ViewColumn.Active,\n            ...opts\n        });\n    }\n    catch (ex) {\n        const msg = ex.toString();\n        if (msg.includes('File seems to be binary and cannot be opened as text')) {\n            await commands.executeCommand(BuiltInCommands.Open, uri);\n\n            return undefined;\n        }\n\n        if (rethrow) throw ex;\n\n        Logger.error(ex, 'openEditor');\n        return undefined;\n    }\n}\n\nexport function openWorkspace(uri: Uri, name: string, options: { openInNewWindow?: boolean } = {}) {\n    if (options.openInNewWindow) {\n        commands.executeCommand(BuiltInCommands.OpenFolder, uri, true);\n\n        return true;\n    }\n\n    return workspace.updateWorkspaceFolders(\n        workspace.workspaceFolders !== undefined ? workspace.workspaceFolders.length : 0,\n        null,\n        { uri, name }\n    );\n}\n","'use strict';\nimport { GitFile, GitLogCommit } from '../../git/gitService';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StashFileNode extends CommitFileNode {\n    constructor(view: View, parent: ViewNode, file: GitFile, commit: GitLogCommit) {\n        super(view, parent, file, commit, CommitFileNodeDisplayAs.File);\n    }\n\n    protected get resourceType(): ResourceType {\n        return ResourceType.StashFile;\n    }\n\n    protected getCommitTemplate() {\n        return this.view.config.stashFormat;\n    }\n\n    protected getCommitDescriptionTemplate() {\n        return this.view.config.stashDescriptionFormat;\n    }\n\n    protected getCommitFileTemplate() {\n        return this.view.config.stashFileFormat;\n    }\n\n    protected getCommitFileDescriptionTemplate() {\n        return this.view.config.stashFileDescriptionFormat;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { CommitFormatter, GitStashCommit, ICommitFormatOptions } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { StashFileNode } from './stashFileNode';\nimport { ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class StashNode extends ViewRefNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly commit: GitStashCommit\n    ) {\n        super(commit.toGitUri(), view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.commit.repoPath}):stash(${this.commit.sha})`;\n    }\n\n    get ref(): string {\n        return this.commit.sha;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const files = (this.commit as GitStashCommit).files;\n\n        // Check for any untracked files -- since git doesn't return them via `git stash list` :(\n        // See https://stackoverflow.com/questions/12681529/\n        const log = await Container.git.getLog(this.commit.repoPath, {\n            maxCount: 1,\n            ref: `${(this.commit as GitStashCommit).stashName}^3`\n        });\n        if (log !== undefined) {\n            const commit = Iterables.first(log.commits.values());\n            if (commit !== undefined && commit.files.length !== 0) {\n                // Since these files are untracked -- make them look that way\n                commit.files.forEach(s => (s.status = '?'));\n                files.splice(files.length, 0, ...commit.files);\n            }\n        }\n\n        const children = files.map(s => new StashFileNode(this.view, this, s, this.commit.toFileCommit(s)));\n        children.sort((a, b) => a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' }));\n        return children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(\n            CommitFormatter.fromTemplate(this.view.config.stashFormat, this.commit, {\n                truncateMessageAtNewLine: true,\n                dateFormat: Container.config.defaultDateFormat\n            } as ICommitFormatOptions),\n            TreeItemCollapsibleState.Collapsed\n        );\n        item.id = this.id;\n        item.description = CommitFormatter.fromTemplate(this.view.config.stashDescriptionFormat, this.commit, {\n            truncateMessageAtNewLine: true,\n            dateFormat: Container.config.defaultDateFormat\n        } as ICommitFormatOptions);\n        item.contextValue = ResourceType.Stash;\n        item.tooltip = CommitFormatter.fromTemplate('${ago} (${date})\\n\\n${message}', this.commit, {\n            dateFormat: Container.config.defaultDateFormat\n        } as ICommitFormatOptions);\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { MessageNode } from './common';\nimport { StashNode } from './stashNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StashesNode extends ViewNode {\n    constructor(\n        uri: GitUri,\n        view: View,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.repo.path}):stashes`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const stash = await this.repo.getStashList();\n        if (stash === undefined) return [new MessageNode(this.view, this, 'No stashed changes.')];\n\n        return [...Iterables.map(stash.commits.values(), c => new StashNode(this.view, this, c))];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Stashes`, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Stashes;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-stash.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-stash.svg')\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, ThemeIcon, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithPreviousCommandArgs } from '../../commands';\nimport { Container } from '../../container';\nimport {\n    GitFile,\n    GitFileWithCommit,\n    GitLogCommit,\n    GitUri,\n    IStatusFormatOptions,\n    StatusFileFormatter\n} from '../../git/gitService';\nimport { Strings } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitFileNode, CommitFileNodeDisplayAs } from './commitFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StatusFileNode extends ViewNode {\n    private readonly _hasStagedChanges: boolean = false;\n    private readonly _hasUnstagedChanges: boolean = false;\n\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        public readonly file: GitFile,\n        public readonly commits: GitLogCommit[]\n    ) {\n        super(GitUri.fromFile(file, repoPath, 'HEAD'), view, parent);\n\n        for (const c of this.commits) {\n            if (c.isStagedUncommitted) {\n                this._hasStagedChanges = true;\n            }\n            else if (c.isUncommitted) {\n                this._hasUnstagedChanges = true;\n            }\n\n            if (this._hasStagedChanges && this._hasUnstagedChanges) break;\n        }\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        return this.commits.map(\n            c =>\n                new CommitFileNode(\n                    this.view,\n                    this,\n                    this.file,\n                    c,\n                    CommitFileNodeDisplayAs.CommitLabel |\n                        (this.view.config.avatars\n                            ? CommitFileNodeDisplayAs.Gravatar\n                            : CommitFileNodeDisplayAs.CommitIcon)\n                )\n        );\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.None);\n        item.description = this.description;\n\n        if ((this._hasStagedChanges || this._hasUnstagedChanges) && this.commits.length === 1) {\n            if (this._hasStagedChanges) {\n                item.contextValue = ResourceType.FileStaged;\n                item.tooltip = StatusFileFormatter.fromTemplate(\n                    '${file}\\n${directory}/\\n\\n${status} in Index (staged)',\n                    this.file\n                );\n            }\n            else {\n                item.contextValue = ResourceType.FileUnstaged;\n                item.tooltip = StatusFileFormatter.fromTemplate(\n                    '${file}\\n${directory}/\\n\\n${status} in Working Tree',\n                    this.file\n                );\n            }\n\n            // Use the file icon and decorations\n            item.resourceUri = GitUri.resolveToUri(this.file.fileName, this.repoPath);\n            item.iconPath = ThemeIcon.File;\n\n            item.command = this.getCommand();\n        }\n        else {\n            item.collapsibleState = TreeItemCollapsibleState.Collapsed;\n            if (this._hasStagedChanges || this._hasUnstagedChanges) {\n                if (this._hasStagedChanges && this._hasUnstagedChanges) {\n                    item.contextValue = ResourceType.FileStagedAndUnstaged;\n                }\n                else if (this._hasStagedChanges) {\n                    item.contextValue = ResourceType.FileStaged;\n                }\n                else {\n                    item.contextValue = ResourceType.FileUnstaged;\n                }\n\n                // Use the file icon and decorations\n                item.resourceUri = GitUri.resolveToUri(this.file.fileName, this.repoPath);\n                item.iconPath = ThemeIcon.File;\n            }\n            else {\n                item.contextValue = ResourceType.StatusFileCommits;\n\n                const icon = GitFile.getStatusIcon(this.file.status);\n                item.iconPath = {\n                    dark: Container.context.asAbsolutePath(paths.join('images', 'dark', icon)),\n                    light: Container.context.asAbsolutePath(paths.join('images', 'light', icon))\n                };\n            }\n\n            item.tooltip = StatusFileFormatter.fromTemplate(\n                `\\${file}\\n\\${directory}/\\n\\n\\${status} in ${this.getChangedIn()}`,\n                this.file\n            );\n        }\n\n        // Only cache the label/description for a single refresh\n        this._label = undefined;\n        this._description = undefined;\n\n        return item;\n    }\n\n    private _description: string | undefined;\n    get description() {\n        if (this._description === undefined) {\n            this._description = StatusFileFormatter.fromTemplate(\n                this.view.config.statusFileDescriptionFormat,\n                {\n                    ...this.file,\n                    commit: this.commit\n                } as GitFileWithCommit,\n                {\n                    relativePath: this.relativePath\n                } as IStatusFormatOptions\n            );\n        }\n        return this._description;\n    }\n\n    private _folderName: string | undefined;\n    get folderName() {\n        if (this._folderName === undefined) {\n            this._folderName = paths.dirname(this.uri.getRelativePath());\n        }\n        return this._folderName;\n    }\n\n    private _label: string | undefined;\n    get label() {\n        if (this._label === undefined) {\n            this._label = StatusFileFormatter.fromTemplate(\n                this.view.config.statusFileFormat,\n                {\n                    ...this.file,\n                    commit: this.commit\n                } as GitFileWithCommit,\n                {\n                    relativePath: this.relativePath\n                } as IStatusFormatOptions\n            );\n        }\n        return this._label;\n    }\n\n    get commit() {\n        return this.commits[0];\n    }\n\n    get priority(): number {\n        if (this._hasStagedChanges && !this._hasUnstagedChanges) return -3;\n        if (this._hasStagedChanges) return -2;\n        if (this._hasUnstagedChanges) return -1;\n        return 0;\n    }\n\n    private _relativePath: string | undefined;\n    get relativePath(): string | undefined {\n        return this._relativePath;\n    }\n    set relativePath(value: string | undefined) {\n        this._relativePath = value;\n        this._label = undefined;\n        this._description = undefined;\n    }\n\n    private getChangedIn(): string {\n        const changedIn = [];\n\n        let commits = 0;\n\n        if (this._hasUnstagedChanges) {\n            commits++;\n            changedIn.push('Working Tree');\n        }\n\n        if (this._hasStagedChanges) {\n            commits++;\n            changedIn.push('Index (staged)');\n        }\n\n        if (this.commits.length > commits) {\n            commits = this.commits.length - commits;\n        }\n\n        if (commits > 0) {\n            changedIn.push(Strings.pluralize('commit', commits));\n        }\n\n        if (changedIn.length > 2) {\n            changedIn[changedIn.length - 1] = `and ${changedIn[changedIn.length - 1]}`;\n        }\n        return changedIn.join(changedIn.length > 2 ? ', ' : ' and ');\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Compare File with Previous Revision',\n            command: Commands.DiffWithPrevious,\n            arguments: [\n                GitUri.fromFile(this.file, this.repoPath),\n                {\n                    commit: this.commit,\n                    line: 0,\n                    showOptions: {\n                        preserveFocus: true,\n                        preview: true\n                    }\n                } as DiffWithPreviousCommandArgs\n            ]\n        };\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewFilesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitStatusFile } from '../../git/git';\nimport {\n    GitCommitType,\n    GitFileWithCommit,\n    GitLog,\n    GitLogCommit,\n    GitService,\n    GitStatus,\n    GitUri\n} from '../../git/gitService';\nimport { Arrays, Iterables, Objects, Strings } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { FileNode, FolderNode } from './folderNode';\nimport { StatusFileNode } from './statusFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class StatusFilesNode extends ViewNode<RepositoriesView> {\n    readonly repoPath: string;\n\n    constructor(\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly status: GitStatus,\n        public readonly range: string | undefined\n    ) {\n        super(GitUri.fromRepoPath(status.repoPath), view, parent);\n        this.repoPath = status.repoPath;\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.status.repoPath}):status:files`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        let files: GitFileWithCommit[] = [];\n\n        const repoPath = this.repoPath;\n\n        let log: GitLog | undefined;\n        if (this.range !== undefined) {\n            log = await Container.git.getLog(repoPath, { maxCount: 0, ref: this.range });\n            if (log !== undefined) {\n                files = [\n                    ...Iterables.flatMap(log.commits.values(), c =>\n                        c.files.map(s => ({ ...s, commit: c } as GitFileWithCommit))\n                    )\n                ];\n            }\n        }\n\n        if (this.status.files.length !== 0 && this.includeWorkingTree) {\n            files.splice(\n                0,\n                0,\n                ...Iterables.flatMap(this.status.files, s => {\n                    if (s.workingTreeStatus !== undefined && s.indexStatus !== undefined) {\n                        // Decrements the date to guarantee this entry will be sorted after the previous entry (most recent first)\n                        const older = new Date();\n                        older.setMilliseconds(older.getMilliseconds() - 1);\n\n                        return [\n                            this.toStatusFile(s, GitService.uncommittedSha, GitService.stagedUncommittedSha),\n                            this.toStatusFile(s, GitService.stagedUncommittedSha, 'HEAD', older)\n                        ];\n                    }\n                    else if (s.indexStatus !== undefined) {\n                        return [this.toStatusFile(s, GitService.stagedUncommittedSha, 'HEAD')];\n                    }\n                    else {\n                        return [this.toStatusFile(s, GitService.uncommittedSha, 'HEAD')];\n                    }\n                })\n            );\n        }\n\n        files.sort((a, b) => b.commit.date.getTime() - a.commit.date.getTime());\n\n        const groups = Arrays.groupBy(files, s => s.fileName);\n\n        let children: FileNode[] = [\n            ...Iterables.map(\n                Objects.values(groups),\n                files =>\n                    new StatusFileNode(this.view, this, repoPath, files[files.length - 1], files.map(s => s.commit))\n            )\n        ];\n\n        if (this.view.config.files.layout !== ViewFilesLayout.List) {\n            const hierarchy = Arrays.makeHierarchical(\n                children,\n                n => n.uri.getRelativePath().split('/'),\n                (...parts: string[]) => Strings.normalizePath(paths.join(...parts)),\n                this.view.config.files.compact\n            );\n\n            const root = new FolderNode(this.view, this, repoPath, '', hierarchy);\n            children = (await root.getChildren()) as FileNode[];\n        }\n        else {\n            children.sort(\n                (a, b) =>\n                    a.priority - b.priority ||\n                    a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        let files = this.status.files !== undefined && this.includeWorkingTree ? this.status.files.length : 0;\n\n        if (this.status.upstream !== undefined && this.status.state.ahead > 0) {\n            if (files > 0) {\n                const aheadFiles = await Container.git.getDiffStatus(this.repoPath, `${this.status.upstream}...`);\n                if (aheadFiles !== undefined) {\n                    const uniques = new Set();\n                    for (const f of this.status.files) {\n                        uniques.add(f.fileName);\n                    }\n                    for (const f of aheadFiles) {\n                        uniques.add(f.fileName);\n                    }\n\n                    files = uniques.size;\n                }\n            }\n            else {\n                const stats = await Container.git.getChangedFilesCount(this.repoPath, `${this.status.upstream}...`);\n                if (stats !== undefined) {\n                    files += stats.files;\n                }\n            }\n        }\n\n        const label = `${Strings.pluralize('file', files)} changed`;\n        const item = new TreeItem(label, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.StatusFiles;\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-diff.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-diff.svg`)\n        };\n\n        return item;\n    }\n\n    private get includeWorkingTree(): boolean {\n        return this.view.config.includeWorkingTree;\n    }\n\n    private toStatusFile(file: GitStatusFile, ref: string, previousRef: string, date?: Date): GitFileWithCommit {\n        return {\n            status: file.status,\n            repoPath: file.repoPath,\n            indexStatus: file.indexStatus,\n            workingTreeStatus: file.workingTreeStatus,\n            fileName: file.fileName,\n            originalFileName: file.originalFileName,\n            commit: new GitLogCommit(\n                GitCommitType.File,\n                file.repoPath,\n                ref,\n                'You',\n                undefined,\n                date || new Date(),\n                date || new Date(),\n                '',\n                file.fileName,\n                [file],\n                file.status,\n                file.originalFileName,\n                previousRef,\n                file.fileName\n            )\n        };\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitTag, GitUri } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { CommitNode } from './commitNode';\nimport { MessageNode, ShowMoreNode } from './common';\nimport { getBranchesAndTagTipsFn, insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode, ViewRefNode } from './viewNode';\n\nexport class TagNode extends ViewRefNode<RepositoriesView> implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly tag: GitTag\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.tag.repoPath}):tag(${this.tag.name})`;\n    }\n\n    get label(): string {\n        return this.view.config.branches.layout === ViewBranchesLayout.Tree ? this.tag.getBasename() : this.tag.name;\n    }\n\n    get ref(): string {\n        return this.tag.name;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const log = await Container.git.getLog(this.uri.repoPath!, {\n            maxCount: this.maxCount || this.view.config.defaultItemLimit,\n            ref: this.tag.name\n        });\n        if (log === undefined) return [new MessageNode(this.view, this, 'No commits could be found.')];\n\n        const getBranchAndTagTips = await getBranchesAndTagTipsFn(this.uri.repoPath, this.tag.name);\n        const children = [\n            ...insertDateMarkers(\n                Iterables.map(\n                    log.commits.values(),\n                    c => new CommitNode(this.view, this, c, undefined, getBranchAndTagTips)\n                ),\n                this\n            )\n        ];\n\n        if (log.truncated) {\n            children.push(new ShowMoreNode(this.view, this, 'Commits'));\n        }\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Tag;\n        item.tooltip = `${this.tag.name}${this.tag.annotation === undefined ? '' : `\\n${this.tag.annotation}`}`;\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewBranchesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitUri, Repository } from '../../git/gitService';\nimport { Arrays } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchOrTagFolderNode } from './branchOrTagFolderNode';\nimport { MessageNode } from './common';\nimport { TagNode } from './tagNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class TagsNode extends ViewNode<RepositoriesView> {\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.repo.path}):tags`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const tags = await this.repo.getTags();\n        if (tags.length === 0) return [new MessageNode(this.view, this, 'No tags could be found.')];\n\n        tags.sort((a, b) => a.name.localeCompare(b.name, undefined, { numeric: true, sensitivity: 'base' }));\n        const tagNodes = tags.map(t => new TagNode(this.uri, this.view, this, t));\n        if (this.view.config.branches.layout === ViewBranchesLayout.List) return tagNodes;\n\n        const hierarchy = Arrays.makeHierarchical(\n            tagNodes,\n            n => n.tag.name.split('/'),\n            (...paths: string[]) => paths.join('/'),\n            this.view.config.files.compact\n        );\n\n        const root = new BranchOrTagFolderNode(this.view, this, 'tag', this.repo.path, '', undefined, hierarchy);\n        const children = (await root.getChildren()) as (BranchOrTagFolderNode | TagNode)[];\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const item = new TreeItem(`Tags`, TreeItemCollapsibleState.Collapsed);\n        item.id = this.id;\n        item.contextValue = ResourceType.Tags;\n\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath('images/dark/icon-tag.svg'),\n            light: Container.context.asAbsolutePath('images/light/icon-tag.svg')\n        };\n\n        return item;\n    }\n}\n","'use strict';\nimport { Disposable, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport {\n    GitBranch,\n    GitStatus,\n    GitUri,\n    Repository,\n    RepositoryChange,\n    RepositoryChangeEvent,\n    RepositoryFileSystemChangeEvent\n} from '../../git/gitService';\nimport { Dates, debug, Functions, gate, log, Strings } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { BranchesNode } from './branchesNode';\nimport { BranchNode } from './branchNode';\nimport { BranchTrackingStatusNode } from './branchTrackingStatusNode';\nimport { MessageNode } from './common';\nimport { RemotesNode } from './remotesNode';\nimport { StashesNode } from './stashesNode';\nimport { StatusFilesNode } from './statusFilesNode';\nimport { TagsNode } from './tagsNode';\nimport { ResourceType, SubscribeableViewNode, ViewNode } from './viewNode';\n\nexport class RepositoryNode extends SubscribeableViewNode<RepositoriesView> {\n    private _children: ViewNode[] | undefined;\n    private _lastFetched: number = 0;\n    private _status: Promise<GitStatus | undefined>;\n\n    constructor(\n        uri: GitUri,\n        view: RepositoriesView,\n        parent: ViewNode,\n        public readonly repo: Repository\n    ) {\n        super(uri, view, parent);\n\n        this._status = this.repo.getStatus();\n    }\n\n    get id(): string {\n        return `gitlens:repository(${this.repo.path})`;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const children = [];\n\n            const status = await this._status;\n            if (status !== undefined) {\n                const branch = new GitBranch(\n                    status.repoPath,\n                    status.branch,\n                    true,\n                    status.sha,\n                    status.upstream,\n                    status.state.ahead,\n                    status.state.behind,\n                    status.detached\n                );\n                children.push(new BranchNode(this.uri, this.view, this, branch, true));\n\n                if (status.state.behind) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'behind', true));\n                }\n\n                if (status.state.ahead) {\n                    children.push(new BranchTrackingStatusNode(this.view, this, status, 'ahead', true));\n                }\n\n                if (status.state.ahead || (status.files.length !== 0 && this.includeWorkingTree)) {\n                    const range = status.upstream ? `${status.upstream}..${branch.ref}` : undefined;\n                    children.push(new StatusFilesNode(this.view, this, status, range));\n                }\n\n                if (!this.view.config.repositories.compact) {\n                    children.push(new MessageNode(this.view, this, '', GlyphChars.Dash.repeat(2), ''));\n                }\n            }\n\n            children.push(\n                new BranchesNode(this.uri, this.view, this, this.repo),\n                new RemotesNode(this.uri, this.view, this, this.repo),\n                new StashesNode(this.uri, this.view, this, this.repo),\n                new TagsNode(this.uri, this.view, this, this.repo)\n            );\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const label = this.repo.formattedName || this.uri.repoPath || '';\n\n        this._lastFetched = await this.repo.getLastFetched();\n\n        const lastFetchedTooltip = this.formatLastFetched({\n            prefix: `${Strings.pad(GlyphChars.Dash, 2, 2)}Last fetched on `,\n            format: 'dddd MMMM Do, YYYY h:mm a'\n        });\n\n        let description;\n        let tooltip = this.repo.formattedName\n            ? `${this.repo.formattedName}${lastFetchedTooltip}\\n${this.uri.repoPath}`\n            : `${this.uri.repoPath}${lastFetchedTooltip}`;\n        let iconSuffix = '';\n        let workingStatus = '';\n\n        const status = await this._status;\n        if (status !== undefined) {\n            tooltip += `\\n\\n${status.branch}`;\n\n            if (status.files.length !== 0 && this.includeWorkingTree) {\n                workingStatus = status.getFormattedDiffStatus({\n                    compact: true,\n                    prefix: Strings.pad(GlyphChars.Dot, 2, 2)\n                });\n            }\n\n            const upstreamStatus = status.getUpstreamStatus({\n                prefix: `${GlyphChars.Space} `\n            });\n\n            description = `${status.branch}${upstreamStatus}${workingStatus}`;\n\n            iconSuffix = workingStatus ? '-blue' : '';\n            if (status.upstream !== undefined) {\n                tooltip += ` is tracking ${status.upstream}\\n${status.getUpstreamStatus({\n                    empty: 'up-to-date',\n                    expand: true,\n                    separator: '\\n',\n                    suffix: '\\n'\n                })}`;\n\n                if (status.state.behind) {\n                    iconSuffix = '-red';\n                }\n                if (status.state.ahead) {\n                    iconSuffix = status.state.behind ? '-yellow' : '-green';\n                }\n            }\n\n            if (workingStatus) {\n                tooltip += `\\nWorking tree has uncommitted changes${status.getFormattedDiffStatus({\n                    expand: true,\n                    prefix: `\\n`,\n                    separator: '\\n'\n                })}`;\n            }\n        }\n\n        const item = new TreeItem(label, TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Repository;\n        item.description = `${description || ''}${this.formatLastFetched({\n            prefix: `${Strings.pad(GlyphChars.Dot, 2, 2)}Last fetched `\n        })}`;\n        item.id = this.id;\n        item.tooltip = tooltip;\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(`images/dark/icon-repo${iconSuffix}.svg`),\n            light: Container.context.asAbsolutePath(`images/light/icon-repo${iconSuffix}.svg`)\n        };\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @log()\n    fetch(options: { progress?: boolean; remote?: string } = {}) {\n        return this.repo.fetch(options);\n    }\n\n    @log()\n    pull(options: { progress?: boolean } = {}) {\n        return this.repo.pull(options);\n    }\n\n    @log()\n    push(options: { force?: boolean; progress?: boolean } = {}) {\n        return this.repo.push(options);\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        this._status = this.repo.getStatus();\n\n        this._children = undefined;\n        await this.ensureSubscription();\n    }\n\n    @debug()\n    protected async subscribe() {\n        const disposables = [this.repo.onDidChange(this.onRepoChanged, this)];\n\n        if (this.includeWorkingTree) {\n            disposables.push(\n                this.repo.onDidChangeFileSystem(this.onFileSystemChanged, this),\n                {\n                    dispose: () => this.repo.stopWatchingFileSystem()\n                },\n                Functions.interval(() => void this.updateLastFetched(), 60000)\n            );\n\n            this.repo.startWatchingFileSystem();\n        }\n\n        return Disposable.from(...disposables);\n    }\n\n    private get includeWorkingTree(): boolean {\n        return this.view.config.includeWorkingTree;\n    }\n\n    @debug({\n        args: {\n            0: (e: RepositoryFileSystemChangeEvent) =>\n                `{ repository: ${e.repository ? e.repository.name : ''}, uris: [${e.uris\n                    .map(u => u.fsPath)\n                    .join(', ')}] }`\n        }\n    })\n    private onFileSystemChanged(e: RepositoryFileSystemChangeEvent) {\n        void this.triggerChange();\n    }\n\n    @debug({\n        args: {\n            0: (e: RepositoryChangeEvent) =>\n                `{ repository: ${e.repository ? e.repository.name : ''}, changes: ${e.changes.join()} }`\n        }\n    })\n    private onRepoChanged(e: RepositoryChangeEvent) {\n        if (e.changed(RepositoryChange.Closed)) {\n            this.dispose();\n\n            return;\n        }\n\n        if (\n            this._children === undefined ||\n            e.changed(RepositoryChange.Repository) ||\n            e.changed(RepositoryChange.Config)\n        ) {\n            void this.triggerChange();\n\n            return;\n        }\n\n        if (e.changed(RepositoryChange.Stashes)) {\n            const node = this._children.find(c => c instanceof StashesNode);\n            if (node !== undefined) {\n                void this.view.triggerNodeChange(node);\n            }\n        }\n\n        if (e.changed(RepositoryChange.Remotes)) {\n            const node = this._children.find(c => c instanceof RemotesNode);\n            if (node !== undefined) {\n                void this.view.triggerNodeChange(node);\n            }\n        }\n\n        if (e.changed(RepositoryChange.Tags)) {\n            const node = this._children.find(c => c instanceof TagsNode);\n            if (node !== undefined) {\n                void this.view.triggerNodeChange(node);\n            }\n        }\n    }\n\n    private formatLastFetched(options: { prefix?: string; format?: string } = {}) {\n        if (this._lastFetched === 0) return '';\n\n        if (options.format === undefined && Date.now() - this._lastFetched < Dates.MillisecondsPerDay) {\n            return `${options.prefix || ''}${Dates.toFormatter(new Date(this._lastFetched)).fromNow()}`;\n        }\n\n        return `${options.prefix || ''}${Dates.toFormatter(new Date(this._lastFetched)).format(\n            options.format || 'MMM DD, YYYY'\n        )}`;\n    }\n\n    @debug()\n    private async updateLastFetched() {\n        const prevLastFetched = this._lastFetched;\n        this._lastFetched = await this.repo.getLastFetched();\n\n        // If the fetched date hasn't changed and it was over a day ago, kick out\n        if (this._lastFetched === prevLastFetched && Date.now() - this._lastFetched >= Dates.MillisecondsPerDay) return;\n\n        this.view.triggerNodeChange(this);\n    }\n}\n","'use strict';\nimport { Disposable, TextEditor, TreeItem, TreeItemCollapsibleState, window } from 'vscode';\nimport { Container } from '../../container';\nimport { GitUri } from '../../git/gitService';\nimport { Logger } from '../../logger';\nimport { debug, Functions, gate } from '../../system';\nimport { RepositoriesView } from '../repositoriesView';\nimport { RefreshReason } from '../viewBase';\nimport { MessageNode } from './common';\nimport { RepositoryNode } from './repositoryNode';\nimport { ResourceType, SubscribeableViewNode, unknownGitUri, ViewNode } from './viewNode';\n\nexport class RepositoriesNode extends SubscribeableViewNode<RepositoriesView> {\n    private _children: (RepositoryNode | MessageNode)[] | undefined;\n\n    constructor(view: RepositoriesView) {\n        super(unknownGitUri, view);\n    }\n\n    dispose() {\n        super.dispose();\n\n        if (this._children !== undefined) {\n            for (const child of this._children) {\n                if (child instanceof RepositoryNode) {\n                    child.dispose();\n                }\n            }\n            this._children = undefined;\n        }\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children === undefined) {\n            const repositories = await Container.git.getOrderedRepositories();\n            if (repositories.length === 0) return [new MessageNode(this.view, this, 'No repositories could be found.')];\n\n            const children = [];\n            for (const repo of repositories) {\n                if (repo.closed) continue;\n\n                children.push(new RepositoryNode(GitUri.fromRepoPath(repo.path), this.view, this, repo));\n            }\n\n            this._children = children;\n        }\n\n        return this._children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Repositories`, TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Repositories;\n\n        void this.ensureSubscription();\n\n        return item;\n    }\n\n    @gate()\n    @debug()\n    async refresh(reason?: RefreshReason) {\n        if (this._children === undefined) return;\n\n        const repositories = await Container.git.getOrderedRepositories();\n        if (repositories.length === 0 && (this._children === undefined || this._children.length === 0)) return;\n\n        if (repositories.length === 0) {\n            this._children = [new MessageNode(this.view, this, 'No repositories could be found.')];\n            return;\n        }\n\n        const children = [];\n        for (const repo of repositories) {\n            if (repo.closed) continue;\n\n            const normalizedPath = repo.normalizedPath;\n            const child = (this._children as RepositoryNode[]).find(c => c.repo.normalizedPath === normalizedPath);\n            if (child !== undefined) {\n                children.push(child);\n                void child.refresh();\n            }\n            else {\n                children.push(new RepositoryNode(GitUri.fromRepoPath(repo.path), this.view, this, repo));\n            }\n        }\n\n        for (const child of this._children as RepositoryNode[]) {\n            if (children.includes(child)) continue;\n\n            child.dispose();\n        }\n\n        this._children = children;\n\n        // Reset our subscription if the configuration changed\n        if (reason === RefreshReason.ConfigurationChanged) {\n            await this.unsubscribe();\n        }\n\n        void this.ensureSubscription();\n    }\n\n    @debug()\n    protected async subscribe() {\n        const subscriptions = [Container.git.onDidChangeRepositories(this.onRepositoriesChanged, this)];\n\n        if (this.view.config.autoReveal) {\n            subscriptions.push(\n                window.onDidChangeActiveTextEditor(Functions.debounce(this.onActiveEditorChanged, 500), this)\n            );\n        }\n\n        return Disposable.from(...subscriptions);\n    }\n\n    @debug({ args: false })\n    private onActiveEditorChanged(editor: TextEditor | undefined) {\n        if (editor == null || this._children === undefined || this._children.length === 1) {\n            return;\n        }\n\n        try {\n            const uri = editor.document.uri;\n            const node = this._children.find(n => n instanceof RepositoryNode && n.repo.containsUri(uri)) as\n                | RepositoryNode\n                | undefined;\n            if (node === undefined) return;\n\n            // Check to see if this repo has a descendent that is already selected\n            let parent = this.view.selection.length === 0 ? undefined : this.view.selection[0];\n            while (parent !== undefined) {\n                if (parent === node) return;\n\n                parent = parent.getParent();\n            }\n\n            void this.view.reveal(node, { expand: true });\n        }\n        catch (ex) {\n            Logger.error(ex);\n        }\n    }\n\n    @debug()\n    private onRepositoriesChanged() {\n        void this.triggerChange();\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitLog, GitUri } from '../../git/gitService';\nimport { Iterables } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitNode } from './commitNode';\nimport { ShowMoreNode } from './common';\nimport { getBranchesAndTagTipsFn, insertDateMarkers } from './helpers';\nimport { PageableViewNode, ResourceType, ViewNode } from './viewNode';\n\nexport interface CommitsQueryResults {\n    label: string;\n    log: GitLog | undefined;\n}\n\nexport class ResultsCommitsNode extends ViewNode implements PageableViewNode {\n    readonly supportsPaging: boolean = true;\n    maxCount: number | undefined;\n\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        private readonly _commitsQuery: (maxCount: number | undefined) => Promise<CommitsQueryResults>\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    get type(): ResourceType {\n        return ResourceType.ResultsCommits;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const { log } = await this.getCommitsQueryResults();\n        if (log === undefined) return [];\n\n        const getBranchAndTagTips = await getBranchesAndTagTipsFn(this.uri.repoPath);\n        const children = [\n            ...insertDateMarkers(\n                Iterables.map(\n                    log.commits.values(),\n                    c => new CommitNode(this.view, this, c, undefined, getBranchAndTagTips)\n                ),\n                this\n            )\n        ];\n\n        if (log.truncated) {\n            children.push(new ShowMoreNode(this.view, this, 'Results'));\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const { label, log } = await this.getCommitsQueryResults();\n\n        let description;\n        if ((await Container.git.getRepositoryCount()) > 1) {\n            const repo = await Container.git.getRepository(this.repoPath);\n            description = (repo && repo.formattedName) || this.repoPath;\n        }\n\n        const item = new TreeItem(\n            label,\n            log && log.count > 0 ? TreeItemCollapsibleState.Collapsed : TreeItemCollapsibleState.None\n        );\n        item.contextValue = this.type;\n        item.description = description;\n\n        return item;\n    }\n\n    refresh() {\n        this._commitsQueryResults = this._commitsQuery(this.maxCount);\n    }\n\n    private _commitsQueryResults: Promise<CommitsQueryResults> | undefined;\n\n    protected getCommitsQueryResults() {\n        if (this._commitsQueryResults === undefined) {\n            this._commitsQueryResults = this._commitsQuery(this.maxCount);\n        }\n\n        return this._commitsQueryResults;\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { Command, TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Commands, DiffWithCommandArgs } from '../../commands';\nimport { Container } from '../../container';\nimport { GitFile, GitUri, IStatusFormatOptions, StatusFileFormatter } from '../../git/gitService';\nimport { View } from '../viewBase';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class ResultsFileNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        public readonly file: GitFile,\n        public readonly ref1: string,\n        public readonly ref2: string\n    ) {\n        super(GitUri.fromFile(file, repoPath, ref1 ? ref1 : ref2 ? ref2 : undefined), view, parent);\n    }\n\n    get ref() {\n        return this.ref1 ? this.ref1 : this.ref2 ? this.ref2 : undefined;\n    }\n\n    getChildren(): ViewNode[] {\n        return [];\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(this.label, TreeItemCollapsibleState.None);\n        item.contextValue = ResourceType.ResultsFile;\n        item.description = this.description;\n        item.tooltip = StatusFileFormatter.fromTemplate('${file}\\n${directory}/\\n\\n${status}', this.file);\n\n        const statusIcon = GitFile.getStatusIcon(this.file.status);\n        item.iconPath = {\n            dark: Container.context.asAbsolutePath(paths.join('images', 'dark', statusIcon)),\n            light: Container.context.asAbsolutePath(paths.join('images', 'light', statusIcon))\n        };\n\n        item.command = this.getCommand();\n        return item;\n    }\n\n    private _description: string | undefined;\n    get description() {\n        if (this._description === undefined) {\n            this._description = StatusFileFormatter.fromTemplate('${directory}', this.file, {\n                relativePath: this.relativePath\n            } as IStatusFormatOptions);\n        }\n        return this._description;\n    }\n\n    private _folderName: string | undefined;\n    get folderName() {\n        if (this._folderName === undefined) {\n            this._folderName = paths.dirname(this.uri.getRelativePath());\n        }\n        return this._folderName;\n    }\n\n    private _label: string | undefined;\n    get label() {\n        if (this._label === undefined) {\n            this._label = StatusFileFormatter.fromTemplate('${file}', this.file, {\n                relativePath: this.relativePath\n            } as IStatusFormatOptions);\n        }\n        return this._label;\n    }\n\n    private _relativePath: string | undefined;\n    get relativePath(): string | undefined {\n        return this._relativePath;\n    }\n    set relativePath(value: string | undefined) {\n        this._relativePath = value;\n        this._label = undefined;\n        this._description = undefined;\n    }\n\n    get priority(): number {\n        return 0;\n    }\n\n    getCommand(): Command | undefined {\n        return {\n            title: 'Open Changes',\n            command: Commands.DiffWith,\n            arguments: [\n                this.uri,\n                {\n                    lhs: {\n                        sha: this.ref1,\n                        uri: this.uri\n                    },\n                    rhs: {\n                        sha: this.ref2,\n                        uri:\n                            this.file.status === 'R'\n                                ? GitUri.fromFile(this.file, this.uri.repoPath!, this.ref2, true)\n                                : this.uri\n                    },\n                    repoPath: this.uri.repoPath!,\n\n                    line: 0,\n                    showOptions: {\n                        preserveFocus: true,\n                        preview: true\n                    }\n                } as DiffWithCommandArgs\n            ]\n        };\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { ViewFilesLayout } from '../../configuration';\nimport { Container } from '../../container';\nimport { GitFile, GitUri } from '../../git/gitService';\nimport { Arrays, Iterables, Strings } from '../../system';\nimport { View } from '../viewBase';\nimport { FileNode, FolderNode } from './folderNode';\nimport { ResultsFileNode } from './resultsFileNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport interface FilesQueryResults {\n    label: string;\n    diff: GitFile[] | undefined;\n}\n\nexport class ResultsFilesNode extends ViewNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        public readonly repoPath: string,\n        private readonly _ref1: string,\n        private readonly _ref2: string\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view, parent);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        const { diff } = await this.getFilesQueryResults();\n        if (diff === undefined) return [];\n\n        let children: FileNode[] = [\n            ...Iterables.map(diff, s => new ResultsFileNode(this.view, this, this.repoPath, s, this._ref1, this._ref2))\n        ];\n\n        if (this.view.config.files.layout !== ViewFilesLayout.List) {\n            const hierarchy = Arrays.makeHierarchical(\n                children,\n                n => n.uri.getRelativePath().split('/'),\n                (...parts: string[]) => Strings.normalizePath(paths.join(...parts)),\n                this.view.config.files.compact\n            );\n\n            const root = new FolderNode(this.view, this, this.repoPath, '', hierarchy);\n            children = (await root.getChildren()) as FileNode[];\n        }\n        else {\n            children.sort(\n                (a, b) =>\n                    a.priority - b.priority ||\n                    a.label!.localeCompare(b.label!, undefined, { numeric: true, sensitivity: 'base' })\n            );\n        }\n\n        return children;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const { diff, label } = await this.getFilesQueryResults();\n\n        const item = new TreeItem(\n            label,\n            diff && diff.length > 0 ? TreeItemCollapsibleState.Expanded : TreeItemCollapsibleState.None\n        );\n        item.contextValue = ResourceType.ResultsFiles;\n        return item;\n    }\n\n    refresh() {\n        this._filesQueryResults = this.getFilesQueryResultsCore();\n    }\n\n    private _filesQueryResults: Promise<FilesQueryResults> | undefined;\n\n    private getFilesQueryResults() {\n        if (this._filesQueryResults === undefined) {\n            this._filesQueryResults = this.getFilesQueryResultsCore();\n        }\n\n        return this._filesQueryResults;\n    }\n\n    private async getFilesQueryResultsCore(): Promise<FilesQueryResults> {\n        const diff = await Container.git.getDiffStatus(this.uri.repoPath!, this._ref1, this._ref2);\n        return {\n            label: `${Strings.pluralize('file', diff !== undefined ? diff.length : 0, { zero: 'No' })} changed`,\n            diff: diff\n        };\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { Container } from '../../container';\nimport { GitService, GitUri } from '../../git/gitService';\nimport { Strings } from '../../system';\nimport { View } from '../viewBase';\nimport { CommitsQueryResults, ResultsCommitsNode } from './resultsCommitsNode';\nimport { ResultsFilesNode } from './resultsFilesNode';\nimport { NamedRef, ResourceType, ViewNode } from './viewNode';\n\nexport class CompareResultsNode extends ViewNode {\n    constructor(\n        view: View,\n        public readonly repoPath: string,\n        ref1: NamedRef,\n        ref2: NamedRef\n    ) {\n        super(GitUri.fromRepoPath(repoPath), view);\n\n        this._ref1 = ref1;\n        this._ref2 = ref2;\n    }\n\n    private _ref1: NamedRef;\n    get ref1(): NamedRef {\n        return this._ref1;\n    }\n\n    private _ref2: NamedRef;\n    get ref2(): NamedRef {\n        return this._ref2;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        return [\n            new ResultsCommitsNode(this.view, this, this.uri.repoPath!, this.getCommitsQuery.bind(this)),\n            new ResultsFilesNode(this.view, this, this.uri.repoPath!, this._ref1.ref, this._ref2.ref)\n        ];\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        let description;\n        if ((await Container.git.getRepositoryCount()) > 1) {\n            const repo = await Container.git.getRepository(this.uri.repoPath!);\n            description = (repo && repo.formattedName) || this.uri.repoPath;\n        }\n\n        const item = new TreeItem(\n            `Comparing ${this._ref1.label ||\n                GitService.shortenSha(this._ref1.ref, { working: 'Working Tree' })} to ${this._ref2.label ||\n                GitService.shortenSha(this._ref2.ref, { working: 'Working Tree' })}`,\n            TreeItemCollapsibleState.Collapsed\n        );\n        item.contextValue = ResourceType.CompareResults;\n        item.description = description;\n\n        return item;\n    }\n\n    swap() {\n        const ref1 = this._ref1;\n        this._ref1 = this._ref2;\n        this._ref2 = ref1;\n\n        this.view.triggerNodeChange(this);\n    }\n\n    private async getCommitsQuery(maxCount: number | undefined): Promise<CommitsQueryResults> {\n        const log = await Container.git.getLog(this.uri.repoPath!, {\n            maxCount: maxCount,\n            ref: `${this._ref1.ref}...${this._ref2.ref || 'HEAD'}`\n        });\n\n        const count = log !== undefined ? log.count : 0;\n        const truncated = log !== undefined ? log.truncated : false;\n\n        const label = Strings.pluralize('commit', count, { number: truncated ? `${count}+` : undefined, zero: 'No' });\n\n        return {\n            label: label,\n            log: log\n        };\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { GlyphChars } from '../../constants';\nimport { Container } from '../../container';\nimport { CompareView } from '../compareView';\nimport { CompareNode } from './compareNode';\nimport { ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\nexport class ComparePickerNode extends ViewNode<CompareView> {\n    constructor(\n        view: CompareView,\n        protected readonly parent: CompareNode\n    ) {\n        super(unknownGitUri, view, parent);\n    }\n\n    getChildren(): ViewNode[] {\n        return [];\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const selectedRef = this.parent.selectedRef;\n        const repoPath = selectedRef !== undefined ? selectedRef.repoPath : undefined;\n\n        let description;\n        if (repoPath !== undefined) {\n            if ((await Container.git.getRepositoryCount()) > 1) {\n                const repo = await Container.git.getRepository(repoPath);\n                description = (repo && repo.formattedName) || repoPath;\n            }\n        }\n\n        let item;\n        if (selectedRef === undefined) {\n            item = new TreeItem(\n                `Compare <branch, tag, or ref> with <branch, tag, or ref>`,\n                TreeItemCollapsibleState.None\n            );\n            item.contextValue = ResourceType.ComparePicker;\n            item.description = description;\n            item.tooltip = `Click to select branch or tag for compare${GlyphChars.Ellipsis}`;\n            item.command = {\n                title: `Select branch or tag for compare${GlyphChars.Ellipsis}`,\n                command: this.view.getQualifiedCommand('selectForCompare')\n            };\n        }\n        else {\n            item = new TreeItem(\n                `Compare ${selectedRef.label} with <branch, tag, or ref>`,\n                TreeItemCollapsibleState.None\n            );\n            item.contextValue = ResourceType.ComparePickerWithRef;\n            item.description = description;\n            item.tooltip = `Click to compare ${selectedRef.label} with${GlyphChars.Ellipsis}`;\n            item.command = {\n                title: `Compare ${selectedRef.label} with${GlyphChars.Ellipsis}`,\n                command: this.view.getQualifiedCommand('compareWithSelected')\n            };\n        }\n\n        return item;\n    }\n}\n","'use strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { getRepoPathOrPrompt } from '../../commands';\nimport { CommandContext, GlyphChars, setCommandContext } from '../../constants';\nimport { GitService } from '../../git/gitService';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../../quickpicks';\nimport { debug, Functions, gate, log } from '../../system';\nimport { CompareView } from '../compareView';\nimport { MessageNode } from './common';\nimport { ComparePickerNode } from './comparePickerNode';\nimport { NamedRef, ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\ninterface RepoRef {\n    label: string;\n    repoPath: string;\n    ref: string | NamedRef;\n}\n\nexport class CompareNode extends ViewNode<CompareView> {\n    private _children: (ViewNode | MessageNode)[] = [];\n    private _comparePickerNode: ComparePickerNode | undefined;\n\n    constructor(view: CompareView) {\n        super(unknownGitUri, view);\n    }\n\n    private _selectedRef: RepoRef | undefined;\n    get selectedRef(): RepoRef | undefined {\n        return this._selectedRef;\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children.length === 0) {\n            // Not really sure why I can't reuse this node -- but if I do the Tree errors out with an id already exists error\n            this._comparePickerNode = new ComparePickerNode(this.view, this);\n            this._children = [this._comparePickerNode];\n        }\n        else if (\n            this._selectedRef !== undefined &&\n            (this._comparePickerNode === undefined || !this._children.includes(this._comparePickerNode))\n        ) {\n            // Not really sure why I can't reuse this node -- but if I do the Tree errors out with an id already exists error\n            this._comparePickerNode = new ComparePickerNode(this.view, this);\n            this._children.splice(0, 0, this._comparePickerNode);\n\n            const node = this._comparePickerNode;\n            setImmediate(() => this.view.reveal(node, { focus: false, select: true }));\n        }\n\n        return this._children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Compare`, TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Compare;\n        return item;\n    }\n\n    addOrReplace(results: ViewNode, replace: boolean) {\n        if (this._children.includes(results)) return;\n\n        if (this._children.length !== 0 && replace) {\n            this._children.length = 0;\n            this._children.push(results);\n        }\n        else {\n            if (this._comparePickerNode !== undefined) {\n                const index = this._children.indexOf(this._comparePickerNode);\n                if (index !== -1) {\n                    this._children.splice(index, 1);\n                }\n            }\n\n            this._children.splice(0, 0, results);\n        }\n\n        this.view.triggerNodeChange();\n    }\n\n    @log()\n    clear() {\n        this._selectedRef = undefined;\n        setCommandContext(CommandContext.ViewsCanCompare, false);\n\n        this._children.length = 0;\n        this.view.triggerNodeChange();\n    }\n\n    @log({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    dismiss(node: ViewNode) {\n        this._selectedRef = undefined;\n        setCommandContext(CommandContext.ViewsCanCompare, false);\n\n        if (this._children.length !== 0) {\n            const index = this._children.indexOf(node);\n            if (index === -1) return;\n\n            this._children.splice(index, 1);\n        }\n        this.view.triggerNodeChange();\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        if (this._children.length === 0) return;\n\n        await Promise.all(this._children.map(c => c.refresh()).filter(Functions.isPromise) as Promise<any>[]);\n    }\n\n    async compareWithSelected(repoPath?: string, ref?: string | NamedRef) {\n        if (this._selectedRef === undefined) return;\n\n        if (repoPath === undefined) {\n            repoPath = this._selectedRef.repoPath;\n        }\n        else if (repoPath !== this._selectedRef.repoPath) {\n            // If we don't have a matching repoPath, then start over\n            void this.selectForCompare(repoPath, ref);\n            return;\n        }\n\n        if (ref === undefined) {\n            const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                `Compare ${this.getRefName(this._selectedRef.ref)} with${GlyphChars.Ellipsis}`,\n                { allowCommitId: true }\n            );\n            if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n            ref = pick.ref;\n        }\n\n        const ref1 = this._selectedRef;\n\n        this._selectedRef = undefined;\n        setCommandContext(CommandContext.ViewsCanCompare, false);\n\n        void (await this.view.compare(repoPath, ref1.ref, ref));\n    }\n\n    async selectForCompare(repoPath?: string, ref?: string | NamedRef) {\n        if (repoPath === undefined) {\n            repoPath = await getRepoPathOrPrompt(\n                undefined,\n                `Select branch or tag for compare in which repository${GlyphChars.Ellipsis}`\n            );\n        }\n        if (repoPath === undefined) return;\n\n        let autoCompare = false;\n        if (ref === undefined) {\n            const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                `Select branch or tag for compare${GlyphChars.Ellipsis}`,\n                { allowCommitId: true }\n            );\n            if (pick === undefined || pick instanceof CommandQuickPickItem) return;\n\n            ref = pick.ref;\n\n            autoCompare = true;\n        }\n\n        this._selectedRef = { label: this.getRefName(ref), repoPath: repoPath, ref: ref };\n        setCommandContext(CommandContext.ViewsCanCompare, true);\n\n        await this.view.show();\n\n        void (await this.triggerChange());\n\n        if (autoCompare) {\n            void (await this.compareWithSelected());\n        }\n    }\n\n    private getRefName(ref: string | NamedRef) {\n        return typeof ref === 'string' ? GitService.shortenSha(ref)! : ref.label || GitService.shortenSha(ref.ref)!;\n    }\n}\n","'strict';\nimport { TreeItem, TreeItemCollapsibleState } from 'vscode';\nimport { SearchCommitsCommandArgs } from '../../commands';\nimport { GlyphChars } from '../../constants';\nimport { GitRepoSearchBy } from '../../git/gitService';\nimport { debug, Functions, gate, log } from '../../system';\nimport { View } from '../viewBase';\nimport { CommandMessageNode, MessageNode } from './common';\nimport { ResourceType, unknownGitUri, ViewNode } from './viewNode';\n\nexport class SearchNode extends ViewNode {\n    private _children: (ViewNode | MessageNode)[] = [];\n\n    constructor(view: View) {\n        super(unknownGitUri, view);\n    }\n\n    async getChildren(): Promise<ViewNode[]> {\n        if (this._children.length === 0) {\n            const command = {\n                title: ' ',\n                command: 'gitlens.showCommitSearch'\n            };\n\n            return [\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Message } as SearchCommitsCommandArgs]\n                    },\n                    `Search commits by message`,\n                    'message-pattern',\n                    'Click to search commits by message'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Author } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by author`,\n                    '@ author-pattern',\n                    'Click to search commits by author'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Sha } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by commit id`,\n                    '# sha',\n                    'Click to search commits by commit id'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Files } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by files`,\n                    ': file-path/glob',\n                    'Click to search commits by files'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.Changes } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by changes`,\n                    '= pattern',\n                    'Click to search commits by changes'\n                ),\n                new CommandMessageNode(\n                    this.view,\n                    this,\n                    {\n                        ...command,\n                        arguments: [this, { searchBy: GitRepoSearchBy.ChangedLines } as SearchCommitsCommandArgs]\n                    },\n                    `${GlyphChars.Space.repeat(4)} or, by changed lines`,\n                    '~ pattern',\n                    'Click to search commits by changed lines'\n                )\n            ];\n        }\n\n        return this._children;\n    }\n\n    getTreeItem(): TreeItem {\n        const item = new TreeItem(`Search`, TreeItemCollapsibleState.Expanded);\n        item.contextValue = ResourceType.Search;\n        return item;\n    }\n\n    addOrReplace(results: ViewNode, replace: boolean) {\n        if (this._children.includes(results)) return;\n\n        if (this._children.length !== 0 && replace) {\n            this._children.length = 0;\n            this._children.push(results);\n        }\n        else {\n            this._children.splice(0, 0, results);\n        }\n\n        this.view.triggerNodeChange();\n    }\n\n    @log()\n    clear() {\n        if (this._children.length === 0) return;\n\n        this._children.length = 0;\n        this.view.triggerNodeChange();\n    }\n\n    @log({\n        args: { 0: (n: ViewNode) => n.toString() }\n    })\n    dismiss(node: ViewNode) {\n        if (this._children.length === 0) return;\n\n        const index = this._children.findIndex(n => n === node);\n        if (index === -1) return;\n\n        this._children.splice(index, 1);\n        this.view.triggerNodeChange();\n    }\n\n    @gate()\n    @debug()\n    async refresh() {\n        if (this._children.length === 0) return;\n\n        await Promise.all(this._children.map(c => c.refresh()).filter(Functions.isPromise) as Promise<any>[]);\n    }\n}\n","'use strict';\nimport { TreeItem } from 'vscode';\nimport { SearchCommitsCommandArgs } from '../../commands';\nimport { Commands } from '../../commands/common';\nimport { GitRepoSearchBy } from '../../git/gitService';\nimport { View } from '../viewBase';\nimport { CommitsQueryResults, ResultsCommitsNode } from './resultsCommitsNode';\nimport { ResourceType, ViewNode } from './viewNode';\n\nexport class SearchResultsCommitsNode extends ResultsCommitsNode {\n    constructor(\n        view: View,\n        parent: ViewNode,\n        repoPath: string,\n        public readonly search: string,\n        public readonly searchBy: GitRepoSearchBy,\n        commitsQuery: (maxCount: number | undefined) => Promise<CommitsQueryResults>\n    ) {\n        super(view, parent, repoPath, commitsQuery);\n    }\n\n    get type(): ResourceType {\n        return ResourceType.SearchResults;\n    }\n\n    async getTreeItem(): Promise<TreeItem> {\n        const { log } = await super.getCommitsQueryResults();\n\n        const item = await super.getTreeItem();\n\n        if (log == null || log.count === 0) {\n            const args: SearchCommitsCommandArgs = {\n                search: this.search,\n                searchBy: this.searchBy,\n                prefillOnly: true\n            };\n            item.command = {\n                title: 'Search Commits',\n                command: Commands.SearchCommitsInView,\n                arguments: [args]\n            };\n        }\n\n        return item;\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { CompareViewConfig, configuration, ViewFilesLayout, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext, WorkspaceState } from '../constants';\nimport { Container } from '../container';\nimport { CompareNode, CompareResultsNode, NamedRef, ViewNode } from './nodes';\nimport { RefreshReason, ViewBase } from './viewBase';\n\nexport class CompareView extends ViewBase<CompareNode> {\n    constructor() {\n        super('gitlens.views.compare');\n\n        setCommandContext(CommandContext.ViewsCompareKeepResults, this.keepResults);\n    }\n\n    getRoot() {\n        return new CompareNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('clear'), () => this.clear(), this);\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToAuto'),\n            () => this.setFilesLayout(ViewFilesLayout.Auto),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToList'),\n            () => this.setFilesLayout(ViewFilesLayout.List),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToTree'),\n            () => this.setFilesLayout(ViewFilesLayout.Tree),\n            this\n        );\n        commands.registerCommand(this.getQualifiedCommand('setKeepResultsToOn'), () => this.setKeepResults(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setKeepResultsToOff'),\n            () => this.setKeepResults(false),\n            this\n        );\n        commands.registerCommand(this.getQualifiedCommand('swapComparision'), this.swapComparision, this);\n\n        commands.registerCommand(this.getQualifiedCommand('selectForCompare'), this.selectForCompare, this);\n        commands.registerCommand(this.getQualifiedCommand('compareWithSelected'), this.compareWithSelected, this);\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('compare').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('compare')('location').value)) {\n            this.initialize(this.config.location, { showCollapseAll: true });\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(RefreshReason.ConfigurationChanged);\n        }\n    }\n\n    get config(): ViewsConfig & CompareViewConfig {\n        return { ...Container.config.views, ...Container.config.views.compare };\n    }\n\n    get keepResults(): boolean {\n        return Container.context.workspaceState.get<boolean>(WorkspaceState.ViewsCompareKeepResults, false);\n    }\n\n    clear() {\n        if (this._root === undefined) return;\n\n        this._root.clear();\n    }\n\n    dismissNode(node: ViewNode) {\n        if (this._root === undefined) return;\n\n        this._root.dismiss(node);\n    }\n\n    compare(repoPath: string, ref1: string | NamedRef, ref2: string | NamedRef) {\n        return this.addResults(\n            new CompareResultsNode(\n                this,\n                repoPath,\n                typeof ref1 === 'string' ? { ref: ref1 } : ref1,\n                typeof ref2 === 'string' ? { ref: ref2 } : ref2\n            )\n        );\n    }\n\n    compareWithSelected(repoPath?: string, ref?: string | NamedRef) {\n        const root = this.ensureRoot();\n        void root.compareWithSelected(repoPath, ref);\n    }\n\n    selectForCompare(repoPath?: string, ref?: string | NamedRef) {\n        const root = this.ensureRoot();\n        void root.selectForCompare(repoPath, ref);\n    }\n\n    private async addResults(results: ViewNode) {\n        if (!this.visible) {\n            void (await this.show());\n        }\n\n        const root = this.ensureRoot();\n        root.addOrReplace(results, !this.keepResults);\n\n        setImmediate(() => this.reveal(results, { select: true, expand: true }));\n    }\n\n    private setFilesLayout(layout: ViewFilesLayout) {\n        return configuration.updateEffective(configuration.name('views')('compare')('files')('layout').value, layout);\n    }\n\n    private setKeepResults(enabled: boolean) {\n        Container.context.workspaceState.update(WorkspaceState.ViewsCompareKeepResults, enabled);\n        setCommandContext(CommandContext.ViewsCompareKeepResults, enabled);\n    }\n\n    private swapComparision(node: ViewNode) {\n        if (!(node instanceof CompareResultsNode)) return;\n\n        node.swap();\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { configuration, FileHistoryViewConfig, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitUri';\nimport { FileHistoryTrackerNode } from './nodes';\nimport { RefreshReason, ViewBase } from './viewBase';\n\nexport class FileHistoryView extends ViewBase<FileHistoryTrackerNode> {\n    constructor() {\n        super('gitlens.views.fileHistory');\n    }\n\n    getRoot() {\n        return new FileHistoryTrackerNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(), this);\n        commands.registerCommand(this.getQualifiedCommand('changeBase'), () => this.changeBase(), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOn'),\n            () => this.setEditorFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOff'),\n            () => this.setEditorFollowing(false),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOn'),\n            () => this.setRenameFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOff'),\n            () => this.setRenameFollowing(false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('fileHistory').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value) &&\n            !configuration.changed(e, configuration.name('advanced')('fileHistoryFollowsRenames').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('fileHistory')('enabled').value)) {\n            setCommandContext(CommandContext.ViewsFileHistoryEditorFollowing, true);\n        }\n\n        if (configuration.changed(e, configuration.name('views')('fileHistory')('location').value)) {\n            this.initialize(this.config.location);\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(RefreshReason.ConfigurationChanged);\n        }\n    }\n\n    get config(): ViewsConfig & FileHistoryViewConfig {\n        return { ...Container.config.views, ...Container.config.views.fileHistory };\n    }\n\n    async showHistoryForUri(uri: GitUri, baseRef?: string) {\n        const root = this.ensureRoot();\n\n        this.setEditorFollowing(false);\n        await root.showHistoryForUri(uri, baseRef);\n        return this.show();\n    }\n\n    private changeBase() {\n        if (this._root !== undefined) {\n            void this._root.changeBase();\n        }\n    }\n\n    private setEditorFollowing(enabled: boolean) {\n        setCommandContext(CommandContext.ViewsFileHistoryEditorFollowing, enabled);\n        if (this._root !== undefined) {\n            this._root.setEditorFollowing(enabled);\n        }\n    }\n\n    private setRenameFollowing(enabled: boolean) {\n        return configuration.updateEffective(\n            configuration.name('advanced')('fileHistoryFollowsRenames').value,\n            enabled\n        );\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { configuration, LineHistoryViewConfig, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { LineHistoryTrackerNode } from './nodes';\nimport { RefreshReason, ViewBase } from './viewBase';\n\nexport class LineHistoryView extends ViewBase<LineHistoryTrackerNode> {\n    constructor() {\n        super('gitlens.views.lineHistory');\n    }\n\n    getRoot() {\n        return new LineHistoryTrackerNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(), this);\n        commands.registerCommand(this.getQualifiedCommand('changeBase'), () => this.changeBase(), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOn'),\n            () => this.setEditorFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setEditorFollowingOff'),\n            () => this.setEditorFollowing(false),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOn'),\n            () => this.setRenameFollowing(true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setRenameFollowingOff'),\n            () => this.setRenameFollowing(false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('lineHistory').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value) &&\n            !configuration.changed(e, configuration.name('advanced')('fileHistoryFollowsRenames').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('lineHistory')('enabled').value)) {\n            setCommandContext(CommandContext.ViewsLineHistoryEditorFollowing, true);\n        }\n\n        if (configuration.changed(e, configuration.name('views')('lineHistory')('location').value)) {\n            this.initialize(this.config.location);\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(RefreshReason.ConfigurationChanged);\n        }\n    }\n\n    get config(): ViewsConfig & LineHistoryViewConfig {\n        return { ...Container.config.views, ...Container.config.views.lineHistory };\n    }\n\n    private changeBase() {\n        if (this._root !== undefined) {\n            void this._root.changeBase();\n        }\n    }\n\n    private setEditorFollowing(enabled: boolean) {\n        setCommandContext(CommandContext.ViewsLineHistoryEditorFollowing, enabled);\n        if (this._root !== undefined) {\n            this._root.setEditorFollowing(enabled);\n        }\n    }\n\n    private setRenameFollowing(enabled: boolean) {\n        return configuration.updateEffective(\n            configuration.name('advanced')('fileHistoryFollowsRenames').value,\n            enabled\n        );\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent, Event, EventEmitter } from 'vscode';\nimport { configuration, RepositoriesViewConfig, ViewFilesLayout, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext, WorkspaceState } from '../constants';\nimport { Container } from '../container';\nimport { RepositoriesNode } from './nodes';\nimport { RefreshReason, ViewBase } from './viewBase';\n\nexport class RepositoriesView extends ViewBase<RepositoriesNode> {\n    constructor() {\n        super('gitlens.views.repositories');\n    }\n\n    private _onDidChangeAutoRefresh = new EventEmitter<void>();\n    public get onDidChangeAutoRefresh(): Event<void> {\n        return this._onDidChangeAutoRefresh.event;\n    }\n\n    getRoot() {\n        return new RepositoriesNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToAuto'),\n            () => this.setFilesLayout(ViewFilesLayout.Auto),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToList'),\n            () => this.setFilesLayout(ViewFilesLayout.List),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToTree'),\n            () => this.setFilesLayout(ViewFilesLayout.Tree),\n            this\n        );\n\n        commands.registerCommand(\n            this.getQualifiedCommand('setAutoRefreshToOn'),\n            () => this.setAutoRefresh(Container.config.views.repositories.autoRefresh, true),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setAutoRefreshToOff'),\n            () => this.setAutoRefresh(Container.config.views.repositories.autoRefresh, false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('repositories').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('repositories')('autoRefresh').value)) {\n            void this.setAutoRefresh(Container.config.views.repositories.autoRefresh);\n        }\n\n        if (configuration.changed(e, configuration.name('views')('repositories')('location').value)) {\n            this.initialize(this.config.location);\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(RefreshReason.ConfigurationChanged);\n        }\n    }\n\n    get autoRefresh() {\n        return (\n            this.config.autoRefresh &&\n            Container.context.workspaceState.get<boolean>(WorkspaceState.ViewsRepositoriesAutoRefresh, true)\n        );\n    }\n\n    get config(): ViewsConfig & RepositoriesViewConfig {\n        return { ...Container.config.views, ...Container.config.views.repositories };\n    }\n\n    private async setAutoRefresh(enabled: boolean, workspaceEnabled?: boolean) {\n        if (enabled) {\n            if (workspaceEnabled === undefined) {\n                workspaceEnabled = Container.context.workspaceState.get<boolean>(\n                    WorkspaceState.ViewsRepositoriesAutoRefresh,\n                    true\n                );\n            }\n            else {\n                await Container.context.workspaceState.update(\n                    WorkspaceState.ViewsRepositoriesAutoRefresh,\n                    workspaceEnabled\n                );\n            }\n        }\n\n        setCommandContext(CommandContext.ViewsRepositoriesAutoRefresh, enabled && workspaceEnabled);\n\n        this._onDidChangeAutoRefresh.fire();\n    }\n\n    private setFilesLayout(layout: ViewFilesLayout) {\n        return configuration.updateEffective(\n            configuration.name('views')('repositories')('files')('layout').value,\n            layout\n        );\n    }\n}\n","'use strict';\nimport { commands, ConfigurationChangeEvent } from 'vscode';\nimport { configuration, SearchViewConfig, ViewFilesLayout, ViewsConfig } from '../configuration';\nimport { CommandContext, setCommandContext, WorkspaceState } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitRepoSearchBy } from '../git/gitService';\nimport { Functions, Strings } from '../system';\nimport { SearchNode, SearchResultsCommitsNode, ViewNode } from './nodes';\nimport { RefreshReason, ViewBase } from './viewBase';\n\ninterface SearchQueryResult {\n    label: string;\n    log: GitLog | undefined;\n}\n\nexport class SearchView extends ViewBase<SearchNode> {\n    constructor() {\n        super('gitlens.views.search');\n\n        setCommandContext(CommandContext.ViewsSearchKeepResults, this.keepResults);\n    }\n\n    getRoot() {\n        return new SearchNode(this);\n    }\n\n    protected get location(): string {\n        return this.config.location;\n    }\n\n    protected registerCommands() {\n        void Container.viewCommands;\n        commands.registerCommand(this.getQualifiedCommand('clear'), () => this.clear(), this);\n        commands.registerCommand(this.getQualifiedCommand('refresh'), () => this.refresh(), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToAuto'),\n            () => this.setFilesLayout(ViewFilesLayout.Auto),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToList'),\n            () => this.setFilesLayout(ViewFilesLayout.List),\n            this\n        );\n        commands.registerCommand(\n            this.getQualifiedCommand('setFilesLayoutToTree'),\n            () => this.setFilesLayout(ViewFilesLayout.Tree),\n            this\n        );\n        commands.registerCommand(this.getQualifiedCommand('setKeepResultsToOn'), () => this.setKeepResults(true), this);\n        commands.registerCommand(\n            this.getQualifiedCommand('setKeepResultsToOff'),\n            () => this.setKeepResults(false),\n            this\n        );\n    }\n\n    protected onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (\n            !configuration.changed(e, configuration.name('views')('search').value) &&\n            !configuration.changed(e, configuration.name('views').value) &&\n            !configuration.changed(e, configuration.name('defaultGravatarsStyle').value)\n        ) {\n            return;\n        }\n\n        if (configuration.changed(e, configuration.name('views')('search')('location').value)) {\n            this.initialize(this.config.location, { showCollapseAll: true });\n        }\n\n        if (!configuration.initializing(e) && this._root !== undefined) {\n            void this.refresh(RefreshReason.ConfigurationChanged);\n        }\n    }\n\n    get config(): ViewsConfig & SearchViewConfig {\n        return { ...Container.config.views, ...Container.config.views.search };\n    }\n\n    get keepResults(): boolean {\n        return Container.context.workspaceState.get<boolean>(WorkspaceState.ViewsSearchKeepResults, false);\n    }\n\n    clear() {\n        if (this._root === undefined) return;\n\n        this._root.clear();\n    }\n\n    dismissNode(node: ViewNode) {\n        if (this._root === undefined) return;\n\n        this._root.dismiss(node);\n    }\n\n    async search(\n        repoPath: string,\n        search: string,\n        searchBy: GitRepoSearchBy,\n        options: {\n            maxCount?: number;\n            label:\n                | string\n                | {\n                      label: string;\n                      resultsType?: { singular: string; plural: string };\n                  };\n        }\n    ) {\n        await this.show();\n\n        const searchQueryFn = this.getSearchQueryFn(\n            Container.git.getLogForSearch(repoPath, search, searchBy, {\n                maxCount: options.maxCount\n            }),\n            options\n        );\n\n        return this.addResults(\n            new SearchResultsCommitsNode(this, this._root!, repoPath, search, searchBy, searchQueryFn)\n        );\n    }\n\n    showSearchResults(\n        repoPath: string,\n        search: string,\n        searchBy: GitRepoSearchBy,\n        results: GitLog,\n        options: {\n            label:\n                | string\n                | {\n                      label: string;\n                      resultsType?: { singular: string; plural: string };\n                  };\n        }\n    ) {\n        const label = this.getSearchLabel(options.label, results);\n        const searchQueryFn = Functions.cachedOnce(this.getSearchQueryFn(results, options), {\n            label: label,\n            log: results\n        });\n\n        return this.addResults(\n            new SearchResultsCommitsNode(this, this._root!, repoPath, search, searchBy, searchQueryFn)\n        );\n    }\n\n    private addResults(results: ViewNode) {\n        const root = this.ensureRoot();\n        root.addOrReplace(results, !this.keepResults);\n\n        setImmediate(() => this.reveal(results, { select: true, expand: true }));\n    }\n\n    private getSearchLabel(\n        label:\n            | string\n            | {\n                  label: string;\n                  resultsType?: { singular: string; plural: string };\n              },\n        log: GitLog | undefined\n    ) {\n        if (typeof label === 'string') return label;\n\n        const count = log !== undefined ? log.count : 0;\n        const truncated = log !== undefined ? log.truncated : false;\n\n        const resultsType =\n            label.resultsType === undefined ? { singular: 'result', plural: 'results' } : label.resultsType;\n\n        return `${Strings.pluralize(resultsType.singular, count, {\n            number: truncated ? `${count}+` : undefined,\n            plural: resultsType.plural,\n            zero: 'No'\n        })} for ${label.label}`;\n    }\n\n    private getSearchQueryFn(\n        results: Promise<GitLog | undefined> | GitLog | undefined,\n        options: {\n            label:\n                | string\n                | {\n                      label: string;\n                      resultsType?: { singular: string; plural: string };\n                  };\n        }\n    ): (maxCount: number | undefined) => Promise<SearchQueryResult> {\n        return async (maxCount: number | undefined) => {\n            if (Functions.isPromise(results)) {\n                results = await results;\n            }\n\n            let log;\n            if (results !== undefined) {\n                log = await (results.query === undefined\n                    ? (maxCount: number | undefined) => Promise.resolve(results)\n                    : results.query)(maxCount);\n            }\n\n            const label = this.getSearchLabel(options.label, log);\n            return {\n                label: label,\n                log: log\n            };\n        };\n    }\n\n    private setFilesLayout(layout: ViewFilesLayout) {\n        return configuration.updateEffective(configuration.name('views')('search')('files')('layout').value, layout);\n    }\n\n    private setKeepResults(enabled: boolean) {\n        Container.context.workspaceState.update(WorkspaceState.ViewsSearchKeepResults, enabled);\n        setCommandContext(CommandContext.ViewsSearchKeepResults, enabled);\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, Disposable, InputBoxOptions, Terminal, TextDocumentShowOptions, Uri, window } from 'vscode';\nimport {\n    Commands,\n    DiffWithCommandArgs,\n    DiffWithCommandArgsRevision,\n    DiffWithPreviousCommandArgs,\n    DiffWithWorkingCommandArgs,\n    openEditor,\n    OpenFileInRemoteCommandArgs,\n    OpenFileRevisionCommandArgs,\n    openWorkspace\n} from '../commands';\nimport { BuiltInCommands, CommandContext, extensionTerminalName, setCommandContext } from '../constants';\nimport { Container } from '../container';\nimport { toGitLensFSUri } from '../git/fsProvider';\nimport { GitService, GitUri } from '../git/gitService';\nimport { Arrays } from '../system';\nimport {\n    BranchNode,\n    BranchTrackingStatusNode,\n    canDismissNode,\n    CommitFileNode,\n    CommitNode,\n    RemoteNode,\n    RepositoryNode,\n    ResultsFileNode,\n    StashFileNode,\n    StashNode,\n    StatusFileNode,\n    TagNode,\n    ViewNode,\n    ViewRefNode\n} from './nodes';\n\nexport interface RefreshNodeCommandArgs {\n    maxCount?: number;\n}\n\ninterface ICompareSelected {\n    ref: string;\n    repoPath: string | undefined;\n    uri?: Uri;\n}\n\nexport class ViewCommands implements Disposable {\n    private _disposable: Disposable | undefined;\n    private _terminal: Terminal | undefined;\n    private _terminalCwd: string | undefined;\n\n    constructor() {\n        commands.registerCommand(\n            'gitlens.views.refreshNode',\n            (node: ViewNode, args?: RefreshNodeCommandArgs) => node.view.refreshNode(node, args),\n            this\n        );\n        commands.registerCommand(\n            'gitlens.views.expandNode',\n            (node: ViewNode) => node.view.reveal(node, { select: false, focus: false, expand: 3 }),\n            this\n        );\n        commands.registerCommand(\n            'gitlens.views.dismissNode',\n            (node: ViewNode) => canDismissNode(node.view) && node.view.dismissNode(node),\n            this\n        );\n\n        commands.registerCommand('gitlens.views.fetch', this.fetch, this);\n        commands.registerCommand('gitlens.views.pull', this.pull, this);\n        commands.registerCommand('gitlens.views.push', this.push, this);\n        commands.registerCommand('gitlens.views.pushWithForce', n => this.push(n, true), this);\n        commands.registerCommand('gitlens.views.closeRepository', this.closeRepository, this);\n\n        commands.registerCommand('gitlens.views.exploreRepoRevision', this.exploreRepoRevision, this);\n\n        commands.registerCommand('gitlens.views.openChanges', this.openChanges, this);\n        commands.registerCommand('gitlens.views.openChangesWithWorking', this.openChangesWithWorking, this);\n        commands.registerCommand('gitlens.views.openFile', this.openFile, this);\n        commands.registerCommand('gitlens.views.openFileRevision', this.openFileRevision, this);\n        commands.registerCommand('gitlens.views.openFileRevisionInRemote', this.openFileRevisionInRemote, this);\n        commands.registerCommand('gitlens.views.openChangedFiles', this.openChangedFiles, this);\n        commands.registerCommand('gitlens.views.openChangedFileChanges', this.openChangedFileChanges, this);\n        commands.registerCommand(\n            'gitlens.views.openChangedFileChangesWithWorking',\n            this.openChangedFileChangesWithWorking,\n            this\n        );\n        commands.registerCommand('gitlens.views.openChangedFileRevisions', this.openChangedFileRevisions, this);\n        commands.registerCommand('gitlens.views.applyChanges', this.applyChanges, this);\n        commands.registerCommand('gitlens.views.checkout', this.checkout, this);\n\n        commands.registerCommand('gitlens.views.stageFile', this.stageFile, this);\n        commands.registerCommand('gitlens.views.unstageFile', this.unstageFile, this);\n\n        commands.registerCommand('gitlens.views.compareAncestryWithWorking', this.compareAncestryWithWorking, this);\n        commands.registerCommand('gitlens.views.compareWithHead', this.compareWithHead, this);\n        commands.registerCommand('gitlens.views.compareWithRemote', this.compareWithRemote, this);\n        commands.registerCommand('gitlens.views.compareWithSelected', this.compareWithSelected, this);\n        commands.registerCommand('gitlens.views.selectForCompare', this.selectForCompare, this);\n        commands.registerCommand('gitlens.views.compareFileWithSelected', this.compareFileWithSelected, this);\n        commands.registerCommand('gitlens.views.selectFileForCompare', this.selectFileForCompare, this);\n        commands.registerCommand('gitlens.views.compareWithWorking', this.compareWithWorking, this);\n\n        commands.registerCommand('gitlens.views.terminalCheckoutBranch', this.terminalCheckoutBranch, this);\n        commands.registerCommand('gitlens.views.terminalCreateBranch', this.terminalCreateBranch, this);\n        commands.registerCommand('gitlens.views.terminalDeleteBranch', this.terminalDeleteBranch, this);\n        commands.registerCommand('gitlens.views.terminalMergeBranch', this.terminalMergeBranch, this);\n        commands.registerCommand('gitlens.views.terminalRebaseBranch', this.terminalRebaseBranch, this);\n        commands.registerCommand('gitlens.views.terminalRebaseBranchToRemote', this.terminalRebaseBranchToRemote, this);\n        commands.registerCommand(\n            'gitlens.views.terminalSquashBranchIntoCommit',\n            this.terminalSquashBranchIntoCommit,\n            this\n        );\n        commands.registerCommand('gitlens.views.terminalCheckoutCommit', this.terminalCheckoutCommit, this);\n        commands.registerCommand('gitlens.views.terminalCherryPickCommit', this.terminalCherryPickCommit, this);\n        commands.registerCommand('gitlens.views.terminalPushCommit', this.terminalPushCommit, this);\n        commands.registerCommand('gitlens.views.terminalRebaseCommit', this.terminalRebaseCommit, this);\n        commands.registerCommand('gitlens.views.terminalResetCommit', this.terminalResetCommit, this);\n        commands.registerCommand('gitlens.views.terminalRevertCommit', this.terminalRevertCommit, this);\n        commands.registerCommand('gitlens.views.terminalRemoveRemote', this.terminalRemoveRemote, this);\n        commands.registerCommand('gitlens.views.terminalCreateTag', this.terminalCreateTag, this);\n        commands.registerCommand('gitlens.views.terminalDeleteTag', this.terminalDeleteTag, this);\n    }\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n    }\n\n    private fetch(node: RemoteNode | RepositoryNode) {\n        if (node instanceof RemoteNode) return node.fetch();\n        if (node instanceof RepositoryNode) return node.fetch();\n        return;\n    }\n\n    private pull(node: RepositoryNode | BranchTrackingStatusNode) {\n        if (node instanceof BranchTrackingStatusNode) {\n            node = node.getParent() as RepositoryNode;\n        }\n        if (!(node instanceof RepositoryNode)) return;\n\n        return node.pull();\n    }\n\n    private push(node: RepositoryNode | BranchTrackingStatusNode, force?: boolean) {\n        if (node instanceof BranchTrackingStatusNode) {\n            node = node.getParent() as RepositoryNode;\n        }\n        if (!(node instanceof RepositoryNode)) return;\n\n        return node.push({ force: force });\n    }\n\n    private async applyChanges(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if (\n            !(node instanceof CommitFileNode) &&\n            !(node instanceof StashFileNode) &&\n            !(node instanceof ResultsFileNode)\n        ) {\n            return;\n        }\n\n        void (await this.openFile(node));\n\n        if (node instanceof ResultsFileNode) {\n            void (await Container.git.applyChangesToWorkingFile(node.uri, node.ref1, node.ref2));\n\n            return;\n        }\n\n        if (node.uri.sha !== undefined && node.uri.sha !== 'HEAD') {\n            void (await Container.git.applyChangesToWorkingFile(node.uri));\n        }\n    }\n\n    private async checkout(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        return Container.git.checkout(node.repoPath, node.ref);\n    }\n\n    private closeRepository(node: RepositoryNode) {\n        if (!(node instanceof RepositoryNode)) return;\n\n        node.repo.closed = true;\n    }\n\n    private compareWithHead(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        return Container.compareView.compare(node.repoPath, node.ref, 'HEAD');\n    }\n\n    private compareWithRemote(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n        if (!node.branch.tracking) return;\n\n        return Container.compareView.compare(node.repoPath, node.branch.tracking, node.ref);\n    }\n\n    private compareWithWorking(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        return Container.compareView.compare(node.repoPath, node.ref, '');\n    }\n\n    private async compareAncestryWithWorking(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        const branch = await Container.git.getBranch(node.repoPath);\n        if (branch === undefined) return;\n\n        const commonAncestor = await Container.git.getMergeBase(node.repoPath, branch.ref, node.ref);\n        if (commonAncestor === undefined) return;\n\n        return Container.compareView.compare(\n            node.repoPath,\n            { ref: commonAncestor, label: `ancestry with ${node.ref} (${GitService.shortenSha(commonAncestor)})` },\n            ''\n        );\n    }\n\n    private compareWithSelected(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        Container.compareView.compareWithSelected(node.repoPath, node.ref);\n    }\n\n    private selectForCompare(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        Container.compareView.selectForCompare(node.repoPath, node.ref);\n    }\n\n    private compareFileWithSelected(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if (\n            this._selectedFile === undefined ||\n            (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) ||\n            node.ref === undefined\n        ) {\n            return;\n        }\n        if (this._selectedFile.repoPath !== node.repoPath) {\n            this.selectFileForCompare(node);\n            return;\n        }\n\n        const selected = this._selectedFile;\n\n        this._selectedFile = undefined;\n        setCommandContext(CommandContext.ViewsCanCompareFile, false);\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: selected.repoPath,\n            lhs: {\n                sha: selected.ref,\n                uri: selected.uri!\n            },\n            rhs: {\n                sha: node.ref,\n                uri: node.uri\n            }\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n\n    private _selectedFile: ICompareSelected | undefined;\n\n    private selectFileForCompare(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if ((!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) || node.ref === undefined) return;\n\n        this._selectedFile = {\n            ref: node.ref,\n            repoPath: node.repoPath,\n            uri: node.uri\n        };\n        setCommandContext(CommandContext.ViewsCanCompareFile, true);\n    }\n\n    private exploreRepoRevision(node: ViewRefNode, options: { openInNewWindow?: boolean } = {}) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        const uri = toGitLensFSUri(node.ref, node.repoPath);\n        const gitUri = GitUri.fromRevisionUri(uri);\n\n        openWorkspace(uri, `${paths.basename(gitUri.repoPath!)} @ ${gitUri.shortSha}`, options);\n\n        void commands.executeCommand(BuiltInCommands.FocusFilesExplorer);\n    }\n\n    private openChanges(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) return;\n\n        const command = node.getCommand();\n        if (command === undefined || command.arguments === undefined) return;\n\n        const [uri, args] = command.arguments as [Uri, DiffWithPreviousCommandArgs];\n        args.showOptions!.preview = false;\n        return commands.executeCommand(command.command, uri, args);\n    }\n\n    private async openChangesWithWorking(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) return;\n\n        const args: DiffWithWorkingCommandArgs = {\n            showOptions: {\n                preserveFocus: true,\n                preview: false\n            }\n        };\n\n        if (node instanceof ResultsFileNode) {\n            args.commit = await Container.git.getLogCommitForFile(node.repoPath, node.uri.fsPath, {\n                ref: node.uri.sha,\n                firstIfNotFound: true,\n                reverse: true\n            });\n        }\n\n        return commands.executeCommand(Commands.DiffWithWorking, node.uri, args);\n    }\n\n    private openFile(node: CommitFileNode | StashFileNode | ResultsFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) return;\n\n        return openEditor(node.uri, { preserveFocus: true, preview: false });\n    }\n\n    private openFileRevision(\n        node: CommitFileNode | StashFileNode | ResultsFileNode,\n        options: OpenFileRevisionCommandArgs = { showOptions: { preserveFocus: true, preview: false } }\n    ) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof ResultsFileNode)) return;\n\n        let uri = options.uri;\n        if (uri == null) {\n            if (node instanceof ResultsFileNode) {\n                uri = GitUri.toRevisionUri(node.uri);\n            }\n            else {\n                uri =\n                    node.commit.status === 'D'\n                        ? GitUri.toRevisionUri(\n                              node.commit.previousSha!,\n                              node.commit.previousUri.fsPath,\n                              node.commit.repoPath\n                          )\n                        : GitUri.toRevisionUri(node.uri);\n            }\n        }\n\n        return openEditor(uri, options.showOptions || { preserveFocus: true, preview: false });\n    }\n\n    private async openChangedFileChanges(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const repoPath = node.commit.repoPath;\n        const uris = node.commit.files.map(s => GitUri.fromFile(s, repoPath));\n\n        for (const uri of uris) {\n            await this.openDiffWith(\n                repoPath,\n                {\n                    uri: uri,\n                    sha:\n                        node.commit.previousSha !== undefined ? node.commit.previousSha : GitService.deletedOrMissingSha\n                },\n                { uri: uri, sha: node.commit.sha },\n                options\n            );\n        }\n    }\n\n    private async openChangedFileChangesWithWorking(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const repoPath = node.commit.repoPath;\n        const uris = Arrays.filterMap(node.commit.files, f =>\n            f.status !== 'D' ? GitUri.fromFile(f, repoPath) : undefined\n        );\n\n        for (const uri of uris) {\n            await this.openDiffWith(repoPath, { uri: uri, sha: node.commit.sha }, { uri: uri, sha: '' }, options);\n        }\n    }\n\n    private async openChangedFiles(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const repoPath = node.commit.repoPath;\n        const uris = Arrays.filterMap(node.commit.files, f => GitUri.fromFile(f, repoPath));\n\n        for (const uri of uris) {\n            await openEditor(uri, options);\n        }\n    }\n\n    private async openChangedFileRevisions(\n        node: CommitNode | StashNode,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        if (!(node instanceof CommitNode) && !(node instanceof StashNode)) return;\n\n        const uris = Arrays.filterMap(node.commit.files, f =>\n            GitUri.toRevisionUri(\n                f.status === 'D' ? node.commit.previousFileSha : node.commit.sha,\n                f,\n                node.commit.repoPath\n            )\n        );\n        for (const uri of uris) {\n            await openEditor(uri, options);\n        }\n    }\n\n    private async openDiffWith(\n        repoPath: string,\n        lhs: DiffWithCommandArgsRevision,\n        rhs: DiffWithCommandArgsRevision,\n        options: TextDocumentShowOptions = { preserveFocus: false, preview: false }\n    ) {\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: repoPath,\n            lhs: lhs,\n            rhs: rhs,\n            showOptions: options\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n\n    private async openFileRevisionInRemote(node: CommitFileNode | StashFileNode | StatusFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof StatusFileNode)) return;\n\n        return commands.executeCommand(Commands.OpenFileInRemote, node.commit.toGitUri(node.commit.status === 'D'), {\n            range: false\n        } as OpenFileInRemoteCommandArgs);\n    }\n\n    private async stageFile(node: CommitFileNode | StatusFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof StatusFileNode)) return;\n\n        void (await Container.git.stageFile(node.repoPath, node.file.fileName));\n    }\n\n    private async unstageFile(node: CommitFileNode | StatusFileNode) {\n        if (!(node instanceof CommitFileNode) && !(node instanceof StatusFileNode)) return;\n\n        void (await Container.git.unStageFile(node.repoPath, node.file.fileName));\n    }\n\n    async terminalCheckoutBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('checkout', `${node.ref}`, node.repoPath);\n    }\n\n    async terminalCreateBranch(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        let remoteBranch = false;\n        let value = undefined;\n        if (node instanceof BranchNode && node.branch.remote) {\n            remoteBranch = true;\n            value = node.branch.getName();\n        }\n\n        const name = await window.showInputBox({\n            prompt: `Please provide a branch name (Press 'Enter' to confirm or 'Escape' to cancel)`,\n            placeHolder: `Branch name`,\n            value: value\n        } as InputBoxOptions);\n        if (name === undefined || name.length === 0) return;\n\n        this.sendTerminalCommand('branch', `${remoteBranch ? '-t ' : ''}${name} ${node.ref}`, node.repoPath);\n    }\n\n    terminalDeleteBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        if (node.branch.remote) {\n            this.sendTerminalCommand('push', `${node.branch.getRemote()} :${node.branch.getName()}`, node.repoPath);\n        }\n        else {\n            this.sendTerminalCommand('branch', `-d ${node.ref}`, node.repoPath);\n        }\n    }\n\n    terminalMergeBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('merge', `${node.ref}`, node.repoPath);\n    }\n\n    terminalRebaseBranch(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('rebase', `-i ${node.ref}`, node.repoPath);\n    }\n\n    terminalRebaseBranchToRemote(node: BranchNode | BranchTrackingStatusNode) {\n        if (node instanceof BranchNode) {\n            if (!node.branch.current || !node.branch.tracking) return;\n\n            this.sendTerminalCommand('rebase', `-i ${node.branch.tracking}`, node.repoPath);\n        }\n        else if (node instanceof BranchTrackingStatusNode) {\n            this.sendTerminalCommand('rebase', `-i ${node.status.upstream}`, node.status.repoPath);\n        }\n    }\n\n    terminalSquashBranchIntoCommit(node: BranchNode) {\n        if (!(node instanceof BranchNode)) return;\n\n        this.sendTerminalCommand('merge', `--squash ${node.ref}`, node.repoPath);\n    }\n\n    terminalCheckoutCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('checkout', `${node.ref}`, node.repoPath);\n    }\n\n    terminalCherryPickCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('cherry-pick', `-e ${node.ref}`, node.repoPath);\n    }\n\n    async terminalPushCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        const branch = node.branch || (await Container.git.getBranch(node.repoPath));\n        if (branch === undefined) return;\n\n        this.sendTerminalCommand('push', `${branch.getRemote()} ${node.ref}:${branch.getName()}`, node.repoPath);\n    }\n\n    terminalRebaseCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('rebase', `-i ${node.ref}^`, node.repoPath);\n    }\n\n    terminalResetCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('reset', `--soft ${node.ref}`, node.repoPath);\n    }\n\n    terminalRevertCommit(node: CommitNode) {\n        if (!(node instanceof CommitNode)) return;\n\n        this.sendTerminalCommand('revert', `-e ${node.ref}`, node.repoPath);\n    }\n\n    terminalRemoveRemote(node: RemoteNode) {\n        if (!(node instanceof RemoteNode)) return;\n\n        this.sendTerminalCommand('remote', `remove ${node.remote.name}`, node.remote.repoPath);\n    }\n\n    async terminalCreateTag(node: ViewRefNode) {\n        if (!(node instanceof ViewRefNode)) return;\n\n        const name = await window.showInputBox({\n            prompt: `Please provide a tag name (Press 'Enter' to confirm or 'Escape' to cancel)`,\n            placeHolder: `Tag name`\n        } as InputBoxOptions);\n        if (name === undefined || name.length === 0) return;\n\n        const message = await window.showInputBox({\n            prompt: `Please provide an optional message to annotate the tag (Press 'Enter' to confirm or 'Escape' to cancel)`,\n            placeHolder: `Tag message`\n        } as InputBoxOptions);\n        if (message === undefined) return;\n\n        const args = `${message.length !== 0 ? `-a -m \"${message}\" ` : ''}${name} ${node.ref}`;\n        this.sendTerminalCommand('tag', args, node.repoPath);\n    }\n\n    terminalDeleteTag(node: TagNode) {\n        if (!(node instanceof TagNode)) return;\n\n        this.sendTerminalCommand('tag', `-d ${node.ref}`, node.repoPath);\n    }\n\n    private ensureTerminal(cwd: string): Terminal {\n        if (this._terminal === undefined) {\n            this._terminal = window.createTerminal(extensionTerminalName);\n            this._disposable = window.onDidCloseTerminal((e: Terminal) => {\n                if (e.name === extensionTerminalName) {\n                    this._terminal = undefined;\n                    this._disposable!.dispose();\n                    this._disposable = undefined;\n                }\n            }, this);\n\n            Container.context.subscriptions.push(this._disposable);\n            this._terminalCwd = undefined;\n        }\n\n        if (this._terminalCwd !== cwd) {\n            this._terminal.sendText(`cd \"${cwd}\"`, true);\n            this._terminalCwd = cwd;\n        }\n\n        return this._terminal;\n    }\n\n    private sendTerminalCommand(command: string, args: string, cwd: string) {\n        // let git = GitService.getGitPath();\n        // if (git.includes(' ')) {\n        //     git = `\"${git}\"`;\n        // }\n\n        const terminal = this.ensureTerminal(cwd);\n        terminal.show(false);\n        terminal.sendText(`git ${command} ${args}`, false);\n    }\n}\n","'use strict';\nimport * as fs from 'fs';\nimport {\n    ConfigurationChangeEvent,\n    ConfigurationTarget,\n    Disposable,\n    Uri,\n    ViewColumn,\n    WebviewPanel,\n    WebviewPanelOnDidChangeViewStateEvent,\n    window,\n    workspace\n} from 'vscode';\nimport { Config, configuration } from '../configuration';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Message, SettingsChangedMessage } from '../ui/ipc';\n\nexport abstract class WebviewEditor<TBootstrap> implements Disposable {\n    private _disposable: Disposable | undefined;\n    private _disposablePanel: Disposable | undefined;\n    private _panel: WebviewPanel | undefined;\n\n    constructor() {\n        this._disposable = Disposable.from(\n            configuration.onDidChange(this.onConfigurationChanged, this),\n            ...this.registerCommands()\n        );\n    }\n\n    abstract get filename(): string;\n    abstract get id(): string;\n    abstract get title(): string;\n\n    abstract getBootstrap(): TBootstrap;\n    abstract registerCommands(): Disposable[];\n\n    dispose() {\n        this._disposable && this._disposable.dispose();\n        this._disposablePanel && this._disposablePanel.dispose();\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        this.postUpdatedConfiguration();\n    }\n\n    private onPanelDisposed() {\n        this._disposablePanel && this._disposablePanel.dispose();\n        this._panel = undefined;\n    }\n\n    private onViewStateChanged(e: WebviewPanelOnDidChangeViewStateEvent) {\n        Logger.log(\n            'WebviewEditor.onViewStateChanged',\n            `active=${e.webviewPanel.active}, visible=${e.webviewPanel.visible}`\n        );\n\n        // Anytime the webview becomes active, make sure it has the most up-to-date config\n        if (e.webviewPanel.active) {\n            this.postUpdatedConfiguration();\n        }\n    }\n\n    protected async onMessageReceived(e: Message) {\n        if (e == null) return;\n\n        Logger.log(`WebviewEditor.onMessageReceived: type=${e.type}, data=${JSON.stringify(e)}`);\n\n        switch (e.type) {\n            case 'saveSettings':\n                const target = e.scope === 'workspace' ? ConfigurationTarget.Workspace : ConfigurationTarget.Global;\n\n                for (const key in e.changes) {\n                    const inspect = await configuration.inspect(key)!;\n\n                    const value = e.changes[key];\n                    await configuration.update(key, value === inspect.defaultValue ? undefined : value, target);\n                }\n\n                for (const key of e.removes) {\n                    await configuration.update(key, undefined, target);\n                }\n                break;\n        }\n    }\n\n    get visible() {\n        return this._panel === undefined ? false : this._panel.visible;\n    }\n\n    hide() {\n        if (this._panel === undefined) return;\n\n        this._panel.dispose();\n    }\n\n    async show(): Promise<void> {\n        const html = await this.getHtml();\n\n        if (this._panel === undefined) {\n            this._panel = window.createWebviewPanel(\n                this.id,\n                this.title,\n                { viewColumn: ViewColumn.Active, preserveFocus: false },\n                {\n                    retainContextWhenHidden: true,\n                    enableFindWidget: true,\n                    enableCommandUris: true,\n                    enableScripts: true\n                }\n            );\n\n            this._panel.iconPath = Uri.file(Container.context.asAbsolutePath('images/gitlens-icon.png'));\n            this._disposablePanel = Disposable.from(\n                this._panel,\n                this._panel.onDidDispose(this.onPanelDisposed, this),\n                this._panel.onDidChangeViewState(this.onViewStateChanged, this),\n                this._panel.webview.onDidReceiveMessage(this.onMessageReceived, this)\n            );\n\n            this._panel.webview.html = html;\n        }\n        else {\n            // Reset the html to get the webview to reload\n            this._panel.webview.html = '';\n            this._panel.webview.html = html;\n            this._panel.reveal(ViewColumn.Active, false);\n        }\n    }\n\n    private _html: string | undefined;\n    private async getHtml(): Promise<string> {\n        let content;\n        // When we are debugging avoid any caching so that we can change the html and have it update without reloading\n        if (Logger.isDebugging) {\n            content = await new Promise<string>((resolve, reject) => {\n                fs.readFile(Container.context.asAbsolutePath(this.filename), 'utf8', (err, data) => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve(data);\n                    }\n                });\n            });\n        }\n        else {\n            if (this._html !== undefined) return this._html;\n\n            const doc = await workspace.openTextDocument(Container.context.asAbsolutePath(this.filename));\n            content = doc.getText();\n        }\n\n        this._html = content.replace(\n            /{{root}}/g,\n            Uri.file(Container.context.asAbsolutePath('.'))\n                .with({ scheme: 'vscode-resource' })\n                .toString()\n        );\n\n        if (this._html.includes(\"'{{bootstrap}}'\")) {\n            this._html = this._html.replace(\"'{{bootstrap}}'\", JSON.stringify(this.getBootstrap()));\n        }\n\n        return this._html;\n    }\n\n    private postMessage(message: Message) {\n        if (this._panel === undefined) return false;\n\n        return this._panel!.webview.postMessage(message);\n    }\n\n    private postUpdatedConfiguration() {\n        // Make sure to get the raw config, not from the container which has the modes mixed in\n        return this.postMessage({\n            type: 'settingsChanged',\n            config: configuration.get<Config>()\n        } as SettingsChangedMessage);\n    }\n}\n","'use strict';\nimport { commands, workspace } from 'vscode';\nimport { Commands } from '../commands';\nimport { Config, configuration } from '../configuration';\nimport { SettingsBootstrap } from '../ui/ipc';\nimport { WebviewEditor } from './webviewEditor';\n\nexport class SettingsEditor extends WebviewEditor<SettingsBootstrap> {\n    constructor() {\n        super();\n    }\n\n    get filename(): string {\n        return 'settings.html';\n    }\n\n    get id(): string {\n        return 'gitlens.settings';\n    }\n\n    get title(): string {\n        return 'GitLens Settings';\n    }\n\n    getBootstrap() {\n        return {\n            // Make sure to get the raw config, not from the container which has the modes mixed in\n            config: configuration.get<Config>(),\n            scope: 'user',\n            scopes: this.getAvailableScopes()\n        } as SettingsBootstrap;\n    }\n\n    registerCommands() {\n        return [commands.registerCommand(Commands.ShowSettingsPage, this.show, this)];\n    }\n\n    private getAvailableScopes(): ['user' | 'workspace', string][] {\n        const scopes: ['user' | 'workspace', string][] = [['user', 'User']];\n        if (workspace.workspaceFolders !== undefined && workspace.workspaceFolders.length) {\n            scopes.push(['workspace', 'Workspace']);\n        }\n        return scopes;\n    }\n}\n","'use strict';\nimport { commands } from 'vscode';\nimport { Commands } from '../commands';\nimport { Container } from '../container';\nimport { WelcomeBootstrap } from '../ui/ipc';\nimport { WebviewEditor } from './webviewEditor';\n\nexport class WelcomeEditor extends WebviewEditor<WelcomeBootstrap> {\n    constructor() {\n        super();\n    }\n\n    get filename(): string {\n        return 'welcome.html';\n    }\n\n    get id(): string {\n        return 'gitlens.welcome';\n    }\n\n    get title(): string {\n        return 'Welcome to GitLens';\n    }\n\n    getBootstrap(): WelcomeBootstrap {\n        return {\n            config: Container.config\n        };\n    }\n\n    registerCommands() {\n        return [commands.registerCommand(Commands.ShowWelcomePage, this.show, this)];\n    }\n}\n","'use strict';\nimport { Disposable, ExtensionContext } from 'vscode';\nimport { FileAnnotationController } from './annotations/fileAnnotationController';\nimport { LineAnnotationController } from './annotations/lineAnnotationController';\nimport { GitCodeLensController } from './codelens/codeLensController';\nimport { Config, configuration } from './configuration';\nimport { GitFileSystemProvider } from './git/fsProvider';\nimport { GitService } from './git/gitService';\nimport { LineHoverController } from './hovers/lineHoverController';\nimport { Keyboard } from './keyboard';\nimport { StatusBarController } from './statusbar/statusBarController';\nimport { GitDocumentTracker } from './trackers/gitDocumentTracker';\nimport { GitLineTracker } from './trackers/gitLineTracker';\nimport { CompareView } from './views/compareView';\nimport { FileHistoryView } from './views/fileHistoryView';\nimport { LineHistoryView } from './views/lineHistoryView';\nimport { RepositoriesView } from './views/repositoriesView';\nimport { SearchView } from './views/searchView';\nimport { ViewCommands } from './views/viewCommands';\nimport { VslsController } from './vsls/vsls';\nimport { SettingsEditor } from './webviews/settingsEditor';\nimport { WelcomeEditor } from './webviews/welcomeEditor';\n\nexport class Container {\n    static initialize(context: ExtensionContext, config: Config) {\n        this._context = context;\n        this._config = Container.applyMode(config);\n\n        context.subscriptions.push((this._lineTracker = new GitLineTracker()));\n        context.subscriptions.push((this._tracker = new GitDocumentTracker()));\n        context.subscriptions.push((this._vsls = new VslsController()));\n\n        context.subscriptions.push((this._git = new GitService()));\n\n        // Since there is a bit of a chicken & egg problem with the DocumentTracker and the GitService, initialize the tracker once the GitService is loaded\n        this._tracker.initialize();\n\n        context.subscriptions.push((this._fileAnnotationController = new FileAnnotationController()));\n        context.subscriptions.push((this._lineAnnotationController = new LineAnnotationController()));\n        context.subscriptions.push((this._lineHoverController = new LineHoverController()));\n        context.subscriptions.push((this._statusBarController = new StatusBarController()));\n        context.subscriptions.push((this._codeLensController = new GitCodeLensController()));\n        context.subscriptions.push((this._keyboard = new Keyboard()));\n        context.subscriptions.push((this._settingsEditor = new SettingsEditor()));\n        context.subscriptions.push((this._welcomeEditor = new WelcomeEditor()));\n\n        if (config.views.compare.enabled) {\n            context.subscriptions.push((this._compareView = new CompareView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('compare')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._compareView = new CompareView()));\n                }\n            });\n        }\n\n        if (config.views.fileHistory.enabled) {\n            context.subscriptions.push((this._fileHistoryView = new FileHistoryView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('fileHistory')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._fileHistoryView = new FileHistoryView()));\n                }\n            });\n        }\n\n        if (config.views.lineHistory.enabled) {\n            context.subscriptions.push((this._lineHistoryView = new LineHistoryView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('lineHistory')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._lineHistoryView = new LineHistoryView()));\n                }\n            });\n        }\n\n        if (config.views.repositories.enabled) {\n            context.subscriptions.push((this._repositoriesView = new RepositoriesView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('repositories')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._repositoriesView = new RepositoriesView()));\n                }\n            });\n        }\n\n        if (config.views.search.enabled) {\n            context.subscriptions.push((this._searchView = new SearchView()));\n        }\n        else {\n            let disposable: Disposable;\n            disposable = configuration.onDidChange(e => {\n                if (configuration.changed(e, configuration.name('views')('search')('enabled').value)) {\n                    disposable.dispose();\n                    context.subscriptions.push((this._searchView = new SearchView()));\n                }\n            });\n        }\n\n        context.subscriptions.push(new GitFileSystemProvider());\n    }\n\n    private static _codeLensController: GitCodeLensController;\n    static get codeLens() {\n        return this._codeLensController;\n    }\n\n    private static _compareView: CompareView | undefined;\n    static get compareView() {\n        if (this._compareView === undefined) {\n            this._context.subscriptions.push((this._compareView = new CompareView()));\n        }\n\n        return this._compareView;\n    }\n\n    private static _config: Config | undefined;\n    static get config() {\n        if (this._config === undefined) {\n            this._config = Container.applyMode(configuration.get<Config>());\n        }\n        return this._config;\n    }\n\n    private static _context: ExtensionContext;\n    static get context() {\n        return this._context;\n    }\n\n    private static _fileAnnotationController: FileAnnotationController;\n    static get fileAnnotations() {\n        return this._fileAnnotationController;\n    }\n\n    private static _fileHistoryView: FileHistoryView | undefined;\n    static get fileHistoryView() {\n        if (this._fileHistoryView === undefined) {\n            this._context.subscriptions.push((this._fileHistoryView = new FileHistoryView()));\n        }\n\n        return this._fileHistoryView;\n    }\n\n    private static _git: GitService;\n    static get git() {\n        return this._git;\n    }\n\n    private static _keyboard: Keyboard;\n    static get keyboard() {\n        return this._keyboard;\n    }\n\n    private static _lineAnnotationController: LineAnnotationController;\n    static get lineAnnotations() {\n        return this._lineAnnotationController;\n    }\n\n    private static _lineHistoryView: LineHistoryView | undefined;\n    static get lineHistoryView() {\n        if (this._lineHistoryView === undefined) {\n            this._context.subscriptions.push((this._lineHistoryView = new LineHistoryView()));\n        }\n\n        return this._lineHistoryView;\n    }\n\n    private static _lineHoverController: LineHoverController;\n    static get lineHovers() {\n        return this._lineHoverController;\n    }\n\n    private static _lineTracker: GitLineTracker;\n    static get lineTracker() {\n        return this._lineTracker;\n    }\n\n    private static _repositoriesView: RepositoriesView | undefined;\n    static get repositoriesView(): RepositoriesView {\n        return this._repositoriesView!;\n    }\n\n    private static _searchView: SearchView | undefined;\n    static get searchView() {\n        if (this._searchView === undefined) {\n            this._context.subscriptions.push((this._searchView = new SearchView()));\n        }\n\n        return this._searchView;\n    }\n\n    private static _settingsEditor: SettingsEditor;\n    static get settingsEditor() {\n        return this._settingsEditor;\n    }\n\n    private static _statusBarController: StatusBarController;\n    static get statusBar() {\n        return this._statusBarController;\n    }\n\n    private static _tracker: GitDocumentTracker;\n    static get tracker() {\n        return this._tracker;\n    }\n\n    private static _viewCommands: ViewCommands | undefined;\n    static get viewCommands() {\n        if (this._viewCommands === undefined) {\n            this._context.subscriptions.push((this._viewCommands = new ViewCommands()));\n        }\n        return this._viewCommands;\n    }\n\n    private static _vsls: VslsController;\n    static get vsls() {\n        return this._vsls;\n    }\n\n    private static _welcomeEditor: WelcomeEditor;\n    static get welcomeEditor() {\n        return this._welcomeEditor;\n    }\n\n    static resetConfig() {\n        this._config = undefined;\n    }\n\n    private static applyMode(config: Config) {\n        if (!config.mode.active) return config;\n\n        const mode = config.modes[config.mode.active];\n        if (mode == null) return config;\n\n        if (mode.codeLens != null) {\n            config.codeLens.enabled = mode.codeLens;\n        }\n\n        if (mode.currentLine != null) {\n            config.currentLine.enabled = mode.currentLine;\n        }\n\n        if (mode.hovers != null) {\n            config.hovers.enabled = mode.hovers;\n        }\n\n        if (mode.statusBar != null) {\n            config.statusBar.enabled = mode.statusBar;\n        }\n\n        if (mode.views != null) {\n            config.views.compare.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.fileHistory.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.lineHistory.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.repositories.enabled = mode.views;\n        }\n        if (mode.views != null) {\n            config.views.search.enabled = mode.views;\n        }\n\n        return config;\n    }\n}\n","'use strict';\nexport * from './ui/config';\n\nimport {\n    ConfigurationChangeEvent,\n    ConfigurationTarget,\n    Event,\n    EventEmitter,\n    ExtensionContext,\n    Uri,\n    workspace\n} from 'vscode';\nimport { extensionId } from './constants';\nimport { Container } from './container';\nimport { clearGravatarCache } from './git/gitService';\nimport { Functions } from './system';\nimport { Config } from './ui/config';\n\nconst emptyConfig: any = new Proxy<any>({} as Config, {\n    get(target, propKey, receiver) {\n        return emptyConfig;\n    }\n});\n\nexport class Configuration {\n    static configure(context: ExtensionContext) {\n        context.subscriptions.push(\n            workspace.onDidChangeConfiguration(configuration.onConfigurationChanged, configuration)\n        );\n    }\n\n    private _onDidChange = new EventEmitter<ConfigurationChangeEvent>();\n    get onDidChange(): Event<ConfigurationChangeEvent> {\n        return this._onDidChange.event;\n    }\n\n    private readonly _configAffectedByMode: string[];\n\n    constructor() {\n        this._configAffectedByMode = [\n            `gitlens.${this.name('mode').value}`,\n            `gitlens.${this.name('modes').value}`,\n            `gitlens.${this.name('codeLens').value}`,\n            `gitlens.${this.name('currentLine').value}`,\n            `gitlens.${this.name('hovers').value}`,\n            `gitlens.${this.name('statusBar').value}`,\n            `gitlens.${this.name('views')('compare').value}`,\n            `gitlens.${this.name('views')('fileHistory').value}`,\n            `gitlens.${this.name('views')('lineHistory').value}`,\n            `gitlens.${this.name('views')('repositories').value}`,\n            `gitlens.${this.name('views')('search').value}`\n        ];\n    }\n\n    private onConfigurationChanged(e: ConfigurationChangeEvent) {\n        if (!e.affectsConfiguration(extensionId, null!)) return;\n\n        Container.resetConfig();\n\n        if (configuration.changed(e, configuration.name('defaultGravatarsStyle').value)) {\n            clearGravatarCache();\n        }\n\n        if (\n            configuration.changed(e, configuration.name('mode').value) ||\n            configuration.changed(e, configuration.name('modes').value)\n        ) {\n            const original = e.affectsConfiguration;\n            e = {\n                ...e,\n                affectsConfiguration: (section: string, resource?: Uri) => {\n                    if (this._configAffectedByMode.some(n => section.startsWith(n))) {\n                        return true;\n                    }\n\n                    return original(section, resource);\n                }\n            } as ConfigurationChangeEvent;\n        }\n\n        this._onDidChange.fire(e);\n    }\n\n    readonly initializingChangeEvent: ConfigurationChangeEvent = {\n        affectsConfiguration: (section: string, resource?: Uri) => true\n    };\n\n    get<T>(section?: string, resource?: Uri | null, defaultValue?: T) {\n        return defaultValue === undefined\n            ? workspace\n                  .getConfiguration(section === undefined ? undefined : extensionId, resource!)\n                  .get<T>(section === undefined ? extensionId : section)!\n            : workspace\n                  .getConfiguration(section === undefined ? undefined : extensionId, resource!)\n                  .get<T>(section === undefined ? extensionId : section, defaultValue)!;\n    }\n\n    changed(e: ConfigurationChangeEvent, section: string, resource?: Uri | null) {\n        return e.affectsConfiguration(`${extensionId}.${section}`, resource!);\n    }\n\n    initializing(e: ConfigurationChangeEvent) {\n        return e === this.initializingChangeEvent;\n    }\n\n    inspect(section?: string, resource?: Uri | null) {\n        return workspace\n            .getConfiguration(section === undefined ? undefined : extensionId, resource!)\n            .inspect(section === undefined ? extensionId : section);\n    }\n\n    async migrate<TFrom, TTo>(\n        from: string,\n        to: string,\n        options: { fallbackValue?: TTo; migrationFn?(value: TFrom): TTo } = {}\n    ): Promise<boolean> {\n        const inspection = configuration.inspect(from);\n        if (inspection === undefined) return false;\n\n        let migrated = false;\n        if (inspection.globalValue !== undefined) {\n            await this.update(\n                to,\n                options.migrationFn ? options.migrationFn(inspection.globalValue as TFrom) : inspection.globalValue,\n                ConfigurationTarget.Global\n            );\n            migrated = true;\n            // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n            // if (from !== to) {\n            //     try {\n            //         await this.update(from, undefined, ConfigurationTarget.Global);\n            //     }\n            //     catch { }\n            // }\n        }\n\n        if (inspection.workspaceValue !== undefined) {\n            await this.update(\n                to,\n                options.migrationFn\n                    ? options.migrationFn(inspection.workspaceValue as TFrom)\n                    : inspection.workspaceValue,\n                ConfigurationTarget.Workspace\n            );\n            migrated = true;\n            // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n            // if (from !== to) {\n            //     try {\n            //         await this.update(from, undefined, ConfigurationTarget.Workspace);\n            //     }\n            //     catch { }\n            // }\n        }\n\n        if (inspection.workspaceFolderValue !== undefined) {\n            await this.update(\n                to,\n                options.migrationFn\n                    ? options.migrationFn(inspection.workspaceFolderValue as TFrom)\n                    : inspection.workspaceFolderValue,\n                ConfigurationTarget.WorkspaceFolder\n            );\n            migrated = true;\n            // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n            // if (from !== to) {\n            //     try {\n            //         await this.update(from, undefined, ConfigurationTarget.WorkspaceFolder);\n            //     }\n            //     catch { }\n            // }\n        }\n\n        if (!migrated && options.fallbackValue !== undefined) {\n            await this.update(to, options.fallbackValue, ConfigurationTarget.Global);\n            migrated = true;\n        }\n\n        return migrated;\n    }\n\n    async migrateIfMissing<TFrom, TTo>(from: string, to: string, options: { migrationFn?(value: TFrom): TTo } = {}) {\n        const fromInspection = configuration.inspect(from);\n        if (fromInspection === undefined) return;\n\n        const toInspection = configuration.inspect(to);\n        if (fromInspection.globalValue !== undefined) {\n            if (toInspection === undefined || toInspection.globalValue === undefined) {\n                await this.update(\n                    to,\n                    options.migrationFn\n                        ? options.migrationFn(fromInspection.globalValue as TFrom)\n                        : fromInspection.globalValue,\n                    ConfigurationTarget.Global\n                );\n                // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n                // if (from !== to) {\n                //     try {\n                //         await this.update(from, undefined, ConfigurationTarget.Global);\n                //     }\n                //     catch { }\n                // }\n            }\n        }\n\n        if (fromInspection.workspaceValue !== undefined) {\n            if (toInspection === undefined || toInspection.workspaceValue === undefined) {\n                await this.update(\n                    to,\n                    options.migrationFn\n                        ? options.migrationFn(fromInspection.workspaceValue as TFrom)\n                        : fromInspection.workspaceValue,\n                    ConfigurationTarget.Workspace\n                );\n                // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n                // if (from !== to) {\n                //     try {\n                //         await this.update(from, undefined, ConfigurationTarget.Workspace);\n                //     }\n                //     catch { }\n                // }\n            }\n        }\n\n        if (fromInspection.workspaceFolderValue !== undefined) {\n            if (toInspection === undefined || toInspection.workspaceFolderValue === undefined) {\n                await this.update(\n                    to,\n                    options.migrationFn\n                        ? options.migrationFn(fromInspection.workspaceFolderValue as TFrom)\n                        : fromInspection.workspaceFolderValue,\n                    ConfigurationTarget.WorkspaceFolder\n                );\n                // Can't delete the old setting currently because it errors with `Unable to write to User Settings because <setting name> is not a registered configuration`\n                // if (from !== to) {\n                //     try {\n                //         await this.update(from, undefined, ConfigurationTarget.WorkspaceFolder);\n                //     }\n                //     catch { }\n                // }\n            }\n        }\n    }\n\n    name<K extends keyof Config>(name: K) {\n        return Functions.propOf(emptyConfig as Config, name);\n    }\n\n    update(section: string, value: any, target: ConfigurationTarget, resource?: Uri | null) {\n        return workspace\n            .getConfiguration(extensionId, target === ConfigurationTarget.Global ? undefined : resource!)\n            .update(section, value, target);\n    }\n\n    async updateEffective(section: string, value: any, resource: Uri | null = null) {\n        const inspect = await configuration.inspect(section, resource)!;\n        if (inspect.workspaceFolderValue !== undefined) {\n            if (value === inspect.workspaceFolderValue) return;\n\n            return await configuration.update(section, value, ConfigurationTarget.WorkspaceFolder, resource);\n        }\n\n        if (inspect.workspaceValue !== undefined) {\n            if (value === inspect.workspaceValue) return;\n\n            return await configuration.update(section, value, ConfigurationTarget.Workspace);\n        }\n\n        if (inspect.globalValue === value || (inspect.globalValue === undefined && value === inspect.defaultValue)) {\n            return;\n        }\n\n        return await configuration.update(\n            section,\n            value === inspect.defaultValue ? undefined : value,\n            ConfigurationTarget.Global\n        );\n    }\n}\n\nexport const configuration = new Configuration();\n","'use strict';\nimport { commands, TextEditor, TextEditorEdit, Uri, window } from 'vscode';\nimport { UriComparer } from '../comparers';\nimport { FileAnnotationType } from '../configuration';\nimport { isTextEditor } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, EditorCommand } from './common';\n\n@command()\nexport class ClearFileAnnotationsCommand extends EditorCommand {\n    constructor() {\n        super([Commands.ClearFileAnnotations, Commands.ComputingFileAnnotations]);\n    }\n\n    async execute(editor: TextEditor, edit: TextEditorEdit, uri?: Uri): Promise<any> {\n        // Handle the case where we are focused on a non-editor editor (output, debug console)\n        if (editor != null && !isTextEditor(editor)) {\n            if (uri != null && !UriComparer.equals(uri, editor.document.uri)) {\n                const e = window.visibleTextEditors.find(e => UriComparer.equals(uri, e.document.uri));\n                if (e !== undefined) {\n                    editor = e;\n                }\n            }\n        }\n\n        try {\n            return Container.fileAnnotations.clear(editor);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ClearFileAnnotationsCommand');\n            return Messages.showGenericErrorMessage('Unable to clear file annotations');\n        }\n    }\n}\n\nexport interface ToggleFileBlameCommandArgs {\n    sha?: string;\n    type?: FileAnnotationType;\n}\n\n@command()\nexport class ToggleFileBlameCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleFileBlame);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: ToggleFileBlameCommandArgs = {}): Promise<any> {\n        // Handle the case where we are focused on a non-editor editor (output, debug console)\n        if (editor != null && !isTextEditor(editor)) {\n            if (uri != null && !UriComparer.equals(uri, editor.document.uri)) {\n                const e = window.visibleTextEditors.find(e => UriComparer.equals(uri, e.document.uri));\n                if (e !== undefined) {\n                    editor = e;\n                }\n            }\n        }\n\n        try {\n            if (args.type === undefined) {\n                args = { ...args, type: FileAnnotationType.Blame };\n            }\n\n            return Container.fileAnnotations.toggle(\n                editor,\n                args.type!,\n                args.sha !== undefined ? args.sha : editor && editor.selection.active.line\n            );\n        }\n        catch (ex) {\n            Logger.error(ex, 'ToggleFileBlameCommand');\n            return window.showErrorMessage(\n                `Unable to toggle file ${args.type} annotations. See output channel for more details`\n            );\n        }\n    }\n}\n\n@command()\nexport class ToggleFileHeatmapCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleFileHeatmap);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri): Promise<any> {\n        commands.executeCommand(Commands.ToggleFileBlame, uri, {\n            type: FileAnnotationType.Heatmap\n        } as ToggleFileBlameCommandArgs);\n    }\n}\n\n@command()\nexport class ToggleFileRecentChangesCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleFileRecentChanges);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri): Promise<any> {\n        commands.executeCommand(Commands.ToggleFileBlame, uri, {\n            type: FileAnnotationType.RecentChanges\n        } as ToggleFileBlameCommandArgs);\n    }\n}\n\n@command()\nexport class ToggleLineBlameCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.ToggleLineBlame);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri): Promise<any> {\n        try {\n            return Container.lineAnnotations.toggle(editor);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ToggleLineBlameCommand');\n            return window.showErrorMessage(\n                `Unable to toggle line blame annotations. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { TextEditorComparer, UriComparer } from '../comparers';\nimport { BuiltInCommands, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Functions } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, getRepoPathOrPrompt } from './common';\n\nexport interface CloseUnchangedFilesCommandArgs {\n    uris?: Uri[];\n}\n\n@command()\nexport class CloseUnchangedFilesCommand extends ActiveEditorCommand {\n    private _onEditorChangedFn: ((editor: TextEditor | undefined) => void) | undefined;\n\n    constructor() {\n        super(Commands.CloseUnchangedFiles);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CloseUnchangedFilesCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            if (args.uris === undefined) {\n                args = { ...args };\n\n                const repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Close all files except those changed in which repository${GlyphChars.Ellipsis}`\n                );\n                if (!repoPath) return undefined;\n\n                const status = await Container.git.getStatusForRepo(repoPath);\n                if (status === undefined) return window.showWarningMessage(`Unable to close unchanged files`);\n\n                args.uris = status.files.map(f => f.uri);\n            }\n\n            if (args.uris.length === 0) return commands.executeCommand(BuiltInCommands.CloseAllEditors);\n\n            const disposable = window.onDidChangeActiveTextEditor(\n                Functions.debounce(\n                    (e: TextEditor | undefined) => this._onEditorChangedFn && this._onEditorChangedFn(e),\n                    50\n                )\n            );\n\n            editor = window.activeTextEditor;\n\n            let count = 0;\n            let loopCount = 0;\n            const editors: TextEditor[] = [];\n\n            // Find out how many editors there are\n            while (true) {\n                if (editor != null) {\n                    let found = false;\n                    for (const e of editors) {\n                        if (TextEditorComparer.equals(e, editor, { useId: true, usePosition: true })) {\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (found) break;\n\n                    // Start counting at the first real editor\n                    count++;\n                    editors.push(editor);\n                }\n                else {\n                    if (count !== 0) {\n                        count++;\n                    }\n                }\n\n                editor = await this.nextEditor();\n\n                loopCount++;\n                // Break out if we've looped 4 times and haven't found any editors\n                if (loopCount >= 4 && editors.length === 0) break;\n            }\n\n            if (editors.length) {\n                editor = window.activeTextEditor;\n\n                for (let i = 0; i <= count; i++) {\n                    if (\n                        editor == null ||\n                        (editor.document !== undefined &&\n                            (editor.document.isDirty ||\n                                args.uris.some(uri =>\n                                    UriComparer.equals(uri, editor!.document && editor!.document.uri)\n                                )))\n                    ) {\n                        editor = await this.nextEditor();\n                    }\n                    else {\n                        editor = await this.closeEditor();\n                    }\n                }\n            }\n\n            disposable.dispose();\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'CloseUnchangedFilesCommand');\n            return Messages.showGenericErrorMessage('Unable to close all unchanged files');\n        }\n    }\n\n    private async closeEditor(timeout: number = 500): Promise<TextEditor | undefined> {\n        const editor = window.activeTextEditor;\n\n        void (await commands.executeCommand(BuiltInCommands.CloseActiveEditor));\n\n        if (editor !== window.activeTextEditor) {\n            return window.activeTextEditor;\n        }\n\n        return this.waitForEditorChange(timeout);\n    }\n\n    private async nextEditor(timeout: number = 500): Promise<TextEditor | undefined> {\n        const editor = window.activeTextEditor;\n\n        void (await commands.executeCommand(BuiltInCommands.NextEditor));\n\n        if (editor !== window.activeTextEditor) {\n            return window.activeTextEditor;\n        }\n\n        return this.waitForEditorChange(timeout);\n    }\n\n    private waitForEditorChange(timeout: number = 500): Promise<TextEditor | undefined> {\n        return new Promise<TextEditor>((resolve, reject) => {\n            let timer: NodeJS.Timer | undefined;\n\n            this._onEditorChangedFn = (editor: TextEditor | undefined) => {\n                if (timer) {\n                    clearTimeout(timer);\n                    timer = undefined;\n\n                    resolve(editor);\n                }\n            };\n\n            timer = setTimeout(() => {\n                timer = undefined;\n\n                resolve(window.activeTextEditor);\n            }, timeout);\n        });\n    }\n}\n","'use strict';\nimport { env, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Iterables } from '../system';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\n\nexport interface CopyMessageToClipboardCommandArgs {\n    message?: string;\n    sha?: string;\n}\n\n@command()\nexport class CopyMessageToClipboardCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.CopyMessageToClipboard);\n    }\n\n    protected async preExecute(context: CommandContext, args: CopyMessageToClipboardCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.sha = context.node.commit.sha;\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CopyMessageToClipboardCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            args = { ...args };\n\n            // If we don't have an editor then get the message of the last commit to the branch\n            if (uri == null) {\n                const repoPath = await Container.git.getActiveRepoPath(editor);\n                if (!repoPath) return undefined;\n\n                const log = await Container.git.getLog(repoPath, { maxCount: 1 });\n                if (!log) return undefined;\n\n                args.message = Iterables.first(log.commits.values()).message;\n            }\n            else if (args.message === undefined) {\n                const gitUri = await GitUri.fromUri(uri);\n\n                if (args.sha === undefined) {\n                    const blameline = (editor && editor.selection.active.line) || 0;\n                    if (blameline < 0) return undefined;\n\n                    try {\n                        const blame =\n                            editor && editor.document && editor.document.isDirty\n                                ? await Container.git.getBlameForLineContents(\n                                      gitUri,\n                                      blameline,\n                                      editor.document.getText()\n                                  )\n                                : await Container.git.getBlameForLine(gitUri, blameline);\n                        if (!blame) return undefined;\n\n                        if (blame.commit.isUncommitted) return undefined;\n\n                        args.sha = blame.commit.sha;\n                        if (!gitUri.repoPath) {\n                            gitUri.repoPath = blame.commit.repoPath;\n                        }\n                    }\n                    catch (ex) {\n                        Logger.error(ex, 'CopyMessageToClipboardCommand', `getBlameForLine(${blameline})`);\n                        return Messages.showGenericErrorMessage('Unable to copy message');\n                    }\n                }\n\n                // Get the full commit message -- since blame only returns the summary\n                const commit = await Container.git.getLogCommit(gitUri.repoPath!, args.sha);\n                if (commit === undefined) return undefined;\n\n                args.message = commit.message;\n            }\n\n            void (await env.clipboard.writeText(args.message));\n            return undefined;\n        }\n        catch (ex) {\n            if (ex.message.includes(\"Couldn't find the required `xsel` binary\")) {\n                window.showErrorMessage(\n                    `Unable to copy message, xsel is not installed. Please install it via your package manager, e.g. \\`sudo apt install xsel\\``\n                );\n                return;\n            }\n\n            Logger.error(ex, 'CopyMessageToClipboardCommand');\n            return Messages.showGenericErrorMessage('Unable to copy message');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri } from 'vscode';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    isCommandViewContextWithBranch,\n    isCommandViewContextWithCommit\n} from './common';\n\nexport interface CopyRemoteFileUrlToClipboardCommandArgs {\n    branch?: string;\n    range?: boolean;\n}\n\n@command()\nexport class CopyRemoteFileUrlToClipboardCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.CopyRemoteFileUrlToClipboard);\n    }\n\n    protected async preExecute(\n        context: CommandContext,\n        args: CopyRemoteFileUrlToClipboardCommandArgs = { range: true }\n    ): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.range = false;\n            if (isCommandViewContextWithBranch(context)) {\n                args.branch = context.node.branch !== undefined ? context.node.branch.name : undefined;\n            }\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CopyRemoteFileUrlToClipboardCommandArgs = { range: true }) {\n        return commands.executeCommand(Commands.OpenFileInRemote, uri, { ...args, clipboard: true });\n    }\n}\n","'use strict';\nimport { env, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Iterables } from '../system';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\n\nexport interface CopyShaToClipboardCommandArgs {\n    sha?: string;\n}\n\n@command()\nexport class CopyShaToClipboardCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.CopyShaToClipboard);\n    }\n\n    protected async preExecute(context: CommandContext, args: CopyShaToClipboardCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.sha = context.node.commit.sha;\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: CopyShaToClipboardCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            args = { ...args };\n\n            // If we don't have an editor then get the sha of the last commit to the branch\n            if (uri == null) {\n                const repoPath = await Container.git.getActiveRepoPath(editor);\n                if (!repoPath) return undefined;\n\n                const log = await Container.git.getLog(repoPath, { maxCount: 1 });\n                if (!log) return undefined;\n\n                args.sha = Iterables.first(log.commits.values()).sha;\n            }\n            else if (args.sha === undefined) {\n                const blameline = (editor && editor.selection.active.line) || 0;\n                if (blameline < 0) return undefined;\n\n                try {\n                    const gitUri = await GitUri.fromUri(uri);\n                    const blame =\n                        editor && editor.document && editor.document.isDirty\n                            ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                            : await Container.git.getBlameForLine(gitUri, blameline);\n                    if (blame === undefined) return undefined;\n\n                    args.sha = blame.commit.sha;\n                }\n                catch (ex) {\n                    Logger.error(ex, 'CopyShaToClipboardCommand', `getBlameForLine(${blameline})`);\n                    return Messages.showGenericErrorMessage('Unable to copy commit id');\n                }\n            }\n\n            void (await env.clipboard.writeText(args.sha));\n            return undefined;\n        }\n        catch (ex) {\n            if (ex.message.includes(\"Couldn't find the required `xsel` binary\")) {\n                window.showErrorMessage(\n                    `Unable to copy commit id, xsel is not installed. Please install it via your package manager, e.g. \\`sudo apt install xsel\\``\n                );\n                return;\n            }\n\n            Logger.error(ex, 'CopyShaToClipboardCommand');\n            return Messages.showGenericErrorMessage('Unable to copy commit id');\n        }\n    }\n}\n","'use strict';\nimport { TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt\n} from './common';\n\nexport interface DiffBranchWithBranchCommandArgs {\n    ref1?: string;\n    ref2?: string;\n}\n\n@command()\nexport class DiffBranchWithBranchCommand extends ActiveEditorCommand {\n    constructor() {\n        super([Commands.DiffHeadWithBranch, Commands.DiffWorkingWithBranch]);\n    }\n\n    protected async preExecute(context: CommandContext, args: DiffBranchWithBranchCommandArgs = {}): Promise<any> {\n        switch (context.command) {\n            case Commands.DiffHeadWithBranch:\n                args.ref2 = 'HEAD';\n                break;\n\n            case Commands.DiffWorkingWithBranch:\n                args.ref2 = '';\n                break;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffBranchWithBranchCommandArgs = {}): Promise<any> {\n        if (args.ref2 === undefined) return;\n\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Compare with branch or tag in which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            if (!args.ref1) {\n                let placeHolder;\n                switch (args.ref2) {\n                    case '':\n                        placeHolder = `Compare Working Tree with${GlyphChars.Ellipsis}`;\n                        break;\n                    case 'HEAD':\n                        placeHolder = `Compare HEAD with${GlyphChars.Ellipsis}`;\n                        break;\n                    default:\n                        placeHolder = `Compare ${args.ref2} with${GlyphChars.Ellipsis}`;\n                        break;\n                }\n\n                const pick = await new BranchesAndTagsQuickPick(repoPath).show(placeHolder, {\n                    allowCommitId: true\n                });\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                args.ref1 = pick.ref;\n                if (args.ref1 === undefined) return undefined;\n            }\n\n            await Container.compareView.compare(repoPath, args.ref1, args.ref2);\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'DiffBranchWithBranchCommand');\n            return Messages.showGenericErrorMessage('Unable to open branch compare');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { BuiltInCommands, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport { CompareResultsNode } from '../views/nodes';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRef\n} from './common';\n\nexport interface DiffDirectoryCommandArgs {\n    ref1?: string;\n    ref2?: string;\n}\n\n@command()\nexport class DiffDirectoryCommand extends ActiveEditorCommand {\n    constructor() {\n        super([\n            Commands.DiffDirectory,\n            Commands.DiffDirectoryWithHead,\n            Commands.ViewsOpenDirectoryDiff,\n            Commands.ViewsOpenDirectoryDiffWithWorking\n        ]);\n    }\n\n    protected async preExecute(context: CommandContext, args: DiffDirectoryCommandArgs = {}): Promise<any> {\n        switch (context.command) {\n            case Commands.DiffDirectoryWithHead:\n                args.ref1 = 'HEAD';\n                args.ref2 = undefined;\n                break;\n\n            case Commands.ViewsOpenDirectoryDiff:\n                if (context.type === 'viewItem' && context.node instanceof CompareResultsNode) {\n                    args.ref1 = context.node.ref1.ref;\n                    args.ref2 = context.node.ref2.ref;\n                }\n                break;\n\n            case Commands.ViewsOpenDirectoryDiffWithWorking:\n                if (isCommandViewContextWithRef(context)) {\n                    args.ref1 = context.node.ref;\n                    args.ref2 = undefined;\n                }\n                break;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffDirectoryCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Compare directory in which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            if (!args.ref1) {\n                args = { ...args };\n\n                const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                    `Compare Working Tree with${GlyphChars.Ellipsis}`,\n                    { allowCommitId: true }\n                );\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                args.ref1 = pick.ref;\n                if (args.ref1 === undefined) return undefined;\n            }\n\n            await Container.git.openDirectoryDiff(repoPath, args.ref1, args.ref2);\n            return undefined;\n        }\n        catch (ex) {\n            const msg = ex && ex.toString();\n            if (msg === 'No diff tool found') {\n                const result = await window.showWarningMessage(\n                    `Unable to open directory compare because there is no Git diff tool configured`,\n                    'View Git Docs'\n                );\n                if (!result) return undefined;\n\n                return commands.executeCommand(\n                    BuiltInCommands.Open,\n                    Uri.parse('https://git-scm.com/docs/git-config#git-config-difftool')\n                );\n            }\n\n            Logger.error(ex, 'DiffDirectoryCommand');\n            return Messages.showGenericErrorMessage('Unable to open directory compare');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffLineWithPreviousCommandArgs {\n    commit?: GitCommit;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffLineWithPreviousCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffLineWithPrevious);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffLineWithPreviousCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        if (args.commit === undefined || GitService.isUncommitted(args.commit.sha)) {\n            const blameline = args.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame =\n                    editor && editor.document && editor.document.isDirty\n                        ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                        : await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                }\n\n                args.commit = blame.commit;\n\n                // If the line is uncommitted, change the previous commit\n                if (args.commit.isUncommitted) {\n                    const status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                    if (status !== undefined && status.indexStatus !== undefined) {\n                        args.commit = args.commit.with({\n                            sha: GitService.stagedUncommittedSha\n                        });\n                    }\n                }\n            }\n            catch (ex) {\n                Logger.error(ex, 'DiffLineWithPreviousCommand', `getBlameForLine(${blameline})`);\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.previousSha !== undefined ? args.commit.previousSha : GitService.deletedOrMissingSha,\n                uri: args.commit.previousUri\n            },\n            rhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffLineWithWorkingCommandArgs {\n    commit?: GitCommit;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffLineWithWorkingCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffLineWithWorking);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffLineWithWorkingCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        if (args.commit === undefined || GitService.isUncommitted(args.commit.sha)) {\n            const blameline = args.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame =\n                    editor && editor.document && editor.document.isDirty\n                        ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                        : await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                }\n\n                args.commit = blame.commit;\n\n                // If the line is uncommitted, change the previous commit\n                if (args.commit.isUncommitted) {\n                    const status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                    args.commit = args.commit.with({\n                        sha:\n                            status !== undefined && status.indexStatus !== undefined\n                                ? GitService.stagedUncommittedSha\n                                : args.commit.previousSha!,\n                        fileName: args.commit.previousFileName!,\n                        originalFileName: null,\n                        previousSha: null,\n                        previousFileName: null\n                    });\n                    args.line = blame.line.line + 1;\n                }\n            }\n            catch (ex) {\n                Logger.error(ex, 'DiffLineWithWorkingCommand', `getBlameForLine(${blameline})`);\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            rhs: {\n                sha: '',\n                uri: args.commit.workingUri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, Range, TextDocumentShowOptions, TextEditor, Uri, ViewColumn } from 'vscode';\nimport { BuiltInCommands, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands } from './common';\n\nexport interface DiffWithCommandArgsRevision {\n    sha: string;\n    uri: Uri;\n    title?: string;\n}\n\nexport interface DiffWithCommandArgs {\n    lhs?: DiffWithCommandArgsRevision;\n    rhs?: DiffWithCommandArgsRevision;\n    repoPath?: string;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithCommand extends ActiveEditorCommand {\n    static getMarkdownCommandArgs(args: DiffWithCommandArgs): string;\n    static getMarkdownCommandArgs(commit1: GitCommit, commit2: GitCommit): string;\n    static getMarkdownCommandArgs(argsOrCommit1: DiffWithCommandArgs | GitCommit, commit2?: GitCommit): string {\n        let args: DiffWithCommandArgs | GitCommit;\n        if (argsOrCommit1 instanceof GitCommit) {\n            const commit1 = argsOrCommit1;\n\n            if (commit2 === undefined) {\n                if (commit1.isUncommitted) {\n                    args = {\n                        repoPath: commit1.repoPath,\n                        lhs: {\n                            sha: 'HEAD',\n                            uri: commit1.uri\n                        },\n                        rhs: {\n                            sha: '',\n                            uri: commit1.uri\n                        }\n                    };\n                }\n                else {\n                    args = {\n                        repoPath: commit1.repoPath,\n                        lhs: {\n                            sha:\n                                commit1.previousSha !== undefined\n                                    ? commit1.previousSha\n                                    : GitService.deletedOrMissingSha,\n                            uri: commit1.previousUri!\n                        },\n                        rhs: {\n                            sha: commit1.sha,\n                            uri: commit1.uri\n                        }\n                    };\n                }\n            }\n            else {\n                args = {\n                    repoPath: commit1.repoPath,\n                    lhs: {\n                        sha: commit1.sha,\n                        uri: commit1.uri\n                    },\n                    rhs: {\n                        sha: commit2.sha,\n                        uri: commit2.uri\n                    }\n                };\n            }\n        }\n        else {\n            args = argsOrCommit1;\n        }\n\n        return super.getMarkdownCommandArgsCore<DiffWithCommandArgs>(Commands.DiffWith, args);\n    }\n\n    constructor() {\n        super(Commands.DiffWith);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithCommandArgs = {}): Promise<any> {\n        args = {\n            ...args,\n            lhs: { ...args.lhs },\n            rhs: { ...args.rhs },\n            showOptions: { ...args.showOptions }\n        } as DiffWithCommandArgs;\n        if (args.repoPath === undefined || args.lhs === undefined || args.rhs === undefined) return undefined;\n\n        try {\n            let lhsSha = args.lhs.sha;\n            let rhsSha = args.rhs.sha;\n\n            [args.lhs.sha, args.rhs.sha] = await Promise.all([\n                await Container.git.resolveReference(args.repoPath, args.lhs.sha, args.lhs.uri),\n                await Container.git.resolveReference(args.repoPath, args.rhs.sha, args.rhs.uri)\n            ]);\n\n            if (args.lhs.sha !== GitService.deletedOrMissingSha) {\n                lhsSha = args.lhs.sha;\n            }\n\n            if (args.rhs.sha && args.rhs.sha !== GitService.deletedOrMissingSha) {\n                // Ensure that the file still exists in this commit\n                const status = await Container.git.getFileStatusForCommit(\n                    args.repoPath,\n                    args.rhs.uri.fsPath,\n                    args.rhs.sha\n                );\n                if (status !== undefined && status.status === 'D') {\n                    args.rhs.sha = GitService.deletedOrMissingSha;\n                }\n                else {\n                    rhsSha = args.rhs.sha;\n                }\n            }\n\n            const [lhs, rhs] = await Promise.all([\n                Container.git.getVersionedUri(args.repoPath, args.lhs.uri.fsPath, args.lhs.sha),\n                Container.git.getVersionedUri(args.repoPath, args.rhs.uri.fsPath, args.rhs.sha)\n            ]);\n\n            let rhsSuffix = GitService.shortenSha(rhsSha, { uncommitted: 'Working Tree' }) || '';\n            if (rhs === undefined) {\n                if (GitService.isUncommitted(args.rhs.sha)) {\n                    rhsSuffix = 'deleted';\n                }\n                else if (rhsSuffix.length === 0 && args.rhs.sha === GitService.deletedOrMissingSha) {\n                    rhsSuffix = 'not in Working Tree';\n                }\n                else {\n                    rhsSuffix = `deleted in ${rhsSuffix}`;\n                }\n            }\n            else if (lhs === undefined) {\n                rhsSuffix = `added in ${rhsSuffix}`;\n            }\n\n            let lhsSuffix = args.lhs.sha !== GitService.deletedOrMissingSha ? GitService.shortenSha(lhsSha) || '' : '';\n            if (lhs === undefined && args.rhs.sha.length === 0) {\n                if (rhs !== undefined) {\n                    lhsSuffix = `not in ${lhsSuffix}`;\n                    rhsSuffix = '';\n                }\n                else {\n                    lhsSuffix = `deleted in ${lhsSuffix})`;\n                }\n            }\n\n            if (args.lhs.title === undefined && (lhs !== undefined || lhsSuffix.length !== 0)) {\n                args.lhs.title = `${paths.basename(args.lhs.uri.fsPath)}${lhsSuffix ? ` (${lhsSuffix})` : ''}`;\n            }\n            if (args.rhs.title === undefined) {\n                args.rhs.title = `${paths.basename(args.rhs.uri.fsPath)}${rhsSuffix ? ` (${rhsSuffix})` : ''}`;\n            }\n\n            const title =\n                args.lhs.title !== undefined && args.rhs.title !== undefined\n                    ? `${args.lhs.title} ${GlyphChars.ArrowLeftRightLong} ${args.rhs.title}`\n                    : args.lhs.title || args.rhs.title;\n\n            if (args.showOptions === undefined) {\n                args.showOptions = {};\n            }\n\n            if (args.showOptions.viewColumn === undefined) {\n                args.showOptions.viewColumn = ViewColumn.Active;\n            }\n\n            if (args.line !== undefined && args.line !== 0) {\n                args.showOptions.selection = new Range(args.line, 0, args.line, 0);\n            }\n\n            return await commands.executeCommand(\n                BuiltInCommands.Diff,\n                lhs === undefined\n                    ? GitUri.toRevisionUri(GitService.deletedOrMissingSha, args.lhs.uri.fsPath, args.repoPath)\n                    : lhs,\n                rhs === undefined\n                    ? GitUri.toRevisionUri(GitService.deletedOrMissingSha, args.rhs.uri.fsPath, args.repoPath)\n                    : rhs,\n                title,\n                args.showOptions\n            );\n        }\n        catch (ex) {\n            Logger.error(ex, 'DiffWithCommand', 'getVersionedFile');\n            return Messages.showGenericErrorMessage('Unable to open compare');\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Messages } from '../messages';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffWithBranchCommandArgs {\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class DiffWithBranchCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffWithBranch);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithBranchCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        const gitUri = await GitUri.fromUri(uri);\n        if (!gitUri.repoPath) return Messages.showNoRepositoryWarningMessage(`Unable to open file compare`);\n\n        const pick = await new BranchesAndTagsQuickPick(gitUri.repoPath).show(\n            `Compare ${paths.basename(gitUri.fsPath)} with${GlyphChars.Ellipsis}`,\n            {\n                allowCommitId: true,\n                goBack: args.goBackCommand\n            }\n        );\n        if (pick === undefined) return undefined;\n\n        if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n        const ref = pick.ref;\n        if (ref === undefined) return undefined;\n\n        let renamedUri: Uri | undefined;\n        let renamedTitle: string | undefined;\n\n        // Check to see if this file has been renamed\n        const files = await Container.git.getDiffStatus(gitUri.repoPath, 'HEAD', ref, { filter: 'R' });\n        if (files !== undefined) {\n            const fileName = Strings.normalizePath(paths.relative(gitUri.repoPath, gitUri.fsPath));\n            const rename = files.find(s => s.fileName === fileName);\n            if (rename !== undefined && rename.originalFileName !== undefined) {\n                renamedUri = GitUri.resolveToUri(rename.originalFileName, gitUri.repoPath);\n                renamedTitle = `${paths.basename(rename.originalFileName)} (${ref})`;\n            }\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: gitUri.repoPath,\n            lhs: {\n                sha: pick.remote ? `remotes/${ref}` : ref,\n                uri: renamedUri || (gitUri as Uri),\n                title: renamedTitle || `${paths.basename(gitUri.fsPath)} (${ref})`\n            },\n            rhs: {\n                sha: '',\n                uri: gitUri as Uri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, Range, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitLogCommit, GitService, GitStatusFile, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Iterables } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffWithNextCommandArgs {\n    commit?: GitLogCommit;\n    range?: Range;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithNextCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffWithNext);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithNextCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        const gitUri = await GitUri.fromUri(uri);\n        let status: GitStatusFile | undefined;\n\n        if (args.commit === undefined || !(args.commit instanceof GitLogCommit) || args.range !== undefined) {\n            try {\n                const sha = args.commit === undefined ? gitUri.sha : args.commit.sha;\n\n                if (GitService.isStagedUncommitted(sha!)) {\n                    const diffArgs: DiffWithCommandArgs = {\n                        repoPath: gitUri.repoPath!,\n                        lhs: {\n                            sha: sha!,\n                            uri: gitUri\n                        },\n                        rhs: {\n                            sha: '',\n                            uri: gitUri\n                        },\n                        line: args.line,\n                        showOptions: args.showOptions\n                    };\n                    return commands.executeCommand(Commands.DiffWith, diffArgs);\n                }\n\n                let log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                    maxCount: sha !== undefined ? undefined : 2,\n                    range: args.range!,\n                    renames: true\n                });\n                if (log === undefined) {\n                    const fileName = await Container.git.findNextFileName(gitUri.repoPath!, gitUri.fsPath);\n                    if (fileName !== undefined) {\n                        log = await Container.git.getLogForFile(gitUri.repoPath, fileName, {\n                            maxCount: sha !== undefined ? undefined : 2,\n                            range: args.range!,\n                            renames: true\n                        });\n                    }\n\n                    if (log === undefined) {\n                        return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                    }\n                }\n\n                args.commit = (sha && log.commits.get(sha)) || Iterables.first(log.commits.values());\n\n                // If the sha is missing or the file is uncommitted, treat it as a DiffWithWorking\n                if (gitUri.sha === undefined) {\n                    status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                    if (status !== undefined) return commands.executeCommand(Commands.DiffWithWorking, uri);\n                }\n            }\n            catch (ex) {\n                Logger.error(ex, 'DiffWithNextCommand', `getLogForFile(${gitUri.repoPath}, ${gitUri.fsPath})`);\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        if (args.commit.nextSha === undefined) {\n            // Check if the file is staged\n            status = status || (await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath));\n            if (status !== undefined && status.indexStatus === 'M') {\n                const diffArgs: DiffWithCommandArgs = {\n                    repoPath: args.commit.repoPath,\n                    lhs: {\n                        sha: args.commit.sha,\n                        uri: args.commit.uri\n                    },\n                    rhs: {\n                        sha: GitService.stagedUncommittedSha,\n                        uri: args.commit.uri\n                    },\n                    line: args.line,\n                    showOptions: args.showOptions\n                };\n\n                return commands.executeCommand(Commands.DiffWith, diffArgs);\n            }\n\n            return commands.executeCommand(Commands.DiffWithWorking, uri);\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            rhs: {\n                sha: args.commit.nextSha,\n                uri: args.commit.nextUri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Iterables } from '../system';\nimport { ActiveEditorCommand, command, CommandContext, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\nimport { DiffWithWorkingCommandArgs } from './diffWithWorking';\n\nexport interface DiffWithPreviousCommandArgs {\n    commit?: GitCommit;\n\n    inDiffEditor?: boolean;\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithPreviousCommand extends ActiveEditorCommand {\n    constructor() {\n        super([Commands.DiffWithPrevious, Commands.DiffWithPreviousInDiff]);\n    }\n\n    protected async preExecute(context: CommandContext, args: DiffWithPreviousCommandArgs = {}): Promise<any> {\n        if (context.command === Commands.DiffWithPreviousInDiff) {\n            args.inDiffEditor = true;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithPreviousCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        if (args.commit === undefined || !args.commit.isFile) {\n            const gitUri = await GitUri.fromUri(uri);\n\n            try {\n                let sha = args.commit === undefined ? gitUri.sha : args.commit.sha;\n                if (sha === GitService.deletedOrMissingSha) {\n                    return Messages.showCommitHasNoPreviousCommitWarningMessage();\n                }\n\n                // If we are a fake \"staged\" sha, remove it\n                let isStagedUncommitted = false;\n                if (GitService.isStagedUncommitted(sha!)) {\n                    gitUri.sha = sha = undefined;\n                    isStagedUncommitted = true;\n                }\n\n                // If we are in a diff editor, assume we are on the right side, and need to move back 2 revisions\n                const originalSha = sha;\n                if (args.inDiffEditor && sha !== undefined) {\n                    sha = `${sha}^`;\n                }\n\n                args.commit = undefined;\n\n                let log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                    maxCount: 2,\n                    ref: sha,\n                    renames: true\n                });\n\n                if (log !== undefined) {\n                    args.commit = (sha && log.commits.get(sha)) || Iterables.first(log.commits.values());\n                }\n                else {\n                    // Only kick out if we aren't looking for the previous sha -- since renames won't return a log above\n                    if (sha === undefined || !sha.endsWith('^')) {\n                        return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                    }\n\n                    // Check for renames\n                    log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                        maxCount: 3,\n                        ref: originalSha,\n                        renames: true\n                    });\n\n                    if (log === undefined) {\n                        return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                    }\n\n                    args.commit =\n                        Iterables.next(Iterables.skip(log.commits.values(), 1)) ||\n                        Iterables.first(log.commits.values());\n\n                    if (args.commit.sha === originalSha) {\n                        return Messages.showCommitHasNoPreviousCommitWarningMessage();\n                    }\n                }\n\n                // If the sha is missing (i.e. working tree), check the file status\n                // If file is uncommitted, then treat it as a DiffWithWorking\n                if (gitUri.sha === undefined) {\n                    const status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                    if (status !== undefined) {\n                        if (isStagedUncommitted) {\n                            const diffArgs: DiffWithCommandArgs = {\n                                repoPath: args.commit.repoPath,\n                                lhs: {\n                                    sha: args.inDiffEditor\n                                        ? args.commit.previousSha || GitService.deletedOrMissingSha\n                                        : args.commit.sha,\n                                    uri: args.inDiffEditor ? args.commit.previousUri : args.commit.uri\n                                },\n                                rhs: {\n                                    sha: args.inDiffEditor ? args.commit.sha : GitService.stagedUncommittedSha,\n                                    uri: args.commit.uri\n                                },\n                                line: args.line,\n                                showOptions: args.showOptions\n                            };\n                            return commands.executeCommand(Commands.DiffWith, diffArgs);\n                        }\n\n                        // Check if the file is staged\n                        if (status.indexStatus !== undefined) {\n                            const diffArgs: DiffWithCommandArgs = {\n                                repoPath: args.commit.repoPath,\n                                lhs: {\n                                    sha: args.inDiffEditor ? args.commit.sha : GitService.stagedUncommittedSha,\n                                    uri: args.commit.uri\n                                },\n                                rhs: {\n                                    sha: args.inDiffEditor ? GitService.stagedUncommittedSha : '',\n                                    uri: args.commit.uri\n                                },\n                                line: args.line,\n                                showOptions: args.showOptions\n                            };\n\n                            return commands.executeCommand(Commands.DiffWith, diffArgs);\n                        }\n\n                        if (!args.inDiffEditor) {\n                            return commands.executeCommand(Commands.DiffWithWorking, uri, {\n                                commit: args.commit,\n                                showOptions: args.showOptions\n                            } as DiffWithWorkingCommandArgs);\n                        }\n                    }\n                }\n            }\n            catch (ex) {\n                Logger.error(ex, 'DiffWithPreviousCommand', `getLogForFile(${gitUri.repoPath}, ${gitUri.fsPath})`);\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.previousSha !== undefined ? args.commit.previousSha : GitService.deletedOrMissingSha,\n                uri: args.commit.previousUri\n            },\n            rhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitTag, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ChooseFromBranchesAndTagsQuickPickItem, CommandQuickPickItem, FileHistoryQuickPick } from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffWithRevisionCommandArgs {\n    branchOrTag?: GitBranch | GitTag;\n    maxCount?: number;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class DiffWithRevisionCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffWithRevision);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithRevisionCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        const placeHolder = `Compare ${gitUri.getFormattedPath({\n            suffix: args.branchOrTag ? ` (${args.branchOrTag.name})` : undefined\n        })}${gitUri.sha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${gitUri.shortSha}` : ''} with revision${\n            GlyphChars.Ellipsis\n        }`;\n\n        const progressCancellation = FileHistoryQuickPick.showProgress(placeHolder);\n        try {\n            const log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                maxCount: args.maxCount,\n                ref: (args.branchOrTag && args.branchOrTag.ref) || gitUri.sha\n            });\n            if (log === undefined) {\n                if (args.branchOrTag) {\n                    return window.showWarningMessage(`The file could not be found in ${args.branchOrTag.name}`);\n                }\n                return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open history compare');\n            }\n\n            if (progressCancellation.token.isCancellationRequested) return undefined;\n\n            let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n            if (log.truncated) {\n                const npc = new CommandQuickPickItem(\n                    {\n                        label: `$(arrow-right) Show Next Commits`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} newer commits`\n                    },\n                    Commands.DiffWithRevision,\n                    [uri, { ...args } as DiffWithRevisionCommandArgs]\n                );\n\n                const last = Iterables.last(log.commits.values());\n                if (last != null) {\n                    previousPageCommand = new CommandQuickPickItem(\n                        {\n                            label: `$(arrow-left) Show Previous Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} older commits`\n                        },\n                        Commands.DiffWithRevision,\n                        [new GitUri(uri, last), { ...args, nextPageCommand: npc } as DiffWithRevisionCommandArgs]\n                    );\n                }\n            }\n\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                        GlyphChars.Space\n                    }$(file-text) ${gitUri.getFormattedPath()}${\n                        args.branchOrTag\n                            ? ` from ${GlyphChars.Space}${\n                                  args.branchOrTag instanceof GitTag ? '$(tag)' : '$(git-branch)'\n                              } ${args.branchOrTag.name}`\n                            : gitUri.sha\n                                ? ` from ${GlyphChars.Space}$(git-commit) ${gitUri.shortSha}`\n                                : ''\n                    }`\n                },\n                Commands.DiffWithRevision,\n                [uri, { ...args }]\n            );\n\n            const pick = await FileHistoryQuickPick.show(log, gitUri, placeHolder, {\n                pickerOnly: true,\n                progressCancellation: progressCancellation,\n                currentCommand: currentCommand,\n                nextPageCommand: args.nextPageCommand,\n                previousPageCommand: previousPageCommand,\n                showAllCommand: log.truncated\n                    ? new CommandQuickPickItem(\n                          {\n                              label: `$(sync) Show All Commits`,\n                              description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                          },\n                          Commands.DiffWithRevision,\n                          [uri, { ...args, maxCount: 0 } as DiffWithRevisionCommandArgs]\n                      )\n                    : undefined\n            });\n            if (pick === undefined) return undefined;\n\n            let ref: string;\n\n            if (pick instanceof ChooseFromBranchesAndTagsQuickPickItem) {\n                const branchOrTag = await pick.execute();\n                if (branchOrTag === undefined) return undefined;\n                if (branchOrTag instanceof CommandQuickPickItem) return branchOrTag.execute();\n\n                return commands.executeCommand(Commands.DiffWithRevision, gitUri, {\n                    ...args,\n                    branchOrTag: branchOrTag.item,\n                    goBackCommand: currentCommand\n                } as DiffWithRevisionCommandArgs);\n            }\n            else {\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                ref = pick.commit.sha;\n            }\n\n            const diffArgs: DiffWithCommandArgs = {\n                repoPath: gitUri.repoPath,\n                lhs: {\n                    sha: ref,\n                    uri: gitUri as Uri\n                },\n                rhs: {\n                    sha: '',\n                    uri: gitUri as Uri\n                },\n                line: args.line,\n                showOptions: args.showOptions\n            };\n            return await commands.executeCommand(Commands.DiffWith, diffArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'DiffWithRevisionCommand');\n            return Messages.showGenericErrorMessage('Unable to open compare');\n        }\n        finally {\n            progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { commands, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri } from './common';\nimport { DiffWithCommandArgs } from './diffWith';\n\nexport interface DiffWithWorkingCommandArgs {\n    commit?: GitCommit;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n}\n\n@command()\nexport class DiffWithWorkingCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.DiffWithWorking);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: DiffWithWorkingCommandArgs = {}): Promise<any> {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        if (args.commit === undefined || GitService.isUncommitted(args.commit.sha)) {\n            // If the sha is missing, just let the user know the file matches\n            if (gitUri.sha === undefined) return window.showInformationMessage('File matches the working tree');\n            if (gitUri.sha === GitService.deletedOrMissingSha) {\n                return window.showWarningMessage('Unable to open compare. File has been deleted from the working tree');\n            }\n\n            // If we are a fake \"staged\" sha, check the status\n            if (GitService.isStagedUncommitted(gitUri.sha!)) {\n                gitUri.sha = undefined;\n\n                const status = await Container.git.getStatusForFile(gitUri.repoPath!, gitUri.fsPath);\n                if (status !== undefined && status.indexStatus !== undefined) {\n                    const diffArgs: DiffWithCommandArgs = {\n                        repoPath: gitUri.repoPath,\n                        lhs: {\n                            sha: GitService.stagedUncommittedSha,\n                            uri: gitUri.documentUri()\n                        },\n                        rhs: {\n                            sha: '',\n                            uri: gitUri.documentUri()\n                        },\n                        line: args.line,\n                        showOptions: args.showOptions\n                    };\n\n                    return commands.executeCommand(Commands.DiffWith, diffArgs);\n                }\n            }\n\n            try {\n                args.commit = await Container.git.getLogCommitForFile(gitUri.repoPath, gitUri.fsPath, {\n                    ref: gitUri.sha,\n                    firstIfNotFound: true\n                });\n                if (args.commit === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open compare');\n                }\n            }\n            catch (ex) {\n                Logger.error(\n                    ex,\n                    'DiffWithWorkingCommand',\n                    `getLogCommit(${gitUri.repoPath}, ${gitUri.fsPath}, ${gitUri.sha})`\n                );\n                return Messages.showGenericErrorMessage('Unable to open compare');\n            }\n        }\n\n        const [workingFileName] = await Container.git.findWorkingFileName(gitUri.fsPath, gitUri.repoPath);\n        if (workingFileName === undefined) {\n            return window.showWarningMessage('Unable to open compare. File has been deleted from the working tree');\n        }\n\n        args.commit.workingFileName = workingFileName;\n\n        const diffArgs: DiffWithCommandArgs = {\n            repoPath: args.commit.repoPath,\n            lhs: {\n                sha: args.commit.sha,\n                uri: args.commit.uri\n            },\n            rhs: {\n                sha: '',\n                uri: args.commit.workingUri\n            },\n            line: args.line,\n            showOptions: args.showOptions\n        };\n        return commands.executeCommand(Commands.DiffWith, diffArgs);\n    }\n}\n","'use strict';\nimport { commands, SourceControlResourceState, Uri, window } from 'vscode';\nimport { BuiltInCommands, GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Arrays } from '../system';\nimport {\n    command,\n    Command,\n    CommandContext,\n    Commands,\n    getRepoPathOrPrompt,\n    isCommandViewContextWithFileCommit,\n    isCommandViewContextWithFileRefs\n} from './common';\n\nenum Status {\n    INDEX_MODIFIED,\n    INDEX_ADDED,\n    INDEX_DELETED,\n    INDEX_RENAMED,\n    INDEX_COPIED,\n\n    MODIFIED,\n    DELETED,\n    UNTRACKED,\n    IGNORED,\n\n    ADDED_BY_US,\n    ADDED_BY_THEM,\n    DELETED_BY_US,\n    DELETED_BY_THEM,\n    BOTH_ADDED,\n    BOTH_DELETED,\n    BOTH_MODIFIED\n}\n\nenum ResourceGroupType {\n    Merge,\n    Index,\n    WorkingTree\n}\n\ninterface Resource extends SourceControlResourceState {\n    readonly resourceGroupType: ResourceGroupType;\n    readonly type: Status;\n}\n\ninterface ExternalDiffFile {\n    uri: Uri;\n    staged: boolean;\n    ref1?: string;\n    ref2?: string;\n}\n\nexport interface ExternalDiffCommandArgs {\n    files?: ExternalDiffFile[];\n}\n\n@command()\nexport class ExternalDiffCommand extends Command {\n    constructor() {\n        super([Commands.ExternalDiff, Commands.ExternalDiffAll]);\n    }\n\n    protected async preExecute(context: CommandContext, args: ExternalDiffCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithFileCommit(context)) {\n            args = { ...args };\n\n            const ref1 = GitService.isUncommitted(context.node.commit.previousFileSha)\n                ? ''\n                : context.node.commit.previousFileSha;\n            const ref2 = context.node.commit.isUncommitted ? '' : context.node.commit.sha;\n\n            args.files = [\n                {\n                    uri: GitUri.fromFile(context.node.file, context.node.file.repoPath || context.node.repoPath),\n                    staged: context.node.commit.isStagedUncommitted || context.node.file.indexStatus !== undefined,\n                    ref1: ref1,\n                    ref2: ref2\n                }\n            ];\n\n            return this.execute(args);\n        }\n\n        if (isCommandViewContextWithFileRefs(context)) {\n            args = { ...args };\n\n            args.files = [\n                {\n                    uri: GitUri.fromFile(context.node.file, context.node.file.repoPath || context.node.repoPath),\n                    staged: context.node.file.indexStatus !== undefined,\n                    ref1: context.node.ref1,\n                    ref2: context.node.ref2\n                }\n            ];\n\n            return this.execute(args);\n        }\n\n        if (args.files === undefined) {\n            if (context.type === 'scm-states') {\n                args = { ...args };\n                args.files = context.scmResourceStates.map(r => ({\n                    uri: r.resourceUri,\n                    staged: (r as Resource).resourceGroupType === ResourceGroupType.Index\n                }));\n            }\n            else if (context.type === 'scm-groups') {\n                args = { ...args };\n                args.files = Arrays.filterMap(context.scmResourceGroups[0].resourceStates, r =>\n                    this.isModified(r)\n                        ? {\n                              uri: r.resourceUri,\n                              staged: (r as Resource).resourceGroupType === ResourceGroupType.Index\n                          }\n                        : undefined\n                );\n            }\n        }\n\n        if (context.command === Commands.ExternalDiffAll) {\n            if (args.files === undefined) {\n                const repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Open changes from which repository${GlyphChars.Ellipsis}`\n                );\n                if (!repoPath) return undefined;\n\n                const status = await Container.git.getStatusForRepo(repoPath);\n                if (status === undefined) {\n                    return window.showInformationMessage(\"The repository doesn't have any changes\");\n                }\n\n                args.files = [];\n\n                for (const file of status.files) {\n                    if (file.indexStatus === 'M') {\n                        args.files.push({ uri: file.uri, staged: true });\n                    }\n\n                    if (file.workingTreeStatus === 'M') {\n                        args.files.push({ uri: file.uri, staged: false });\n                    }\n                }\n            }\n        }\n\n        return this.execute(args);\n    }\n\n    private isModified(resource: SourceControlResourceState) {\n        const status = (resource as Resource).type;\n        return status === Status.BOTH_MODIFIED || status === Status.INDEX_MODIFIED || status === Status.MODIFIED;\n    }\n\n    async execute(args: ExternalDiffCommandArgs = {}) {\n        try {\n            let repoPath;\n            if (args.files === undefined) {\n                const editor = window.activeTextEditor;\n                if (editor === undefined) return undefined;\n\n                repoPath = await Container.git.getRepoPathOrActive(undefined, editor);\n                if (!repoPath) return undefined;\n\n                const uri = editor.document.uri;\n                const status = await Container.git.getStatusForFile(repoPath, uri.fsPath);\n                if (status === undefined) {\n                    return window.showInformationMessage(\"The current file doesn't have any changes\");\n                }\n\n                args.files = [];\n                if (status.indexStatus === 'M') {\n                    args.files.push({ uri: status.uri, staged: true });\n                }\n\n                if (status.workingTreeStatus === 'M') {\n                    args.files.push({ uri: status.uri, staged: false });\n                }\n            }\n            else {\n                repoPath = await Container.git.getRepoPath(args.files[0].uri.fsPath);\n                if (!repoPath) return undefined;\n            }\n\n            const tool = await Container.git.getDiffTool(repoPath);\n            if (tool === undefined) {\n                const result = await window.showWarningMessage(\n                    `Unable to open changes in diff tool. No Git diff tool is configured`,\n                    'View Git Docs'\n                );\n                if (!result) return undefined;\n\n                return commands.executeCommand(\n                    BuiltInCommands.Open,\n                    Uri.parse('https://git-scm.com/docs/git-config#git-config-difftool')\n                );\n            }\n\n            for (const file of args.files) {\n                void Container.git.openDiffTool(repoPath, file.uri, {\n                    ref1: file.ref1,\n                    ref2: file.ref2,\n                    staged: file.staged,\n                    tool: tool\n                });\n            }\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'ExternalDiffCommand');\n            return Messages.showGenericErrorMessage('Unable to open changes in diff tool');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRemote\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenBranchesInRemoteCommandArgs {\n    remote?: string;\n}\n\n@command()\nexport class OpenBranchesInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenBranchesInRemote);\n    }\n\n    protected async preExecute(context: CommandContext, args: OpenBranchesInRemoteCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithRemote(context)) {\n            args = { ...args };\n            args.remote = context.node.remote.name;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenBranchesInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Open branches on remote for which repository${GlyphChars.Ellipsis}`\n        );\n        if (!repoPath) return undefined;\n\n        try {\n            const remotes = await Container.git.getRemotes(repoPath);\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: 'branches'\n                },\n                remote: args.remote,\n                remotes\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenBranchesInRemoteCommand');\n            return window.showErrorMessage(\n                `Unable to open branches on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithBranch\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenBranchInRemoteCommandArgs {\n    branch?: string;\n    remote?: string;\n}\n\n@command()\nexport class OpenBranchInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenBranchInRemote);\n    }\n\n    protected async preExecute(context: CommandContext, args: OpenBranchInRemoteCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithBranch(context)) {\n            args = { ...args };\n            args.branch = context.node.branch.name;\n            args.remote = context.node.branch.getRemote();\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenBranchInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Open branch on remote for which repository${GlyphChars.Ellipsis}`\n        );\n        if (!repoPath) return undefined;\n\n        try {\n            if (args.branch === undefined) {\n                args = { ...args };\n\n                const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                    `Open which branch on remote${GlyphChars.Ellipsis}`,\n                    {\n                        autoPick: true,\n                        filters: {\n                            branches: b => b.tracking !== undefined\n                        },\n                        include: 'branches'\n                    }\n                );\n                if (pick === undefined || pick instanceof CommandQuickPickItem) return undefined;\n\n                args.branch = pick.ref;\n            }\n\n            const remotes = await Container.git.getRemotes(repoPath);\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: 'branch',\n                    branch: args.branch || 'HEAD'\n                },\n                remote: args.remote,\n                remotes\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenBranchInRemoteCommandArgs');\n            return window.showErrorMessage(\n                `Unable to open branch on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { Arrays } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, getRepoPathOrPrompt, openEditor } from './common';\n\nexport interface OpenChangedFilesCommandArgs {\n    uris?: Uri[];\n}\n\n@command()\nexport class OpenChangedFilesCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenChangedFiles);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenChangedFilesCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            if (args.uris === undefined) {\n                args = { ...args };\n\n                const repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Open all files changed in which repository${GlyphChars.Ellipsis}`\n                );\n                if (!repoPath) return undefined;\n\n                const status = await Container.git.getStatusForRepo(repoPath);\n                if (status === undefined) return window.showWarningMessage(`Unable to open changed files`);\n\n                args.uris = Arrays.filterMap(status.files, f => (f.status !== 'D' ? f.uri : undefined));\n            }\n\n            for (const uri of args.uris) {\n                await openEditor(uri, { preserveFocus: true, preview: false } as TextDocumentShowOptions);\n            }\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenChangedFilesCommand');\n            return Messages.showGenericErrorMessage('Unable to open all changed files');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenCommitInRemoteCommandArgs {\n    sha?: string;\n}\n\n@command()\nexport class OpenCommitInRemoteCommand extends ActiveEditorCommand {\n    static getMarkdownCommandArgs(sha: string): string;\n    static getMarkdownCommandArgs(args: OpenCommitInRemoteCommandArgs): string;\n    static getMarkdownCommandArgs(argsOrSha: OpenCommitInRemoteCommandArgs | string): string {\n        const args = typeof argsOrSha === 'string' ? { sha: argsOrSha } : argsOrSha;\n        return super.getMarkdownCommandArgsCore<OpenCommitInRemoteCommandArgs>(Commands.OpenCommitInRemote, args);\n    }\n\n    constructor() {\n        super(Commands.OpenCommitInRemote);\n    }\n\n    protected async preExecute(context: CommandContext, args: OpenCommitInRemoteCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.sha = context.node.commit.sha;\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenCommitInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n        const gitUri = await GitUri.fromUri(uri);\n        if (!gitUri.repoPath) return undefined;\n\n        try {\n            if (args.sha === undefined) {\n                const blameline = editor == null ? 0 : editor.selection.active.line;\n                if (blameline < 0) return undefined;\n\n                const blame =\n                    editor && editor.document && editor.document.isDirty\n                        ? await Container.git.getBlameForLineContents(gitUri, blameline, editor.document.getText())\n                        : await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage(\n                        'Unable to open commit on remote provider'\n                    );\n                }\n\n                let commit = blame.commit;\n                // If the line is uncommitted, find the previous commit\n                if (commit.isUncommitted) {\n                    commit = commit.with({\n                        sha: commit.previousSha,\n                        fileName: commit.previousFileName,\n                        previousSha: null,\n                        previousFileName: null\n                    });\n                }\n\n                args.sha = commit.sha;\n            }\n\n            const remotes = await Container.git.getRemotes(gitUri.repoPath);\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: 'commit',\n                    sha: args.sha\n                },\n                remotes\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenCommitInRemoteCommand');\n            return window.showErrorMessage(\n                `Unable to open commit on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { commands, Range, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { BranchesAndTagsQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithBranch,\n    isCommandViewContextWithCommit\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenFileInRemoteCommandArgs {\n    branch?: string;\n    range?: boolean;\n    clipboard?: boolean;\n}\n\n@command()\nexport class OpenFileInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenFileInRemote);\n    }\n\n    protected async preExecute(\n        context: CommandContext,\n        args: OpenFileInRemoteCommandArgs = { range: true }\n    ): Promise<any> {\n        if (isCommandViewContextWithCommit(context)) {\n            args = { ...args };\n            args.range = false;\n            if (isCommandViewContextWithBranch(context)) {\n                args.branch = context.node.branch !== undefined ? context.node.branch.name : undefined;\n            }\n            return this.execute(context.editor, context.node.commit.uri, args);\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenFileInRemoteCommandArgs = { range: true }) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n        if (!gitUri.repoPath) return undefined;\n\n        if (args.branch === undefined) {\n            const branch = await Container.git.getBranch(gitUri.repoPath);\n            if (branch === undefined || branch.tracking === undefined) {\n                const pick = await new BranchesAndTagsQuickPick(gitUri.repoPath).show(\n                    args.clipboard\n                        ? `Copy url for ${gitUri.getRelativePath()} to clipboard for which branch${GlyphChars.Ellipsis}`\n                        : `Open ${gitUri.getRelativePath()} on remote for which branch${GlyphChars.Ellipsis}`,\n                    {\n                        autoPick: true,\n                        filters: {\n                            branches: b => b.tracking !== undefined\n                        },\n                        include: 'branches'\n                    }\n                );\n                if (pick === undefined || pick instanceof CommandQuickPickItem) return undefined;\n\n                args.branch = pick.ref;\n            }\n            else {\n                args.branch = branch.name;\n            }\n        }\n\n        try {\n            const remotes = await Container.git.getRemotes(gitUri.repoPath);\n            const range =\n                args.range && editor != null\n                    ? new Range(\n                          editor.selection.start.with({ line: editor.selection.start.line + 1 }),\n                          editor.selection.end.with({ line: editor.selection.end.line + 1 })\n                      )\n                    : undefined;\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: gitUri.sha === undefined ? 'file' : 'revision',\n                    branch: args.branch || 'HEAD',\n                    fileName: gitUri.getRelativePath(),\n                    range: range,\n                    sha: gitUri.sha\n                },\n                remotes,\n                clipboard: args.clipboard\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenFileInRemoteCommand');\n            return window.showErrorMessage(\n                `Unable to open file on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { CancellationTokenSource, commands, Range, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitTag, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ChooseFromBranchesAndTagsQuickPickItem, CommandQuickPickItem, FileHistoryQuickPick } from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, openEditor } from './common';\n\nexport interface OpenFileRevisionCommandArgs {\n    branchOrTag?: GitBranch | GitTag;\n    uri?: Uri;\n    maxCount?: number;\n\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n    annotationType?: FileAnnotationType;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class OpenFileRevisionCommand extends ActiveEditorCommand {\n    static getMarkdownCommandArgs(args: OpenFileRevisionCommandArgs): string;\n    static getMarkdownCommandArgs(uri: Uri, annotationType?: FileAnnotationType, line?: number): string;\n    static getMarkdownCommandArgs(\n        argsOrUri: OpenFileRevisionCommandArgs | Uri,\n        annotationType?: FileAnnotationType,\n        line?: number\n    ): string {\n        let args: OpenFileRevisionCommandArgs | Uri;\n        if (argsOrUri instanceof Uri) {\n            const uri = argsOrUri;\n\n            args = {\n                uri: uri,\n                line: line,\n                annotationType: annotationType\n            };\n        }\n        else {\n            args = argsOrUri;\n        }\n\n        return super.getMarkdownCommandArgsCore<OpenFileRevisionCommandArgs>(Commands.OpenFileRevision, args);\n    }\n\n    constructor() {\n        super(Commands.OpenFileRevision);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: OpenFileRevisionCommandArgs = {}) {\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        let progressCancellation: CancellationTokenSource | undefined;\n\n        try {\n            if (args.uri == null) {\n                uri = getCommandUri(uri, editor);\n                if (uri == null) return undefined;\n\n                const gitUri = await GitUri.fromUri(uri);\n\n                const placeHolder = `Open revision of ${gitUri.getFormattedPath({\n                    suffix: args.branchOrTag ? ` (${args.branchOrTag.name})` : undefined\n                })}${gitUri.sha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${gitUri.shortSha}` : ''}${\n                    GlyphChars.Ellipsis\n                }`;\n\n                progressCancellation = FileHistoryQuickPick.showProgress(placeHolder);\n\n                const log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                    maxCount: args.maxCount,\n                    ref: (args.branchOrTag && args.branchOrTag.ref) || gitUri.sha\n                });\n                if (log === undefined) {\n                    if (args.branchOrTag) {\n                        return window.showWarningMessage(`The file could not be found in ${args.branchOrTag.name}`);\n                    }\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to open history compare');\n                }\n\n                if (progressCancellation.token.isCancellationRequested) return undefined;\n\n                let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n                if (log.truncated) {\n                    const npc = new CommandQuickPickItem(\n                        {\n                            label: `$(arrow-right) Show Next Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} newer commits`\n                        },\n                        Commands.OpenFileRevision,\n                        [uri, { ...args } as OpenFileRevisionCommandArgs]\n                    );\n\n                    const last = Iterables.last(log.commits.values());\n                    if (last != null) {\n                        previousPageCommand = new CommandQuickPickItem(\n                            {\n                                label: `$(arrow-left) Show Previous Commits`,\n                                description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${log.maxCount} older commits`\n                            },\n                            Commands.OpenFileRevision,\n                            [new GitUri(uri, last), { ...args, nextPageCommand: npc } as OpenFileRevisionCommandArgs]\n                        );\n                    }\n                }\n\n                const currentCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                            GlyphChars.Space\n                        }$(file-text) ${gitUri.getFormattedPath()}${\n                            args.branchOrTag\n                                ? ` from ${GlyphChars.Space}${\n                                      args.branchOrTag instanceof GitTag ? '$(tag)' : '$(git-branch)'\n                                  } ${args.branchOrTag.name}`\n                                : gitUri.sha\n                                    ? ` from ${GlyphChars.Space}$(git-commit) ${gitUri.shortSha}`\n                                    : ''\n                        }`\n                    },\n                    Commands.OpenFileRevision,\n                    [uri, { ...args }]\n                );\n\n                const pick = await FileHistoryQuickPick.show(log, gitUri, placeHolder, {\n                    pickerOnly: true,\n                    progressCancellation: progressCancellation,\n                    currentCommand: currentCommand,\n                    nextPageCommand: args.nextPageCommand,\n                    previousPageCommand: previousPageCommand,\n                    showAllCommand: log.truncated\n                        ? new CommandQuickPickItem(\n                              {\n                                  label: `$(sync) Show All Commits`,\n                                  description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                              },\n                              Commands.OpenFileRevision,\n                              [uri, { ...args, maxCount: 0 } as OpenFileRevisionCommandArgs]\n                          )\n                        : undefined\n                });\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof ChooseFromBranchesAndTagsQuickPickItem) {\n                    const branchOrTag = await pick.execute();\n                    if (branchOrTag === undefined) return undefined;\n                    if (branchOrTag instanceof CommandQuickPickItem) return branchOrTag.execute();\n\n                    return commands.executeCommand(Commands.OpenFileRevision, gitUri, {\n                        ...args,\n                        branchOrTag: branchOrTag.item,\n                        goBackCommand: currentCommand\n                    } as OpenFileRevisionCommandArgs);\n                }\n                else {\n                    if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                    args.uri = GitUri.toRevisionUri(pick.commit.sha, pick.commit.uri.fsPath, pick.commit.repoPath);\n                }\n            }\n\n            if (args.line !== undefined && args.line !== 0) {\n                if (args.showOptions === undefined) {\n                    args.showOptions = {};\n                }\n                args.showOptions.selection = new Range(args.line, 0, args.line, 0);\n            }\n\n            const e = await openEditor(args.uri!, { ...args.showOptions, rethrow: true });\n            if (args.annotationType === undefined) return e;\n\n            return Container.fileAnnotations.show(e!, args.annotationType, args.line);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenFileRevisionCommand');\n            return Messages.showGenericErrorMessage('Unable to open file revision');\n        }\n        finally {\n            progressCancellation && progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { GitLogCommit, GitRemote, GitService, RemoteResource, RemoteResourceType } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, OpenRemoteCommandQuickPickItem, RemotesQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCommand, command, Commands } from './common';\n\nexport interface OpenInRemoteCommandArgs {\n    remote?: string;\n    remotes?: GitRemote[];\n    resource?: RemoteResource;\n    clipboard?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class OpenInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenInRemote);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: OpenInRemoteCommandArgs = {}) {\n        args = { ...args };\n        if (args.remotes === undefined || args.resource === undefined) return undefined;\n\n        if (args.remote !== undefined) {\n            const remotes = args.remotes.filter(r => r.name === args.remote);\n            // Only filter if we get some results\n            if (remotes.length > 0) {\n                args.remotes = remotes;\n            }\n        }\n\n        try {\n            if (args.remotes.length === 1) {\n                this.ensureRemoteBranchName(args);\n                const command = new OpenRemoteCommandQuickPickItem(args.remotes[0], args.resource, args.clipboard);\n                return await command.execute();\n            }\n\n            const verb = args.clipboard ? 'Copy url for' : 'Open';\n            const suffix = args.clipboard ? `to clipboard from${GlyphChars.Ellipsis}` : `on${GlyphChars.Ellipsis}`;\n            let placeHolder = '';\n            switch (args.resource.type) {\n                case RemoteResourceType.Branch:\n                    this.ensureRemoteBranchName(args);\n                    placeHolder = `${verb} ${args.resource.branch} branch ${suffix}`;\n                    break;\n\n                case RemoteResourceType.Commit:\n                    const shortSha = GitService.shortenSha(args.resource.sha);\n                    placeHolder = `${verb} commit ${shortSha} ${suffix}`;\n                    break;\n\n                case RemoteResourceType.File:\n                    placeHolder = `${verb} ${args.resource.fileName} ${suffix}`;\n                    break;\n\n                case RemoteResourceType.Revision:\n                    if (args.resource.commit !== undefined && args.resource.commit instanceof GitLogCommit) {\n                        if (args.resource.commit.status === 'D') {\n                            args.resource.sha = args.resource.commit.previousSha;\n                            placeHolder = `${verb} ${args.resource.fileName} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                                args.resource.commit.previousShortSha\n                            } ${suffix}`;\n                        }\n                        else {\n                            args.resource.sha = args.resource.commit.sha;\n                            placeHolder = `${verb} ${args.resource.fileName} ${Strings.pad(GlyphChars.Dot, 1, 1)} ${\n                                args.resource.commit.shortSha\n                            } ${suffix}`;\n                        }\n                    }\n                    else {\n                        const shortFileSha =\n                            args.resource.sha === undefined ? '' : GitService.shortenSha(args.resource.sha);\n                        const shaSuffix = shortFileSha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${shortFileSha}` : '';\n\n                        placeHolder = `${verb} ${args.resource.fileName}${shaSuffix} ${suffix}`;\n                    }\n                    break;\n            }\n\n            const pick = await RemotesQuickPick.show(\n                args.remotes,\n                placeHolder,\n                args.resource,\n                args.clipboard,\n                args.goBackCommand\n            );\n            if (pick === undefined) return undefined;\n\n            return await pick.execute();\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenInRemoteCommand');\n            return Messages.showGenericErrorMessage('Unable to open in remote provider');\n        }\n    }\n\n    private ensureRemoteBranchName(args: OpenInRemoteCommandArgs) {\n        if (args.remotes === undefined || args.resource === undefined || args.resource.type !== 'branch') return;\n\n        // Check to see if the remote is in the branch\n        const index = args.resource.branch.indexOf('/');\n        if (index >= 0) {\n            const remoteName = args.resource.branch.substring(0, index);\n            const remote = args.remotes.find(r => r.name === remoteName);\n            if (remote !== undefined) {\n                args.resource.branch = args.resource.branch.substring(index + 1);\n                args.remotes = [remote];\n            }\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport {\n    ActiveEditorCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRemote\n} from './common';\nimport { OpenInRemoteCommandArgs } from './openInRemote';\n\nexport interface OpenRepoInRemoteCommandArgs {\n    remote?: string;\n}\n\n@command()\nexport class OpenRepoInRemoteCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenRepoInRemote);\n    }\n\n    protected async preExecute(context: CommandContext, args: OpenRepoInRemoteCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithRemote(context)) {\n            args = { ...args };\n            args.remote = context.node.remote.name;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: OpenRepoInRemoteCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Open which repository on remote${GlyphChars.Ellipsis}`\n        );\n        if (!repoPath) return undefined;\n\n        try {\n            const remotes = await Container.git.getRemotes(repoPath);\n\n            return commands.executeCommand(Commands.OpenInRemote, uri, {\n                resource: {\n                    type: 'repo'\n                },\n                remote: args.remote,\n                remotes\n            } as OpenInRemoteCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenRepoInRemoteCommand');\n            return window.showErrorMessage(\n                `Unable to open repository on remote provider. See output channel for more details`\n            );\n        }\n    }\n}\n","'use strict';\nimport { Range, TextDocumentShowOptions, TextEditor, Uri, window } from 'vscode';\nimport { FileAnnotationType } from '../configuration';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { ActiveEditorCommand, command, Commands, getCommandUri, openEditor } from './common';\n\nexport interface OpenWorkingFileCommandArgs {\n    uri?: Uri;\n    line?: number;\n    showOptions?: TextDocumentShowOptions;\n    annotationType?: FileAnnotationType;\n}\n\n@command()\nexport class OpenWorkingFileCommand extends ActiveEditorCommand {\n    constructor() {\n        super(Commands.OpenWorkingFile);\n    }\n\n    async execute(editor: TextEditor, uri?: Uri, args: OpenWorkingFileCommandArgs = {}) {\n        args = { ...args };\n        if (args.line === undefined) {\n            args.line = editor == null ? 0 : editor.selection.active.line;\n        }\n\n        try {\n            if (args.uri == null) {\n                uri = getCommandUri(uri, editor);\n                if (uri == null) return undefined;\n\n                args.uri = await GitUri.fromUri(uri);\n                if (args.uri instanceof GitUri && args.uri.sha) {\n                    const [fileName, repoPath] = await Container.git.findWorkingFileName(\n                        args.uri.fsPath,\n                        args.uri.repoPath\n                    );\n                    if (fileName === undefined) {\n                        return window.showWarningMessage(\n                            'Unable to open working file. File could not be found in the working tree'\n                        );\n                    }\n\n                    args.uri = new GitUri(GitUri.resolveToUri(fileName, repoPath), repoPath);\n                }\n            }\n\n            if (args.line !== undefined && args.line !== 0) {\n                if (args.showOptions === undefined) {\n                    args.showOptions = {};\n                }\n                args.showOptions.selection = new Range(args.line, 0, args.line, 0);\n            }\n\n            const e = await openEditor(args.uri, { ...args.showOptions, rethrow: true });\n            if (args.annotationType === undefined) return e;\n\n            return Container.fileAnnotations.show(e!, args.annotationType, args.line);\n        }\n        catch (ex) {\n            Logger.error(ex, 'OpenWorkingFileCommand');\n            return Messages.showGenericErrorMessage('Unable to open working file');\n        }\n    }\n}\n","'use strict';\nimport { Container } from '../container';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class FetchRepositoriesCommand extends Command {\n    constructor() {\n        super(Commands.FetchRepositories);\n    }\n\n    async execute() {\n        return Container.git.fetchAll();\n    }\n}\n\n@command()\nexport class PullRepositoriesCommand extends Command {\n    constructor() {\n        super(Commands.PullRepositories);\n    }\n\n    async execute() {\n        return Container.git.pullAll();\n    }\n}\n\n@command()\nexport class PushRepositoriesCommand extends Command {\n    constructor() {\n        super(Commands.PushRepositories);\n    }\n\n    async execute() {\n        return Container.git.pushAll();\n    }\n}\n","'use strict';\nimport { ConfigurationTarget } from 'vscode';\nimport { configuration } from '../configuration';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class ResetSuppressedWarningsCommand extends Command {\n    constructor() {\n        super(Commands.ResetSuppressedWarnings);\n    }\n\n    async execute() {\n        await configuration.update(\n            configuration.name('advanced')('messages').value,\n            undefined,\n            ConfigurationTarget.Global\n        );\n    }\n}\n","'use strict';\nimport { commands, InputBoxOptions, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitRepoSearchBy, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, CommitsQuickPick, ShowCommitSearchResultsInViewQuickPickItem } from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { SearchResultsCommitsNode } from '../views/nodes';\nimport {\n    ActiveEditorCachedCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    getRepoPathOrActiveOrPrompt,\n    isCommandViewContextWithRepo\n} from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nconst searchByRegex = /^([@~=:#])/;\nconst symbolToSearchByMap = new Map<string, GitRepoSearchBy>([\n    ['@', GitRepoSearchBy.Author],\n    ['~', GitRepoSearchBy.ChangedLines],\n    ['=', GitRepoSearchBy.Changes],\n    [':', GitRepoSearchBy.Files],\n    ['#', GitRepoSearchBy.Sha]\n]);\n\nconst searchByToSymbolMap = new Map<GitRepoSearchBy, string>([\n    [GitRepoSearchBy.Author, '@'],\n    [GitRepoSearchBy.ChangedLines, '~'],\n    [GitRepoSearchBy.Changes, '='],\n    [GitRepoSearchBy.Files, ':'],\n    [GitRepoSearchBy.Sha, '#']\n]);\n\nexport interface SearchCommitsCommandArgs {\n    search?: string;\n    searchBy?: GitRepoSearchBy;\n    maxCount?: number;\n    prefillOnly?: boolean;\n    showInView?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class SearchCommitsCommand extends ActiveEditorCachedCommand {\n    private _lastSearch: string | undefined;\n\n    constructor() {\n        super([Commands.SearchCommits, Commands.SearchCommitsInView]);\n    }\n\n    protected async preExecute(context: CommandContext, args: SearchCommitsCommandArgs = {}) {\n        if (context.type === 'viewItem') {\n            args = { ...args };\n            args.showInView = true;\n\n            if (context.node instanceof SearchResultsCommitsNode) {\n                args.search = context.node.search;\n                args.searchBy = context.node.searchBy;\n                args.prefillOnly = true;\n            }\n\n            if (isCommandViewContextWithRepo(context)) {\n                return this.execute(context.editor, context.node.uri, args);\n            }\n        }\n        else if (context.command === Commands.SearchCommitsInView) {\n            args = { ...args };\n            args.showInView = true;\n        }\n        else {\n            // TODO: Add a user setting (default to view?)\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: SearchCommitsCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        const repoPath = await getRepoPathOrActiveOrPrompt(\n            gitUri,\n            editor,\n            `Search for commits in which repository${GlyphChars.Ellipsis}`,\n            args.goBackCommand\n        );\n        if (!repoPath) return undefined;\n\n        args = { ...args };\n        const originalArgs = { ...args };\n\n        if (args.prefillOnly && args.search && args.searchBy) {\n            args.search = `${searchByToSymbolMap.get(args.searchBy) || ''}${args.search}`;\n            args.searchBy = undefined;\n        }\n\n        if (!args.search || args.searchBy == null) {\n            let selection;\n            if (!args.search) {\n                if (args.searchBy != null) {\n                    args.search = searchByToSymbolMap.get(args.searchBy);\n                    selection = [1, 1];\n                }\n                else {\n                    args.search = this._lastSearch;\n                }\n            }\n\n            if (args.showInView) {\n                await Container.searchView.show();\n            }\n\n            args.search = await window.showInputBox({\n                value: args.search,\n                prompt: `Please enter a search string`,\n                placeHolder: `Search commits by message, author (@<pattern>), files (:<path/glob>), commit id (#<sha>), changes (=<pattern>), changed lines (~<pattern>)`,\n                valueSelection: selection\n            } as InputBoxOptions);\n            if (args.search === undefined) {\n                return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n            }\n\n            this._lastSearch = originalArgs.search = args.search;\n\n            const match = searchByRegex.exec(args.search);\n            if (match && match[1]) {\n                args.searchBy = symbolToSearchByMap.get(match[1]);\n                args.search = args.search.substring(args.search[1] === ' ' ? 2 : 1);\n            }\n            else if (GitService.isShaLike(args.search)) {\n                args.searchBy = GitRepoSearchBy.Sha;\n            }\n            else {\n                args.searchBy = GitRepoSearchBy.Message;\n            }\n        }\n\n        if (args.searchBy === undefined) {\n            args.searchBy = GitRepoSearchBy.Message;\n        }\n\n        let searchLabel: string | undefined = undefined;\n        switch (args.searchBy) {\n            case GitRepoSearchBy.Author:\n                searchLabel = `commits with an author matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.ChangedLines:\n                searchLabel = `commits with changed lines matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.Changes:\n                searchLabel = `commits with changes matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.Files:\n                searchLabel = `commits with files matching '${args.search}'`;\n                break;\n\n            case GitRepoSearchBy.Message:\n                searchLabel = args.search ? `commits with a message matching '${args.search}'` : 'all commits';\n                break;\n\n            case GitRepoSearchBy.Sha:\n                searchLabel = `commits with an id matching '${args.search}'`;\n                break;\n        }\n\n        if (args.showInView) {\n            void Container.searchView.search(repoPath, args.search, args.searchBy, {\n                maxCount: args.maxCount,\n                label: { label: searchLabel! }\n            });\n\n            return;\n        }\n\n        const progressCancellation = CommitsQuickPick.showProgress(searchLabel!);\n        try {\n            const log = await Container.git.getLogForSearch(repoPath, args.search, args.searchBy, {\n                maxCount: args.maxCount\n            });\n\n            if (progressCancellation.token.isCancellationRequested) return undefined;\n\n            let goBackCommand: CommandQuickPickItem | undefined =\n                args.goBackCommand ||\n                new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to commit search`\n                    },\n                    Commands.SearchCommits,\n                    [uri, originalArgs]\n                );\n\n            let commit;\n            if (args.searchBy !== GitRepoSearchBy.Sha || log === undefined || log.count !== 1) {\n                const pick = await CommitsQuickPick.show(log, searchLabel!, progressCancellation, {\n                    goBackCommand: goBackCommand,\n                    showAllCommand:\n                        log !== undefined && log.truncated\n                            ? new CommandQuickPickItem(\n                                  {\n                                      label: `$(sync) Show All Commits`,\n                                      description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                                  },\n                                  Commands.SearchCommits,\n                                  [uri, { ...args, maxCount: 0, goBackCommand: goBackCommand }]\n                              )\n                            : undefined,\n                    showInViewCommand:\n                        log !== undefined\n                            ? new ShowCommitSearchResultsInViewQuickPickItem(args.search, args.searchBy, log, {\n                                  label: searchLabel!\n                              })\n                            : undefined\n                });\n                if (pick === undefined) return undefined;\n\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                commit = pick.commit;\n                goBackCommand = undefined;\n            }\n            else {\n                commit = Iterables.first(log.commits.values());\n            }\n\n            return commands.executeCommand(Commands.ShowQuickCommitDetails, commit.toGitUri(), {\n                sha: commit.sha,\n                commit: commit,\n                goBackCommand:\n                    goBackCommand ||\n                    new CommandQuickPickItem(\n                        {\n                            label: `go back ${GlyphChars.ArrowBack}`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 2)} to search for ${searchLabel}`\n                        },\n                        Commands.SearchCommits,\n                        [uri, args]\n                    )\n            } as ShowQuickCommitDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowCommitSearchCommand');\n            return Messages.showGenericErrorMessage('Unable to find commits');\n        }\n        finally {\n            progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { commands } from 'vscode';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { command, Command, Commands, getLastCommand } from './common';\n\n@command()\nexport class ShowLastQuickPickCommand extends Command {\n    constructor() {\n        super(Commands.ShowLastQuickPick);\n    }\n\n    async execute() {\n        const command = getLastCommand();\n        if (command === undefined) return undefined;\n\n        try {\n            return commands.executeCommand(command.command, ...command.args);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowLastQuickPickCommand');\n            return Messages.showGenericErrorMessage('Unable to show last quick pick');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitLog, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { BranchesAndTagsQuickPick, BranchHistoryQuickPick, CommandQuickPickItem } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nexport interface ShowQuickBranchHistoryCommandArgs {\n    branch?: string;\n    log?: GitLog;\n    maxCount?: number;\n    repoPath?: string;\n\n    goBackCommand?: CommandQuickPickItem;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickBranchHistoryCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickBranchHistory);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickBranchHistoryCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const gitUri = uri && (await GitUri.fromUri(uri));\n\n        args = { ...args };\n\n        let progressCancellation =\n            args.branch === undefined ? undefined : BranchHistoryQuickPick.showProgress(args.branch);\n        try {\n            const repoPath =\n                args.repoPath ||\n                (await getRepoPathOrActiveOrPrompt(\n                    gitUri,\n                    editor,\n                    `Show branch history in which repository${GlyphChars.Ellipsis}`\n                ));\n            if (!repoPath) return undefined;\n\n            if (args.branch === undefined) {\n                let goBackCommand;\n                if (!(await Container.git.getRepoPathOrActive(uri, editor))) {\n                    goBackCommand = new CommandQuickPickItem(\n                        {\n                            label: `go back ${GlyphChars.ArrowBack}`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to which repository`\n                        },\n                        Commands.ShowQuickBranchHistory,\n                        [uri, args]\n                    );\n                }\n\n                const pick = await new BranchesAndTagsQuickPick(repoPath).show(\n                    `Show history for branch${GlyphChars.Ellipsis}`,\n                    {\n                        goBack: goBackCommand,\n                        include: 'branches'\n                    }\n                );\n                if (pick === undefined) return undefined;\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n                args.branch = pick.ref;\n                if (args.branch === undefined) return undefined;\n\n                progressCancellation = BranchHistoryQuickPick.showProgress(args.branch);\n            }\n\n            if (args.log === undefined) {\n                args.log = await Container.git.getLog(repoPath, {\n                    maxCount: args.maxCount,\n                    ref: (gitUri && gitUri.sha) || args.branch\n                });\n                if (args.log === undefined) return window.showWarningMessage(`Unable to show branch history`);\n            }\n\n            if (progressCancellation !== undefined && progressCancellation.token.isCancellationRequested) {\n                return undefined;\n            }\n\n            const pick = await BranchHistoryQuickPick.show(\n                args.log,\n                gitUri,\n                args.branch,\n                progressCancellation!,\n                args.goBackCommand,\n                args.nextPageCommand\n            );\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            // Create a command to get back to here\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${GlyphChars.Space}$(git-branch) ${\n                        args.branch\n                    } history`\n                },\n                Commands.ShowQuickBranchHistory,\n                [uri, { ...args }]\n            );\n\n            return commands.executeCommand(Commands.ShowQuickCommitDetails, pick.commit.toGitUri(), {\n                sha: pick.commit.sha,\n                commit: pick.commit,\n                repoLog: args.log,\n                goBackCommand: currentCommand\n            } as ShowQuickCommitDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickBranchHistoryCommand');\n            return Messages.showGenericErrorMessage('Unable to show branch history');\n        }\n        finally {\n            progressCancellation && progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitLog, GitLogCommit, GitRepoSearchBy, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, CommitQuickPick, CommitWithFileStatusQuickPickItem } from '../quickpicks';\nimport { Strings } from '../system';\nimport {\n    ActiveEditorCachedCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\nimport { ShowQuickCommitFileDetailsCommandArgs } from './showQuickCommitFileDetails';\n\nexport interface ShowQuickCommitDetailsCommandArgs {\n    sha?: string;\n    commit?: GitCommit | GitLogCommit;\n    repoLog?: GitLog;\n    showInView?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickCommitDetailsCommand extends ActiveEditorCachedCommand {\n    static getMarkdownCommandArgs(sha: string): string;\n    static getMarkdownCommandArgs(args: ShowQuickCommitDetailsCommandArgs): string;\n    static getMarkdownCommandArgs(argsOrSha: ShowQuickCommitDetailsCommandArgs | string): string {\n        const args = typeof argsOrSha === 'string' ? { sha: argsOrSha } : argsOrSha;\n        return super.getMarkdownCommandArgsCore<ShowQuickCommitDetailsCommandArgs>(\n            Commands.ShowQuickCommitDetails,\n            args\n        );\n    }\n\n    constructor() {\n        super([Commands.ShowCommitInView, Commands.ShowQuickCommitDetails]);\n    }\n\n    protected async preExecute(context: CommandContext, args: ShowQuickCommitDetailsCommandArgs = {}): Promise<any> {\n        if (context.command === Commands.ShowCommitInView) {\n            args = { ...args };\n            args.showInView = true;\n        }\n\n        if (context.type === 'viewItem') {\n            args = { ...args };\n            args.sha = context.node.uri.sha;\n\n            if (isCommandViewContextWithCommit(context)) {\n                args.commit = context.node.commit;\n            }\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickCommitDetailsCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        let repoPath = gitUri.repoPath;\n        let workingFileName = repoPath ? paths.relative(repoPath, gitUri.fsPath) : gitUri.fsPath;\n\n        args = { ...args };\n        if (args.sha === undefined) {\n            if (editor == null) return undefined;\n\n            const blameline = editor.selection.active.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame = await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to show commit details');\n                }\n\n                // Because the previous sha of an uncommitted file isn't trust worthy we just have to kick out\n                if (blame.commit.isUncommitted) {\n                    return Messages.showLineUncommittedWarningMessage('Unable to show commit details');\n                }\n\n                args.sha = blame.commit.sha;\n                repoPath = blame.commit.repoPath;\n                workingFileName = blame.commit.fileName;\n\n                args.commit = blame.commit;\n            }\n            catch (ex) {\n                Logger.error(ex, 'ShowQuickCommitDetailsCommand', `getBlameForLine(${blameline})`);\n                return Messages.showGenericErrorMessage('Unable to show commit details');\n            }\n        }\n\n        try {\n            if (args.commit === undefined || args.commit.isFile) {\n                if (args.repoLog !== undefined) {\n                    args.commit = args.repoLog.commits.get(args.sha!);\n                    // If we can't find the commit, kill the repoLog\n                    if (args.commit === undefined) {\n                        args.repoLog = undefined;\n                    }\n                }\n\n                if (args.repoLog === undefined) {\n                    const log = await Container.git.getLog(repoPath!, { maxCount: 2, ref: args.sha });\n                    if (log === undefined) {\n                        return Messages.showCommitNotFoundWarningMessage(`Unable to show commit details`);\n                    }\n\n                    args.commit = log.commits.get(args.sha!);\n                }\n            }\n\n            if (args.commit === undefined) {\n                return Messages.showCommitNotFoundWarningMessage(`Unable to show commit details`);\n            }\n\n            if (args.commit.workingFileName === undefined) {\n                args.commit.workingFileName = workingFileName;\n            }\n\n            if (args.showInView) {\n                void (await Container.searchView.search(repoPath!, args.commit.sha, GitRepoSearchBy.Sha, {\n                    label: { label: `commits with an id matching '${args.commit.shortSha}'` }\n                }));\n\n                return undefined;\n            }\n\n            if (args.goBackCommand === undefined) {\n                const branch = await Container.git.getBranch(args.commit.repoPath);\n                if (branch !== undefined) {\n                    // Create a command to get back to the branch history\n                    args.goBackCommand = new CommandQuickPickItem(\n                        {\n                            label: `go back ${GlyphChars.ArrowBack}`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to ${branch.name} history`\n                        },\n                        Commands.ShowQuickCurrentBranchHistory,\n                        [args.commit.toGitUri()]\n                    );\n                }\n            }\n\n            // Create a command to get back to where we are right now\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to details of ${\n                        GlyphChars.Space\n                    }$(git-commit) ${args.commit.shortSha}`\n                },\n                Commands.ShowQuickCommitDetails,\n                [args.commit.toGitUri(), args]\n            );\n\n            const pick = await CommitQuickPick.show(\n                args.commit as GitLogCommit,\n                uri,\n                args.goBackCommand,\n                currentCommand,\n                args.repoLog\n            );\n            if (pick === undefined) return undefined;\n\n            if (!(pick instanceof CommitWithFileStatusQuickPickItem)) return pick.execute();\n\n            return commands.executeCommand(Commands.ShowQuickCommitFileDetails, pick.commit.toGitUri(), {\n                commit: pick.commit,\n                sha: pick.sha,\n                goBackCommand: currentCommand\n            } as ShowQuickCommitFileDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickCommitDetailsCommand');\n            return Messages.showGenericErrorMessage('Unable to show commit details');\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitCommit, GitLog, GitLogCommit, GitService, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, CommitFileQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport {\n    ActiveEditorCachedCommand,\n    command,\n    CommandContext,\n    Commands,\n    getCommandUri,\n    isCommandViewContextWithCommit\n} from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nexport interface ShowQuickCommitFileDetailsCommandArgs {\n    sha?: string;\n    commit?: GitCommit | GitLogCommit;\n    fileLog?: GitLog;\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickCommitFileDetailsCommand extends ActiveEditorCachedCommand {\n    static getMarkdownCommandArgs(sha: string): string;\n    static getMarkdownCommandArgs(args: ShowQuickCommitFileDetailsCommandArgs): string;\n    static getMarkdownCommandArgs(argsOrSha: ShowQuickCommitFileDetailsCommandArgs | string): string {\n        const args = typeof argsOrSha === 'string' ? { sha: argsOrSha } : argsOrSha;\n        return super.getMarkdownCommandArgsCore<ShowQuickCommitFileDetailsCommandArgs>(\n            Commands.ShowQuickCommitFileDetails,\n            args\n        );\n    }\n\n    constructor() {\n        super([Commands.ShowQuickCommitFileDetails, Commands.ShowQuickRevisionDetails]);\n    }\n\n    protected async preExecute(\n        context: CommandContext,\n        args: ShowQuickCommitFileDetailsCommandArgs = {}\n    ): Promise<any> {\n        if (context.command === Commands.ShowQuickRevisionDetails && context.editor !== undefined) {\n            args = { ...args };\n\n            const gitUri = await GitUri.fromUri(context.editor.document.uri);\n            args.sha = gitUri.sha;\n        }\n\n        if (context.type === 'viewItem') {\n            args = { ...args };\n            args.sha = context.node.uri.sha;\n\n            if (isCommandViewContextWithCommit(context)) {\n                args.commit = context.node.commit;\n            }\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickCommitFileDetailsCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return undefined;\n\n        let workingFileName = args.commit && args.commit.workingFileName;\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        args = { ...args };\n        if (args.sha === undefined) {\n            if (editor == null) return undefined;\n\n            const blameline = editor.selection.active.line;\n            if (blameline < 0) return undefined;\n\n            try {\n                const blame = await Container.git.getBlameForLine(gitUri, blameline);\n                if (blame === undefined) {\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to show commit file details');\n                }\n\n                // Because the previous sha of an uncommitted file isn't trust worthy we just have to kick out\n                if (blame.commit.isUncommitted) {\n                    return Messages.showLineUncommittedWarningMessage('Unable to show commit file details');\n                }\n\n                args.sha = blame.commit.sha;\n\n                args.commit = blame.commit;\n                workingFileName = paths.relative(args.commit.repoPath, gitUri.fsPath);\n            }\n            catch (ex) {\n                Logger.error(ex, 'ShowQuickCommitFileDetailsCommand', `getBlameForLine(${blameline})`);\n                return window.showErrorMessage(\n                    `Unable to show commit file details. See output channel for more details`\n                );\n            }\n        }\n\n        try {\n            if (args.commit === undefined || !args.commit.isFile) {\n                if (args.commit !== undefined) {\n                    workingFileName = undefined;\n                }\n\n                if (args.fileLog !== undefined) {\n                    args.commit = args.fileLog.commits.get(args.sha!);\n                    // If we can't find the commit, kill the fileLog\n                    if (args.commit === undefined) {\n                        args.fileLog = undefined;\n                    }\n                }\n\n                if (args.fileLog === undefined) {\n                    args.commit = await Container.git.getLogCommitForFile(\n                        args.commit === undefined ? gitUri.repoPath : args.commit.repoPath,\n                        gitUri.fsPath,\n                        { ref: args.sha }\n                    );\n                    if (args.commit === undefined) {\n                        return Messages.showCommitNotFoundWarningMessage(`Unable to show commit file details`);\n                    }\n                }\n            }\n\n            if (args.commit === undefined) {\n                return Messages.showCommitNotFoundWarningMessage(`Unable to show commit file details`);\n            }\n\n            // Attempt to the most recent commit -- so that we can find the real working filename if there was a rename\n            args.commit.workingFileName = workingFileName;\n            [args.commit.workingFileName] = await Container.git.findWorkingFileName(args.commit);\n\n            const shortSha = GitService.shortenSha(args.sha!);\n\n            if (args.goBackCommand === undefined) {\n                // Create a command to get back to the commit details\n                args.goBackCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to details of ${\n                            GlyphChars.Space\n                        }$(git-commit) ${shortSha}`\n                    },\n                    Commands.ShowQuickCommitDetails,\n                    [\n                        args.commit.toGitUri(),\n                        {\n                            commit: args.commit,\n                            sha: args.sha\n                        } as ShowQuickCommitDetailsCommandArgs\n                    ]\n                );\n            }\n\n            // Create a command to get back to where we are right now\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to details of ${\n                        GlyphChars.Space\n                    }$(file-text) ${paths.basename(args.commit.fileName)} in ${\n                        GlyphChars.Space\n                    }$(git-commit) ${shortSha}`\n                },\n                Commands.ShowQuickCommitFileDetails,\n                [args.commit.toGitUri(), args]\n            );\n\n            const pick = await CommitFileQuickPick.show(\n                args.commit as GitLogCommit,\n                uri,\n                args.goBackCommand,\n                currentCommand,\n                args.fileLog\n            );\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickCommitFileDetailsCommand');\n            return Messages.showGenericErrorMessage('Unable to show commit file details');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem } from '../quickpicks';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\nimport { ShowQuickBranchHistoryCommandArgs } from './showQuickBranchHistory';\n\nexport interface ShowQuickCurrentBranchHistoryCommandArgs {\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickCurrentBranchHistoryCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickCurrentBranchHistory);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickCurrentBranchHistoryCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Show current branch history for which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            const branch = await Container.git.getBranch(repoPath);\n            if (branch === undefined) return undefined;\n\n            return commands.executeCommand(Commands.ShowQuickBranchHistory, uri, {\n                branch: branch.name,\n                repoPath: repoPath,\n                goBackCommand: args.goBackCommand\n            } as ShowQuickBranchHistoryCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickCurrentBranchHistoryCommand');\n            return Messages.showGenericErrorMessage('Unable to show branch history');\n        }\n    }\n}\n","'use strict';\nimport * as paths from 'path';\nimport { commands, Range, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitBranch, GitLog, GitTag, GitUri } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport {\n    ChooseFromBranchesAndTagsQuickPickItem,\n    CommandQuickPickItem,\n    FileHistoryQuickPick,\n    ShowFileHistoryInViewQuickPickItem\n} from '../quickpicks';\nimport { Iterables, Strings } from '../system';\nimport { ActiveEditorCachedCommand, command, CommandContext, Commands, getCommandUri } from './common';\nimport { ShowQuickCommitFileDetailsCommandArgs } from './showQuickCommitFileDetails';\n\nexport interface ShowQuickFileHistoryCommandArgs {\n    branchOrTag?: GitBranch | GitTag;\n    log?: GitLog;\n    maxCount?: number;\n    range?: Range;\n    showInView?: boolean;\n\n    goBackCommand?: CommandQuickPickItem;\n    nextPageCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickFileHistoryCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super([Commands.ShowFileHistoryInView, Commands.ShowQuickFileHistory]);\n    }\n\n    protected async preExecute(context: CommandContext, args: ShowQuickFileHistoryCommandArgs = {}): Promise<any> {\n        if (context.command === Commands.ShowFileHistoryInView) {\n            args = { ...args };\n            args.showInView = true;\n        }\n\n        return this.execute(context.editor, context.uri, args);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickFileHistoryCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n        if (uri == null) return commands.executeCommand(Commands.ShowQuickCurrentBranchHistory);\n\n        const gitUri = await GitUri.fromUri(uri);\n\n        if (args.showInView) {\n            await Container.fileHistoryView.showHistoryForUri(gitUri);\n\n            return undefined;\n        }\n\n        args = { ...args };\n\n        const placeHolder = `${gitUri.getFormattedPath({\n            suffix: args.branchOrTag ? ` (${args.branchOrTag.name})` : undefined\n        })}${gitUri.sha ? ` ${Strings.pad(GlyphChars.Dot, 1, 1)} ${gitUri.shortSha}` : ''}`;\n\n        const progressCancellation = FileHistoryQuickPick.showProgress(placeHolder);\n\n        try {\n            if (args.log === undefined) {\n                args.log = await Container.git.getLogForFile(gitUri.repoPath, gitUri.fsPath, {\n                    maxCount: args.maxCount,\n                    range: args.range,\n                    ref: (args.branchOrTag && args.branchOrTag.ref) || gitUri.sha\n                });\n                if (args.log === undefined) {\n                    if (args.branchOrTag) {\n                        return window.showWarningMessage(`The file could not be found in ${args.branchOrTag.name}`);\n                    }\n                    return Messages.showFileNotUnderSourceControlWarningMessage('Unable to show file history');\n                }\n            }\n\n            if (progressCancellation !== undefined && progressCancellation.token.isCancellationRequested) {\n                return undefined;\n            }\n\n            let previousPageCommand: CommandQuickPickItem | undefined = undefined;\n\n            if (args.log.truncated) {\n                const npc = new CommandQuickPickItem(\n                    {\n                        label: `$(arrow-right) Show Next Commits`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${args.log.maxCount} newer commits`\n                    },\n                    Commands.ShowQuickFileHistory,\n                    [gitUri, { ...args, log: undefined } as ShowQuickFileHistoryCommandArgs]\n                );\n\n                const last = Iterables.last(args.log.commits.values());\n                if (last != null) {\n                    previousPageCommand = new CommandQuickPickItem(\n                        {\n                            label: `$(arrow-left) Show Previous Commits`,\n                            description: `${Strings.pad(GlyphChars.Dash, 2, 3)} shows ${\n                                args.log.maxCount\n                            } older commits`\n                        },\n                        Commands.ShowQuickFileHistory,\n                        [\n                            new GitUri(uri, last),\n                            { ...args, log: undefined, nextPageCommand: npc } as ShowQuickFileHistoryCommandArgs\n                        ]\n                    );\n                }\n            }\n\n            // Create a command to get back to where we are right now\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to history of ${\n                        GlyphChars.Space\n                    }$(file-text) ${paths.basename(gitUri.fsPath)}${\n                        args.branchOrTag\n                            ? ` from ${GlyphChars.Space}${\n                                  args.branchOrTag instanceof GitTag ? '$(tag)' : '$(git-branch)'\n                              } ${args.branchOrTag.name}`\n                            : gitUri.sha\n                            ? ` from ${GlyphChars.Space}$(git-commit) ${gitUri.shortSha}`\n                            : ''\n                    }`\n                },\n                Commands.ShowQuickFileHistory,\n                [uri, args]\n            );\n\n            const pick = await FileHistoryQuickPick.show(args.log, gitUri, placeHolder, {\n                progressCancellation: progressCancellation,\n                currentCommand: currentCommand,\n                goBackCommand: args.goBackCommand,\n                nextPageCommand: args.nextPageCommand,\n                previousPageCommand: previousPageCommand,\n                showAllCommand:\n                    args.log !== undefined && args.log.truncated\n                        ? new CommandQuickPickItem(\n                              {\n                                  label: `$(sync) Show All Commits`,\n                                  description: `${Strings.pad(GlyphChars.Dash, 2, 3)} this may take a while`\n                              },\n                              Commands.ShowQuickFileHistory,\n                              [uri, { ...args, log: undefined, maxCount: 0 }]\n                          )\n                        : undefined,\n                showInViewCommand:\n                    args.log !== undefined\n                        ? new ShowFileHistoryInViewQuickPickItem(\n                              gitUri,\n                              (args.branchOrTag && args.branchOrTag.ref) || gitUri.sha\n                          )\n                        : undefined\n            });\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof ChooseFromBranchesAndTagsQuickPickItem) {\n                const branchOrTag = await pick.execute();\n                if (branchOrTag === undefined) return undefined;\n                if (branchOrTag instanceof CommandQuickPickItem) return branchOrTag.execute();\n\n                return commands.executeCommand(Commands.ShowQuickFileHistory, gitUri, {\n                    ...args,\n                    log: undefined,\n                    branchOrTag: branchOrTag.item,\n                    goBackCommand: currentCommand\n                } as ShowQuickFileHistoryCommandArgs);\n            }\n            else {\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n            }\n\n            return commands.executeCommand(Commands.ShowQuickCommitFileDetails, pick.commit.toGitUri(), {\n                commit: pick.commit,\n                fileLog: args.log,\n                sha: pick.commit.sha,\n                goBackCommand: currentCommand\n            } as ShowQuickCommitFileDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickFileHistoryCommand');\n            return Messages.showGenericErrorMessage('Unable to show file history');\n        }\n        finally {\n            progressCancellation && progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, RepoStatusQuickPick } from '../quickpicks';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\n\nexport interface ShowQuickRepoStatusCommandArgs {\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickRepoStatusCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickRepoStatus);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickRepoStatusCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Show status for which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            const status = await Container.git.getStatusForRepo(repoPath);\n            if (status === undefined) return window.showWarningMessage(`Unable to show repository status`);\n\n            const pick = await RepoStatusQuickPick.show(status, args.goBackCommand);\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            return undefined;\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickRepoStatusCommand');\n            return Messages.showGenericErrorMessage('Unable to show repository status');\n        }\n    }\n}\n","'use strict';\nimport { commands, TextEditor, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, StashListQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport { ActiveEditorCachedCommand, command, Commands, getCommandUri, getRepoPathOrActiveOrPrompt } from './common';\nimport { ShowQuickCommitDetailsCommandArgs } from './showQuickCommitDetails';\n\nexport interface ShowQuickStashListCommandArgs {\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class ShowQuickStashListCommand extends ActiveEditorCachedCommand {\n    constructor() {\n        super(Commands.ShowQuickStashList);\n    }\n\n    async execute(editor?: TextEditor, uri?: Uri, args: ShowQuickStashListCommandArgs = {}) {\n        uri = getCommandUri(uri, editor);\n\n        const progressCancellation = StashListQuickPick.showProgress('list');\n\n        try {\n            const repoPath = await getRepoPathOrActiveOrPrompt(\n                uri,\n                editor,\n                `Show stashed changes for which repository${GlyphChars.Ellipsis}`\n            );\n            if (!repoPath) return undefined;\n\n            const stash = await Container.git.getStashList(repoPath);\n            if (stash === undefined) return window.showWarningMessage(`Unable to show stashed changes`);\n\n            if (progressCancellation.token.isCancellationRequested) return undefined;\n\n            // Create a command to get back to here\n            const currentCommand = new CommandQuickPickItem(\n                {\n                    label: `go back ${GlyphChars.ArrowBack}`,\n                    description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to stashed changes`\n                },\n                Commands.ShowQuickStashList,\n                [\n                    uri,\n                    {\n                        goBackCommand: args.goBackCommand\n                    } as ShowQuickStashListCommandArgs\n                ]\n            );\n\n            const pick = await StashListQuickPick.show(\n                stash,\n                'list',\n                progressCancellation,\n                args.goBackCommand,\n                currentCommand\n            );\n            if (pick === undefined) return undefined;\n\n            if (pick instanceof CommandQuickPickItem) return pick.execute();\n\n            return commands.executeCommand(Commands.ShowQuickCommitDetails, pick.commit.toGitUri(), {\n                commit: pick.commit,\n                sha: pick.commit.sha,\n                goBackCommand: currentCommand\n            } as ShowQuickCommitDetailsCommandArgs);\n        }\n        catch (ex) {\n            Logger.error(ex, 'ShowQuickStashListCommand');\n            return Messages.showGenericErrorMessage('Unable to show stashed changes');\n        }\n        finally {\n            progressCancellation.cancel();\n        }\n    }\n}\n","'use strict';\nimport { Container } from '../container';\nimport { command, Command, CommandContext, Commands } from './common';\n\n@command()\nexport class ShowViewCommand extends Command {\n    constructor() {\n        super([\n            Commands.ShowCompareView,\n            Commands.ShowFileHistoryView,\n            Commands.ShowLineHistoryView,\n            Commands.ShowRepositoriesView,\n            Commands.ShowSearchView\n        ]);\n    }\n\n    protected async preExecute(context: CommandContext): Promise<any> {\n        return this.execute(context.command as Commands);\n    }\n\n    execute(command: Commands) {\n        switch (command) {\n            case Commands.ShowCompareView:\n                return Container.compareView.show();\n            case Commands.ShowFileHistoryView:\n                return Container.fileHistoryView.show();\n            case Commands.ShowLineHistoryView:\n                return Container.lineHistoryView.show();\n            case Commands.ShowRepositoriesView:\n                return Container.repositoriesView.show();\n            case Commands.ShowSearchView:\n                return Container.searchView.show();\n        }\n\n        return undefined;\n    }\n}\n","'use strict';\nimport { MessageItem, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitStashCommit } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem, StashListQuickPick } from '../quickpicks';\nimport { Strings } from '../system';\nimport {\n    command,\n    Command,\n    CommandContext,\n    Commands,\n    getRepoPathOrPrompt,\n    isCommandViewContextWithCommit,\n    isCommandViewContextWithRepo\n} from './common';\n\nexport interface StashApplyCommandArgs {\n    confirm?: boolean;\n    deleteAfter?: boolean;\n    repoPath?: string;\n    stashItem?: { stashName: string; message: string; repoPath: string };\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class StashApplyCommand extends Command {\n    constructor() {\n        super(Commands.StashApply);\n    }\n\n    protected async preExecute(\n        context: CommandContext,\n        args: StashApplyCommandArgs = { confirm: true, deleteAfter: false }\n    ) {\n        if (isCommandViewContextWithCommit<GitStashCommit>(context)) {\n            args = { ...args };\n            args.stashItem = context.node.commit;\n            return this.execute(args);\n        }\n        else if (isCommandViewContextWithRepo(context)) {\n            args = { ...args };\n            args.repoPath = context.node.repo.path;\n        }\n\n        return this.execute(args);\n    }\n\n    async execute(args: StashApplyCommandArgs = { confirm: true, deleteAfter: false }) {\n        args = { ...args };\n\n        if (args.stashItem === undefined || args.stashItem.stashName === undefined) {\n            if (args.repoPath === undefined) {\n                args.repoPath = await getRepoPathOrPrompt(\n                    undefined,\n                    `Apply stashed changes from which repository${GlyphChars.Ellipsis}`,\n                    args.goBackCommand\n                );\n            }\n            if (!args.repoPath) return undefined;\n\n            const progressCancellation = StashListQuickPick.showProgress('apply');\n\n            try {\n                const stash = await Container.git.getStashList(args.repoPath);\n                if (stash === undefined) return window.showInformationMessage(`There are no stashed changes`);\n\n                if (progressCancellation.token.isCancellationRequested) return undefined;\n\n                const currentCommand = new CommandQuickPickItem(\n                    {\n                        label: `go back ${GlyphChars.ArrowBack}`,\n                        description: `${Strings.pad(GlyphChars.Dash, 2, 3)} to apply stashed changes`\n                    },\n                    Commands.StashApply,\n                    [args]\n                );\n\n                const pick = await StashListQuickPick.show(\n                    stash,\n                    'apply',\n                    progressCancellation,\n                    args.goBackCommand,\n                    currentCommand\n                );\n                if (pick instanceof CommandQuickPickItem) return pick.execute();\n                if (pick === undefined) {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n\n                args.goBackCommand = currentCommand;\n                args.stashItem = pick.commit as GitStashCommit;\n            }\n            finally {\n                progressCancellation.cancel();\n            }\n        }\n\n        try {\n            if (args.confirm) {\n                const message =\n                    args.stashItem.message.length > 80\n                        ? `${args.stashItem.message.substring(0, 80)}${GlyphChars.Ellipsis}`\n                        : args.stashItem.message;\n                const result = await window.showWarningMessage(\n                    `Apply stashed changes '${message}' to your working tree?`,\n                    { title: 'Yes, delete after applying' } as MessageItem,\n                    { title: 'Yes' } as MessageItem,\n                    { title: 'No', isCloseAffordance: true } as MessageItem\n                );\n                if (result === undefined || result.title === 'No') {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n\n                args.deleteAfter = result.title !== 'Yes';\n            }\n\n            return await Container.git.stashApply(args.stashItem.repoPath, args.stashItem.stashName, args.deleteAfter);\n        }\n        catch (ex) {\n            Logger.error(ex, 'StashApplyCommand');\n            if (ex.message.includes('Your local changes to the following files would be overwritten by merge')) {\n                return window.showWarningMessage(\n                    `Unable to apply stash. Your working tree changes would be overwritten.`\n                );\n            }\n            else if (ex.message.includes('Auto-merging') && ex.message.includes('CONFLICT')) {\n                return window.showInformationMessage(`Stash applied with conflicts`);\n            }\n            else {\n                return Messages.showGenericErrorMessage(\n                    `Unable to apply stash \\u2014 ${ex.message.trim().replace(/\\n+?/g, '; ')}`\n                );\n            }\n        }\n    }\n}\n","'use strict';\nimport { MessageItem, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitStashCommit } from '../git/gitService';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem } from '../quickpicks';\nimport { command, Command, CommandContext, Commands, isCommandViewContextWithCommit } from './common';\n\nexport interface StashDeleteCommandArgs {\n    confirm?: boolean;\n    stashItem?: { stashName: string; message: string; repoPath: string };\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class StashDeleteCommand extends Command {\n    constructor() {\n        super(Commands.StashDelete);\n    }\n\n    protected async preExecute(context: CommandContext, args: StashDeleteCommandArgs = { confirm: true }) {\n        if (isCommandViewContextWithCommit<GitStashCommit>(context)) {\n            args = { ...args };\n            args.stashItem = context.node.commit;\n            return this.execute(args);\n        }\n\n        return this.execute(args);\n    }\n\n    async execute(args: StashDeleteCommandArgs = { confirm: true }) {\n        args = { ...args };\n        if (\n            args.stashItem === undefined ||\n            args.stashItem.stashName === undefined ||\n            args.stashItem.repoPath === undefined\n        ) {\n            return undefined;\n        }\n\n        if (args.confirm === undefined) {\n            args.confirm = true;\n        }\n\n        try {\n            if (args.confirm) {\n                const message =\n                    args.stashItem.message.length > 80\n                        ? `${args.stashItem.message.substring(0, 80)}${GlyphChars.Ellipsis}`\n                        : args.stashItem.message;\n                const result = await window.showWarningMessage(\n                    `Delete stashed changes '${message}'?`,\n                    { title: 'Yes' } as MessageItem,\n                    { title: 'No', isCloseAffordance: true } as MessageItem\n                );\n                if (result === undefined || result.title !== 'Yes') {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n            }\n\n            return await Container.git.stashDelete(args.stashItem.repoPath, args.stashItem.stashName);\n        }\n        catch (ex) {\n            Logger.error(ex, 'StashDeleteCommand');\n            return Messages.showGenericErrorMessage('Unable to delete stash');\n        }\n    }\n}\n","'use strict';\nimport { InputBoxOptions, Uri, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\nimport { GitUri } from '../git/gitUri';\nimport { Logger } from '../logger';\nimport { Messages } from '../messages';\nimport { CommandQuickPickItem } from '../quickpicks';\nimport {\n    command,\n    Command,\n    CommandContext,\n    Commands,\n    getRepoPathOrPrompt,\n    isCommandViewContextWithFile,\n    isCommandViewContextWithRepo,\n    isCommandViewContextWithRepoPath\n} from './common';\n\nexport interface StashSaveCommandArgs {\n    message?: string;\n    repoPath?: string;\n    uris?: Uri[];\n\n    goBackCommand?: CommandQuickPickItem;\n}\n\n@command()\nexport class StashSaveCommand extends Command {\n    constructor() {\n        super([Commands.StashSave, Commands.StashSaveFiles]);\n    }\n\n    protected async preExecute(context: CommandContext, args: StashSaveCommandArgs = {}): Promise<any> {\n        if (isCommandViewContextWithFile(context)) {\n            args = { ...args };\n            args.uris = [GitUri.fromFile(context.node.file, context.node.file.repoPath || context.node.repoPath)];\n        }\n        else if (isCommandViewContextWithRepo(context)) {\n            args = { ...args };\n            args.repoPath = context.node.repo.path;\n        }\n        else if (isCommandViewContextWithRepoPath(context)) {\n            args = { ...args };\n            args.repoPath = context.node.repoPath;\n        }\n        else if (context.type === 'scm-states') {\n            args = { ...args };\n            args.uris = context.scmResourceStates.map(s => s.resourceUri);\n        }\n        else if (context.type === 'scm-groups') {\n            args = { ...args };\n            args.uris = context.scmResourceGroups.reduce<Uri[]>(\n                (a, b) => a.concat(b.resourceStates.map(s => s.resourceUri)),\n                []\n            );\n        }\n\n        return this.execute(args);\n    }\n\n    async execute(args: StashSaveCommandArgs = {}) {\n        args = { ...args };\n\n        const uri = args.uris !== undefined && args.uris.length !== 0 ? args.uris[0] : undefined;\n        if (args.repoPath === undefined) {\n            args.repoPath = await getRepoPathOrPrompt(\n                uri,\n                `Stash changes for which repository${GlyphChars.Ellipsis}`,\n                args.goBackCommand\n            );\n        }\n        if (!args.repoPath) return undefined;\n\n        try {\n            if (args.message == null) {\n                args.message = await window.showInputBox({\n                    prompt: `Please provide a stash message`,\n                    placeHolder: `Stash message`\n                } as InputBoxOptions);\n                if (args.message === undefined) {\n                    return args.goBackCommand === undefined ? undefined : args.goBackCommand.execute();\n                }\n            }\n\n            return await Container.git.stashSave(args.repoPath, args.message, args.uris);\n        }\n        catch (ex) {\n            Logger.error(ex, 'StashSaveCommand');\n\n            const msg = ex && ex.message;\n            if (msg.includes('newer version of Git')) {\n                return window.showErrorMessage(`Unable to save stash. ${msg}`);\n            }\n            return Messages.showGenericErrorMessage('Unable to save stash');\n        }\n    }\n}\n","'use strict';\nimport { Messages } from '../messages';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class SupportGitLensCommand extends Command {\n    constructor() {\n        super(Commands.SupportGitLens);\n    }\n\n    async execute() {\n        return Messages.showSupportGitLensMessage();\n    }\n}\n","'use strict';\nimport { ConfigurationTarget } from 'vscode';\nimport { configuration } from '../configuration';\nimport { Container } from '../container';\nimport { ModesQuickPick } from '../quickpicks';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class SwitchModeCommand extends Command {\n    constructor() {\n        super(Commands.SwitchMode);\n    }\n\n    async execute() {\n        const pick = await ModesQuickPick.show();\n        if (pick === undefined) return;\n\n        await configuration.update(configuration.name('mode')('active').value, pick.key, ConfigurationTarget.Global);\n    }\n}\n\n@command()\nexport class ToggleReviewModeCommand extends Command {\n    constructor() {\n        super(Commands.ToggleReviewMode);\n    }\n\n    async execute() {\n        if (!Object.keys(Container.config.modes).includes('review')) return;\n\n        const mode = Container.config.mode.active === 'review' ? undefined : 'review';\n        await configuration.update(configuration.name('mode')('active').value, mode, ConfigurationTarget.Global);\n    }\n}\n\n@command()\nexport class ToggleZenModeCommand extends Command {\n    constructor() {\n        super(Commands.ToggleZenMode);\n    }\n\n    async execute() {\n        if (!Object.keys(Container.config.modes).includes('zen')) return;\n\n        const mode = Container.config.mode.active === 'zen' ? undefined : 'zen';\n        await configuration.update(configuration.name('mode')('active').value, mode, ConfigurationTarget.Global);\n    }\n}\n","'use strict';\nimport { QuickPickItem, QuickPickOptions, window } from 'vscode';\nimport { GlyphChars } from '../constants';\nimport { Container } from '../container';\n\nexport interface ModesQuickPickItem extends QuickPickItem {\n    key: string | undefined;\n}\n\nexport class ModesQuickPick {\n    static async show(): Promise<ModesQuickPickItem | undefined> {\n        const modes = Object.keys(Container.config.modes);\n        if (modes.length === 0) return undefined;\n\n        const mode = Container.config.mode.active;\n\n        const items = modes.map(key => {\n            const modeCfg = Container.config.modes[key];\n            return {\n                label: `${mode === key ? '$(check)\\u00a0\\u00a0' : '\\u00a0\\u00a0\\u00a0\\u00a0\\u00a0'}${\n                    modeCfg.name\n                } mode`,\n                description: modeCfg.description ? `\\u00a0${GlyphChars.Dash}\\u00a0 ${modeCfg.description}` : '',\n                key: key\n            } as ModesQuickPickItem;\n        });\n\n        if (mode) {\n            items.splice(0, 0, {\n                label: `Exit ${Container.config.modes[mode].name} mode`,\n                key: undefined\n            } as ModesQuickPickItem);\n        }\n\n        const pick = await window.showQuickPick(items, {\n            placeHolder: 'select a GitLens mode to enter'\n        } as QuickPickOptions);\n\n        return pick;\n    }\n}\n","'use strict';\nimport { Container } from '../container';\nimport { command, Command, Commands } from './common';\n\n@command()\nexport class ToggleCodeLensCommand extends Command {\n    constructor() {\n        super(Commands.ToggleCodeLens);\n    }\n\n    execute() {\n        return Container.codeLens.toggleCodeLens();\n    }\n}\n","'use strict';\nimport { commands, ExtensionContext, extensions, window, workspace } from 'vscode';\nimport { Commands, registerCommands } from './commands';\nimport { Config, configuration, Configuration } from './configuration';\nimport { CommandContext, extensionQualifiedId, GlobalState, GlyphChars, setCommandContext } from './constants';\nimport { Container } from './container';\nimport { GitCommit, GitService, GitUri } from './git/gitService';\nimport { Logger } from './logger';\nimport { Messages } from './messages';\nimport { Strings, Versions } from './system';\nimport { ModeConfig } from './ui/config';\n// import { Telemetry } from './telemetry';\n\nexport async function activate(context: ExtensionContext) {\n    const start = process.hrtime();\n\n    // Pretend we are enabled (until we know otherwise) and set the view contexts to reduce flashing on load\n    setCommandContext(CommandContext.Enabled, true);\n\n    Logger.configure(context, o => {\n        if (o instanceof GitUri) {\n            return `GitUri(${o.toString(true)}${o.repoPath ? ` repoPath=${o.repoPath}` : ''}${\n                o.sha ? ` sha=${o.sha}` : ''\n            })`;\n        }\n\n        if (o instanceof GitCommit) {\n            return `GitCommit(${o.sha ? ` sha=${o.sha}` : ''}${o.repoPath ? ` repoPath=${o.repoPath}` : ''})`;\n        }\n\n        return undefined;\n    });\n\n    const gitlens = extensions.getExtension(extensionQualifiedId)!;\n    const gitlensVersion = gitlens.packageJSON.version;\n\n    const enabled = workspace.getConfiguration('git', null!).get<boolean>('enabled', true);\n    if (!enabled) {\n        Logger.log(`GitLens(v${gitlensVersion}) was NOT activated -- \"git.enabled\": false`);\n        setCommandContext(CommandContext.Enabled, false);\n\n        void Messages.showGitDisabledErrorMessage();\n\n        return;\n    }\n\n    Configuration.configure(context);\n\n    const cfg = configuration.get<Config>();\n\n    const previousVersion = context.globalState.get<string>(GlobalState.GitLensVersion);\n    await migrateSettings(context, previousVersion);\n\n    try {\n        await GitService.initialize();\n    }\n    catch (ex) {\n        Logger.error(ex, `GitLens(v${gitlensVersion}).activate`);\n        setCommandContext(CommandContext.Enabled, false);\n\n        if (ex.message.includes('Unable to find git')) {\n            await window.showErrorMessage(\n                `GitLens was unable to find Git. Please make sure Git is installed. Also ensure that Git is either in the PATH, or that 'git.path' is pointed to its installed location.`\n            );\n        }\n\n        return;\n    }\n\n    Container.initialize(context, cfg);\n\n    registerCommands(context);\n\n    const gitVersion = GitService.getGitVersion();\n\n    // Telemetry.configure(ApplicationInsightsKey);\n\n    // const telemetryContext: { [id: string]: any } = Object.create(null);\n    // telemetryContext.version = gitlensVersion;\n    // telemetryContext['git.version'] = gitVersion;\n    // Telemetry.setContext(telemetryContext);\n\n    notifyOnUnsupportedGitVersion(gitVersion);\n    void showWelcomePage(gitlensVersion, previousVersion);\n\n    context.globalState.update(GlobalState.GitLensVersion, gitlensVersion);\n\n    // Constantly over my data cap so stop collecting initialized event\n    // Telemetry.trackEvent('initialized', Objects.flatten(cfg, 'config', true));\n\n    Logger.log(`GitLens(v${gitlensVersion}) activated ${GlyphChars.Dot} ${Strings.getDurationMilliseconds(start)} ms`);\n}\n\nexport function deactivate() {}\n\nasync function migrateSettings(context: ExtensionContext, previousVersion: string | undefined) {\n    if (previousVersion === undefined) return;\n\n    const previous = Versions.fromString(previousVersion);\n\n    try {\n        if (Versions.compare(previous, Versions.from(9, 0, 0)) !== 1) {\n            await configuration.migrate(\n                'gitExplorer.autoRefresh',\n                configuration.name('views')('repositories')('autoRefresh').value\n            );\n            await configuration.migrate(\n                'gitExplorer.branches.layout',\n                configuration.name('views')('repositories')('branches')('layout').value\n            );\n            await configuration.migrate(\n                'gitExplorer.enabled',\n                configuration.name('views')('repositories')('enabled').value\n            );\n            await configuration.migrate(\n                'gitExplorer.files.compact',\n                configuration.name('views')('repositories')('files')('compact').value\n            );\n            await configuration.migrate(\n                'gitExplorer.files.layout',\n                configuration.name('views')('repositories')('files')('layout').value\n            );\n            await configuration.migrate(\n                'gitExplorer.files.threshold',\n                configuration.name('views')('repositories')('files')('threshold').value\n            );\n            await configuration.migrate(\n                'gitExplorer.includeWorkingTree',\n                configuration.name('views')('repositories')('includeWorkingTree').value\n            );\n            await configuration.migrate(\n                'gitExplorer.location',\n                configuration.name('views')('repositories')('location').value\n            );\n            await configuration.migrate(\n                'gitExplorer.showTrackingBranch',\n                configuration.name('views')('repositories')('showTrackingBranch').value\n            );\n\n            await configuration.migrate(\n                'historyExplorer.avatars',\n                configuration.name('views')('fileHistory')('avatars').value\n            );\n            await configuration.migrate(\n                'historyExplorer.enabled',\n                configuration.name('views')('fileHistory')('enabled').value\n            );\n            await configuration.migrate(\n                'historyExplorer.location',\n                configuration.name('views')('fileHistory')('location').value\n            );\n\n            await configuration.migrate(\n                'historyExplorer.avatars',\n                configuration.name('views')('lineHistory')('avatars').value\n            );\n            await configuration.migrate(\n                'historyExplorer.enabled',\n                configuration.name('views')('lineHistory')('enabled').value\n            );\n            await configuration.migrate(\n                'historyExplorer.location',\n                configuration.name('views')('lineHistory')('location').value\n            );\n\n            await configuration.migrate(\n                'resultsExplorer.files.compact',\n                configuration.name('views')('compare')('files')('compact').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.layout',\n                configuration.name('views')('compare')('files')('layout').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.threshold',\n                configuration.name('views')('compare')('files')('threshold').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.location',\n                configuration.name('views')('compare')('location').value\n            );\n\n            await configuration.migrate(\n                'resultsExplorer.files.compact',\n                configuration.name('views')('search')('files')('compact').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.layout',\n                configuration.name('views')('search')('files')('layout').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.files.threshold',\n                configuration.name('views')('search')('files')('threshold').value\n            );\n            await configuration.migrate(\n                'resultsExplorer.location',\n                configuration.name('views')('search')('location').value\n            );\n\n            await configuration.migrate('explorers.avatars', configuration.name('views')('avatars').value);\n            await configuration.migrate(\n                'explorers.commitFileFormat',\n                configuration.name('views')('commitFileFormat').value\n            );\n            await configuration.migrate('explorers.commitFormat', configuration.name('views')('commitFormat').value);\n            await configuration.migrate(\n                'explorers.defaultItemLimit',\n                configuration.name('views')('defaultItemLimit').value\n            );\n            await configuration.migrate(\n                'explorers.files.compact',\n                configuration.name('views')('files')('compact').value\n            );\n            await configuration.migrate('explorers.files.layout', configuration.name('views')('files')('layout').value);\n            await configuration.migrate(\n                'explorers.files.threshold',\n                configuration.name('views')('files')('threshold').value\n            );\n            await configuration.migrate(\n                'explorers.stashFileFormat',\n                configuration.name('views')('stashFileFormat').value\n            );\n            await configuration.migrate('explorers.stashFormat', configuration.name('views')('stashFormat').value);\n            await configuration.migrate(\n                'explorers.statusFileFormat',\n                configuration.name('views')('statusFileFormat').value\n            );\n\n            await configuration.migrate<\n                {\n                    [key: string]: {\n                        name: string;\n                        statusBarItemName?: string;\n                        description?: string;\n                        codeLens?: boolean;\n                        currentLine?: boolean;\n                        explorers?: boolean;\n                        hovers?: boolean;\n                        statusBar?: boolean;\n                    };\n                },\n                {\n                    [key: string]: ModeConfig;\n                }\n            >('modes', configuration.name('modes').value, {\n                migrationFn: v => {\n                    const modes = Object.create(null);\n\n                    for (const k in v) {\n                        const { explorers, ...mode } = v[k];\n                        modes[k] = { ...mode, views: explorers };\n                    }\n\n                    return modes;\n                }\n            });\n        }\n    }\n    catch (ex) {\n        Logger.error(ex, 'migrateSettings');\n    }\n}\n\nfunction notifyOnUnsupportedGitVersion(version: string) {\n    if (GitService.compareGitVersion('2.2.0') !== -1) return;\n\n    // If git is less than v2.2.0\n    void Messages.showGitVersionUnsupportedErrorMessage(version);\n}\n\nasync function showWelcomePage(version: string, previousVersion: string | undefined) {\n    if (previousVersion === undefined) {\n        Logger.log(`GitLens first-time install`);\n\n        if (Container.config.showWhatsNewAfterUpgrades) {\n            await commands.executeCommand(Commands.ShowWelcomePage);\n        }\n\n        return;\n    }\n\n    if (previousVersion !== version) {\n        Logger.log(`GitLens upgraded from v${previousVersion} to v${version}`);\n    }\n\n    const [major, minor] = version.split('.');\n    const [prevMajor, prevMinor] = previousVersion.split('.');\n    if (\n        (major === prevMajor && minor === prevMinor) ||\n        // Don't notify on downgrades\n        (major < prevMajor || (major === prevMajor && minor < prevMinor))\n    ) {\n        return;\n    }\n\n    if (Container.config.showWhatsNewAfterUpgrades && major !== prevMajor) {\n        await commands.executeCommand(Commands.ShowWelcomePage);\n    }\n    else {\n        await Messages.showWhatsNewMessage(version);\n    }\n}\n"],"sourceRoot":""}